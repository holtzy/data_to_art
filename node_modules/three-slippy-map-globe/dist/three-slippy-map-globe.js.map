{"version":3,"file":"three-slippy-map-globe.js","sources":["../node_modules/d3-octree/src/add.js","../node_modules/d3-octree/src/cover.js","../node_modules/d3-octree/src/data.js","../node_modules/d3-octree/src/extent.js","../node_modules/d3-octree/src/octant.js","../node_modules/d3-octree/src/find.js","../node_modules/d3-octree/src/findAll.js","../node_modules/d3-octree/src/remove.js","../node_modules/d3-octree/src/root.js","../node_modules/d3-octree/src/size.js","../node_modules/d3-octree/src/visit.js","../node_modules/d3-octree/src/visitAfter.js","../node_modules/d3-octree/src/x.js","../node_modules/d3-octree/src/y.js","../node_modules/d3-octree/src/z.js","../node_modules/d3-octree/src/octree.js","../src/utils/gc.js","../src/utils/coordTranslate.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/descending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/number.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-scale/src/init.js","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/d3-interpolate/src/constant.js","../node_modules/d3-interpolate/src/color.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/string.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/round.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-format/src/precisionRound.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-scale/src/linear.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/projection/mercator.js","../src/utils/mercator.js","../src/utils/tileGenerator.js","../src/SlippyMapGlobe.js"],"sourcesContent":["export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d),\n      z = +this._z.call(null, d);\n  return add(this.cover(x, y, z), x, y, z, d);\n}\n\nfunction add(tree, x, y, z, d) {\n  if (isNaN(x) || isNaN(y) || isNaN(z)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      z0 = tree._z0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      z1 = tree._z1,\n      xm,\n      ym,\n      zm,\n      xp,\n      yp,\n      zp,\n      right,\n      bottom,\n      deep,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (deep = z >= (zm = (z0 + z1) / 2)) z0 = zm; else z1 = zm;\n    if (parent = node, !(node = node[i = deep << 2 | bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  zp = +tree._z.call(null, node.data);\n  if (x === xp && y === yp && z === zp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(8) : tree._root = new Array(8);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (deep = z >= (zm = (z0 + z1) / 2)) z0 = zm; else z1 = zm;\n  } while ((i = deep << 2 | bottom << 1 | right) === (j = (zp >= zm) << 2 | (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  if (!Array.isArray(data)) data = Array.from(data);\n  const n = data.length;\n  const xz = new Float64Array(n);\n  const yz = new Float64Array(n);\n  const zz = new Float64Array(n);\n  let x0 = Infinity,\n      y0 = Infinity,\n      z0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity,\n      z1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (let i = 0, d, x, y, z; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d)) || isNaN(z = +this._z.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    zz[i] = z;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n    if (z < z0) z0 = z;\n    if (z > z1) z1 = z;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1 || z0 > z1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0, z0).cover(x1, y1, z1);\n\n  // Add the new points.\n  for (let i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], zz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y, z) {\n  if (isNaN(x = +x) || isNaN(y = +y) || isNaN(z = +z)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      z0 = this._z0,\n      x1 = this._x1,\n      y1 = this._y1,\n      z1 = this._z1;\n\n  // If the octree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing octant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n    z1 = (z0 = Math.floor(z)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var t = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1 || z0 > z || z >= z1) {\n      i = (z < z0) << 2 | (y < y0) << 1 | (x < x0);\n      parent = new Array(8), parent[i] = node, node = parent, t *= 2;\n      switch (i) {\n        case 0: x1 = x0 + t, y1 = y0 + t, z1 = z0 + t; break;\n        case 1: x0 = x1 - t, y1 = y0 + t, z1 = z0 + t; break;\n        case 2: x1 = x0 + t, y0 = y1 - t, z1 = z0 + t; break;\n        case 3: x0 = x1 - t, y0 = y1 - t, z1 = z0 + t; break;\n        case 4: x1 = x0 + t, y1 = y0 + t, z0 = z1 - t; break;\n        case 5: x0 = x1 - t, y1 = y0 + t, z0 = z1 - t; break;\n        case 6: x1 = x0 + t, y0 = y1 - t, z0 = z1 - t; break;\n        case 7: x0 = x1 - t, y0 = y1 - t, z0 = z1 - t; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._z0 = z0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._z1 = z1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1], +_[0][2]).cover(+_[1][0], +_[1][1], +_[1][2])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0, this._z0], [this._x1, this._y1, this._z1]];\n}\n","export default function(node, x0, y0, z0, x1, y1, z1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.z0 = z0;\n  this.x1 = x1;\n  this.y1 = y1;\n  this.z1 = z1;\n}\n","import Octant from \"./octant.js\";\n\nexport default function(x, y, z, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      z0 = this._z0,\n      x1,\n      y1,\n      z1,\n      x2,\n      y2,\n      z2,\n      x3 = this._x1,\n      y3 = this._y1,\n      z3 = this._z1,\n      octs = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) octs.push(new Octant(node, x0, y0, z0, x3, y3, z3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius, z0 = z - radius;\n    x3 = x + radius, y3 = y + radius, z3 = z + radius;\n    radius *= radius;\n  }\n\n  while (q = octs.pop()) {\n\n    // Stop searching if this octant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (z1 = q.z0) > z3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0\n        || (z2 = q.z1) < z0) continue;\n\n    // Bisect the current octant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2,\n          zm = (z1 + z2) / 2;\n\n      octs.push(\n        new Octant(node[7], xm, ym, zm, x2, y2, z2),\n        new Octant(node[6], x1, ym, zm, xm, y2, z2),\n        new Octant(node[5], xm, y1, zm, x2, ym, z2),\n        new Octant(node[4], x1, y1, zm, xm, ym, z2),\n        new Octant(node[3], xm, ym, z1, x2, y2, zm),\n        new Octant(node[2], x1, ym, z1, xm, y2, zm),\n        new Octant(node[1], xm, y1, z1, x2, ym, zm),\n        new Octant(node[0], x1, y1, z1, xm, ym, zm)\n      );\n\n      // Visit the closest octant first.\n      if (i = (z >= zm) << 2 | (y >= ym) << 1 | (x >= xm)) {\n        q = octs[octs.length - 1];\n        octs[octs.length - 1] = octs[octs.length - 1 - i];\n        octs[octs.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          dz = z - +this._z.call(null, node.data),\n          d2 = dx * dx + dy * dy + dz * dz;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d, z0 = z - d;\n        x3 = x + d, y3 = y + d, z3 = z + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","const distance = (x1, y1, z1, x2, y2, z2) => Math.sqrt((x1-x2)**2 + (y1-y2)**2 + (z1-z2)**2);\n\nexport function findAllWithinRadius(x, y, z, radius) {\n  const result = [];\n\n  const xMin = x - radius;\n  const yMin = y - radius;\n  const zMin = z - radius;\n  const xMax = x + radius;\n  const yMax = y + radius;\n  const zMax = z + radius;\n\n  this.visit((node, x1, y1, z1, x2, y2, z2) => {\n    if (!node.length) {\n      do {\n        const d = node.data;\n        if (distance(x, y, z, this._x(d), this._y(d), this._z(d)) <= radius) {\n          result.push(d);\n        }\n      } while (node = node.next);\n    }\n    return x1 > xMax || y1 > yMax || z1 > zMax || x2 < xMin || y2 < yMin || z2 < zMin;\n  });\n\n  return result;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d)) || isNaN(z = +this._z.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      z0 = this._z0,\n      x1 = this._x1,\n      y1 = this._y1,\n      z1 = this._z1,\n      x,\n      y,\n      z,\n      xm,\n      ym,\n      zm,\n      right,\n      bottom,\n      deep,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (deep = z >= (zm = (z0 + z1) / 2)) z0 = zm; else z1 = zm;\n    if (!(parent = node, node = node[i = deep << 2 | bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 7] || parent[(i + 2) & 7] || parent[(i + 3) & 7] || parent[(i + 4) & 7] || parent[(i + 5) & 7] || parent[(i + 6) & 7] || parent[(i + 7) & 7]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3] || parent[4] || parent[5] || parent[6] || parent[7])\n      && node === (parent[7] || parent[6] || parent[5] || parent[4] || parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Octant from \"./octant.js\";\n\nexport default function(callback) {\n  var octs = [], q, node = this._root, child, x0, y0, z0, x1, y1, z1;\n  if (node) octs.push(new Octant(node, this._x0, this._y0, this._z0, this._x1, this._y1, this._z1));\n  while (q = octs.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, z0 = q.z0, x1 = q.x1, y1 = q.y1, z1 = q.z1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2, zm = (z0 + z1) / 2;\n      if (child = node[7]) octs.push(new Octant(child, xm, ym, zm, x1, y1, z1));\n      if (child = node[6]) octs.push(new Octant(child, x0, ym, zm, xm, y1, z1));\n      if (child = node[5]) octs.push(new Octant(child, xm, y0, zm, x1, ym, z1));\n      if (child = node[4]) octs.push(new Octant(child, x0, y0, zm, xm, ym, z1));\n      if (child = node[3]) octs.push(new Octant(child, xm, ym, z0, x1, y1, zm));\n      if (child = node[2]) octs.push(new Octant(child, x0, ym, z0, xm, y1, zm));\n      if (child = node[1]) octs.push(new Octant(child, xm, y0, z0, x1, ym, zm));\n      if (child = node[0]) octs.push(new Octant(child, x0, y0, z0, xm, ym, zm));\n    }\n  }\n  return this;\n}\n","import Octant from \"./octant.js\";\n\nexport default function(callback) {\n  var octs = [], next = [], q;\n  if (this._root) octs.push(new Octant(this._root, this._x0, this._y0, this._z0, this._x1, this._y1, this._z1));\n  while (q = octs.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, z0 = q.z0, x1 = q.x1, y1 = q.y1, z1 = q.z1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2, zm = (z0 + z1) / 2;\n      if (child = node[0]) octs.push(new Octant(child, x0, y0, z0, xm, ym, zm));\n      if (child = node[1]) octs.push(new Octant(child, xm, y0, z0, x1, ym, zm));\n      if (child = node[2]) octs.push(new Octant(child, x0, ym, z0, xm, y1, zm));\n      if (child = node[3]) octs.push(new Octant(child, xm, ym, z0, x1, y1, zm));\n      if (child = node[4]) octs.push(new Octant(child, x0, y0, zm, xm, ym, z1));\n      if (child = node[5]) octs.push(new Octant(child, xm, y0, zm, x1, ym, z1));\n      if (child = node[6]) octs.push(new Octant(child, x0, ym, zm, xm, y1, z1));\n      if (child = node[7]) octs.push(new Octant(child, xm, ym, zm, x1, y1, z1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.z0, q.x1, q.y1, q.z1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","export function defaultZ(d) {\n  return d[2];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._z = _, this) : this._z;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport { findAllWithinRadius as tree_findAllWithinRadius } from \"./findAll.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\nimport tree_z, {defaultZ} from \"./z.js\";\n\nexport default function octree(nodes, x, y, z) {\n  var tree = new Octree(x == null ? defaultX : x, y == null ? defaultY : y, z == null ? defaultZ : z, NaN, NaN, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Octree(x, y, z, x0, y0, z0, x1, y1, z1) {\n  this._x = x;\n  this._y = y;\n  this._z = z;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._z0 = z0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._z1 = z1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = octree.prototype = Octree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Octree(this._x, this._y, this._z, this._x0, this._y0, this._z0, this._x1, this._y1, this._z1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(8)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 8; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(8)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.findAllWithinRadius = tree_findAllWithinRadius;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\ntreeProto.z = tree_z;\n","const materialDispose = material => {\n  if (material instanceof Array) {\n    material.forEach(materialDispose);\n  } else {\n    if (material.map) { material.map.dispose(); }\n    material.dispose();\n  }\n};\n\nconst deallocate = obj => {\n  if (obj.geometry) { obj.geometry.dispose(); }\n  if (obj.material) { materialDispose(obj.material); }\n  if (obj.texture) { obj.texture.dispose(); }\n  if (obj.children) { obj.children.forEach(deallocate); }\n};\n\nconst emptyObject = obj => {\n  if (obj && obj.children) while (obj.children.length) {\n    const childObj = obj.children[0];\n    obj.remove(childObj);\n    deallocate(childObj);\n  }\n};\n\nexport { emptyObject, deallocate };\n","function polar2Cartesian(lat, lng, r) {\n  const phi = (90 - lat) * Math.PI / 180;\n  const theta = (90 - lng) * Math.PI / 180;\n  return {\n    x: r * Math.sin(phi) * Math.cos(theta),\n    y: r * Math.cos(phi),\n    z: r * Math.sin(phi) * Math.sin(theta)\n  };\n}\n\nfunction cartesian2Polar({ x, y, z }) {\n  const r = Math.sqrt(x*x + y*y + z*z);\n  const phi = Math.acos(y / r);\n  const theta = Math.atan2(z, x);\n\n  return {\n    lat: 90 - phi * 180 / Math.PI,\n    lng: 90 - theta * 180 / Math.PI - (theta < -Math.PI / 2 ? 360 : 0), // keep within [-180, 180] boundaries\n    r\n  }\n}\n\nfunction deg2Rad(deg) { return deg * Math.PI / 180; }\nfunction rad2Deg(rad) { return rad / Math.PI * 180; }\n\nexport { polar2Cartesian, cartesian2Polar, rad2Deg, deg2Rad };","export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import { scaleLinear } from 'd3-scale';\nimport { geoMercatorRaw } from 'd3-geo';\n\nconst yMercatorScale = y => 1 - (geoMercatorRaw(0, (0.5 - y) * Math.PI)[1] / Math.PI + 1) / 2;\nconst yMercatorScaleClamped = y => Math.max(0, Math.min(1, yMercatorScale(y)));\nconst yMercatorScaleInvert = y => 0.5 - geoMercatorRaw.invert(0, (2 * (1 - y) - 1) * Math.PI)[1] / Math.PI;\n\nconst convertMercatorUV = (uvs, y0 = 0, y1 = 1) => {\n  const offsetScale = scaleLinear().domain([1, 0]).range([y0, y1]).clamp(true);\n  const revOffsetScale = scaleLinear().domain([yMercatorScaleClamped(y0), yMercatorScaleClamped(y1)]).range([1, 0]).clamp(true);\n  const scale = v => revOffsetScale(yMercatorScaleClamped(offsetScale(v)));\n\n  const arr = uvs.array;\n  for (let i = 0, len = arr.length; i < len; i+=2) {\n    arr[i+1] = scale(arr[i+1]);\n  }\n  uvs.needsUpdate = true;\n}\n\nexport { yMercatorScale, yMercatorScaleInvert, convertMercatorUV }","import { yMercatorScale, yMercatorScaleInvert } from './mercator.js';\n\nexport const findTileXY = (level, isMercator, lng, lat) => {\n  const gridSize = 2 ** level;\n  const x = Math.max(0, Math.min(gridSize - 1, Math.floor((lng + 180) * gridSize / 360)));\n  let relY = (90 - lat) / 180;\n  isMercator && (relY = Math.max(0, Math.min(1, yMercatorScale(relY))));\n  const y = Math.floor(relY * gridSize);\n  return [x, y];\n}\n\nconst genTilesCoords = (level, isMercator, x0 = 0, y0 = 0, _x1, _y1) => {\n  const tiles = [];\n\n  const gridSize = 2 ** level;\n  const tileLngLen = 360 / gridSize;\n  const regTileLatLen = 180 / gridSize;\n\n  const x1 = _x1 === undefined ? gridSize - 1 : _x1;\n  const y1 = _y1 === undefined ? gridSize - 1 : _y1;\n\n  for (let x = x0, maxX = Math.min(gridSize - 1, x1); x <= maxX; x++) {\n    for (let y = y0, maxY = Math.min(gridSize - 1, y1); y <= maxY; y++) {\n      let reproY = y, tileLatLen = regTileLatLen;\n\n      if (isMercator) {\n        // lat needs reprojection, but stretch to cover poles\n        reproY = y === 0 ? y : yMercatorScaleInvert(y / gridSize) * gridSize;\n        const reproYEnd = y + 1 === gridSize ? y + 1 : yMercatorScaleInvert((y + 1) / gridSize) * gridSize;\n        tileLatLen = (reproYEnd - reproY) * 180 / gridSize;\n      }\n\n      // tile centroid coordinates\n      const lng = -180 + (x + 0.5) * tileLngLen;\n      const lat = 90 - (reproY * 180 / gridSize + tileLatLen / 2);\n      const latLen = tileLatLen; // lng is always constant among all tiles\n\n      tiles.push({ x, y, lng, lat, latLen });\n    }\n  }\n\n  return tiles;\n}\n\nexport default genTilesCoords;","import {\n  Camera,\n  Frustum,\n  Group,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  MeshLambertMaterial,\n  SphereGeometry,\n  SRGBColorSpace,\n  TextureLoader,\n  Vector3\n} from 'three';\n\nimport { octree as d3Octree } from 'd3-octree';\n\nimport { emptyObject } from \"./utils/gc.js\";\nimport { deg2Rad, polar2Cartesian, cartesian2Polar } from './utils/coordTranslate.js';\nimport { convertMercatorUV } from './utils/mercator.js';\nimport genTiles, { findTileXY } from './utils/tileGenerator.js';\n\nconst MAX_LEVEL_TO_RENDER_ALL_TILES = 6; // level 6 = 4096 tiles\nconst MAX_LEVEL_TO_BUILD_LOOKUP_OCTREE = 7; // octrees consume too much memory on higher levels, generate tiles on demand for those (based on globe surface distance) as the distortion is negligible\nconst TILE_SEARCH_RADIUS_CAMERA_DISTANCE = 3; // Euclidean distance factor, in units of camera distance to surface\nconst TILE_SEARCH_RADIUS_SURFACE_DISTANCE = 90; // in degrees on the globe surface, relative to camera altitude in globe radius units\n\nexport default class ThreeSlippyMapGlobe extends Group {\n  constructor(radius, {\n    tileUrl,\n    minLevel = 0,\n    maxLevel = 17,\n    mercatorProjection = true\n  } = {}) {\n    super();\n    this.#radius = radius;\n    this.tileUrl = tileUrl;\n    this.#isMercator = mercatorProjection;\n    this.minLevel = minLevel;\n    this.maxLevel = maxLevel;\n    this.level = 0;\n\n    // Add protective black sphere just below surface to prevent any depth buffer anomalies\n    this.add(this.#innerBackLayer = new Mesh(\n      new SphereGeometry(this.#radius * 0.99, 180, 90),\n      new MeshBasicMaterial({ color: 0x0 })\n    ));\n    this.#innerBackLayer.visible = false;\n    this.#innerBackLayer.material.polygonOffset = true;\n    this.#innerBackLayer.material.polygonOffsetUnits = 3;\n    this.#innerBackLayer.material.polygonOffsetFactor = 1;\n  }\n\n  // Private attributes\n  #radius;\n  #isMercator;\n  #tileUrl;\n  #level;\n  #tilesMeta = {};\n  #isInView;\n  #camera;\n  #innerBackLayer;\n\n  // Public attributes\n  get tileUrl() { return this.#tileUrl }\n  set tileUrl(tileUrl) {\n    this.#tileUrl = tileUrl;\n    this.updatePov(this.#camera); // update current view\n  }\n  minLevel;\n  maxLevel;\n  thresholds = [...new Array(30)].map((_, idx) => 8 / 2**idx); // in terms of radius units\n  curvatureResolution = 5; // in degrees, affects number of vertices in tiles\n  tileMargin = 0;\n  get level() { return this.#level }\n  set level(level) {\n    if (!this.#tilesMeta[level]) this.#buildMetaLevel(level);\n\n    const prevLevel = this.#level;\n    this.#level = level;\n\n    if (level === prevLevel || prevLevel === undefined) return; // nothing else to do\n\n    // Activate back layer for levels > 0, when there's !depthWrite tiles\n    this.#innerBackLayer.visible = level > 0;\n\n    // Bring layer to front\n    this.#tilesMeta[level].forEach(d => d.obj && (d.obj.material.depthWrite = true));\n\n    // push lower layers to background\n    prevLevel < level && this.#tilesMeta[prevLevel].forEach(d => d.obj && (d.obj.material.depthWrite = false));\n\n    // Remove upper layers\n    if (prevLevel > level) {\n      for (let l = level + 1; l <= prevLevel; l++) {\n        this.#tilesMeta[l] && this.#tilesMeta[l].forEach(d => {\n          if (d.obj) {\n            this.remove(d.obj);\n            emptyObject(d.obj);\n            delete d.obj;\n          }\n        });\n      }\n    }\n\n    this.#fetchNeededTiles();\n  }\n\n  // Public methods\n  updatePov(camera) {\n    if (!camera || !(camera instanceof Camera)) return;\n\n    this.#camera = camera;\n\n    let frustum;\n    this.#isInView = d => {\n      if (!d.hullPnts) { // cached for next time to improve performance\n        const lngLen = 360 / (2**this.level);\n        const { lng, lat, latLen } = d;\n        const lng0 = lng - lngLen / 2;\n        const lng1 = lng + lngLen / 2;\n        const lat0 = lat - latLen / 2;\n        const lat1 = lat + latLen / 2;\n        d.hullPnts = [[lat, lng], [lat0, lng0], [lat1, lng0], [lat0, lng1], [lat1, lng1]]\n          .map(([lat, lng]) => polar2Cartesian(lat, lng, this.#radius))\n          .map(({ x, y, z }) => new Vector3(x, y, z));\n      }\n\n      if (!frustum) {\n        frustum = new Frustum();\n        camera.updateMatrix();\n        camera.updateMatrixWorld();\n        frustum.setFromProjectionMatrix(new Matrix4().multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse));\n      }\n\n      return d.hullPnts.some(pos =>\n        frustum.containsPoint(pos.clone().applyMatrix4(this.matrixWorld))\n      );\n    }\n\n    if (this.tileUrl) {\n      const pov = camera.position.clone();\n      const distToGlobeCenter = pov.distanceTo(this.getWorldPosition(new Vector3()));\n      const cameraDistance = (distToGlobeCenter - this.#radius) / this.#radius; // in units of globe radius\n\n      const idx = this.thresholds.findIndex(t => t && t <= cameraDistance);\n      this.level = Math.min(this.maxLevel, Math.max(this.minLevel, idx < 0 ? this.thresholds.length : idx));\n      this.#fetchNeededTiles();\n    }\n  }\n\n  clearTiles = () => {\n    Object.values(this.#tilesMeta).forEach(l => {\n      l.forEach(d => {\n        if (d.obj) {\n          this.remove(d.obj);\n          emptyObject(d.obj);\n          delete d.obj;\n        }\n      });\n    });\n    this.#tilesMeta = {};\n  }\n\n  // Private methods\n  #buildMetaLevel(level) {\n    if (level > MAX_LEVEL_TO_BUILD_LOOKUP_OCTREE) {\n      // Generate meta dynamically\n      this.#tilesMeta[level] = [];\n      return;\n    }\n\n    // Generate distance lookup octree\n    const levelMeta = this.#tilesMeta[level] = genTiles(level, this.#isMercator);\n    levelMeta.forEach(d => d.centroid = polar2Cartesian(d.lat, d.lng, this.#radius));\n    levelMeta.octree = d3Octree()\n      .x(d => d.centroid.x)\n      .y(d => d.centroid.y)\n      .z(d => d.centroid.z)\n      .addAll(levelMeta);\n  }\n\n  #fetchNeededTiles(){\n    if (!this.tileUrl || this.level === undefined || !this.#tilesMeta.hasOwnProperty(this.level)) return;\n\n    // Safety if can't check in view tiles for higher levels\n    if (!this.#isInView && this.level > MAX_LEVEL_TO_RENDER_ALL_TILES) return;\n\n    let tiles = this.#tilesMeta[this.level];\n    if (this.#camera) { // Pre-select tiles close to the camera\n      const povPos = this.worldToLocal(this.#camera.position.clone());\n\n      if (tiles.octree) { // Octree based on 3d positions is more accurate\n        const povPos = this.worldToLocal(this.#camera.position.clone());\n        const searchRadius = (povPos.length() - this.#radius) * TILE_SEARCH_RADIUS_CAMERA_DISTANCE;\n        tiles = tiles.octree.findAllWithinRadius(...povPos, searchRadius);\n      } else { // tiles populated dynamically\n        const povCoords = cartesian2Polar(povPos);\n        const searchRadiusLat = (povCoords.r / this.#radius - 1) * TILE_SEARCH_RADIUS_SURFACE_DISTANCE;\n        const searchRadiusLng = searchRadiusLat / Math.cos(deg2Rad(povCoords.lat)); // Distances in longitude degrees shrink towards the poles\n        const lngRange = [povCoords.lng - searchRadiusLng, povCoords.lng + searchRadiusLng];\n        const latRange = [povCoords.lat + searchRadiusLat, povCoords.lat - searchRadiusLat];\n\n        const [x0, y0] = findTileXY(this.level, this.#isMercator, lngRange[0], latRange[0]);\n        const [x1, y1] = findTileXY(this.level, this.#isMercator, lngRange[1], latRange[1]);\n\n        !tiles.record && (tiles.record = {}); // Index gen tiles by XY\n        const r = tiles.record;\n\n        if (!r.hasOwnProperty(`${Math.round((x0+x1)/2)}_${Math.round((y0+y1)/2)}`)) { // gen all found tiles if middle one is not in record\n          tiles = genTiles(this.level, this.#isMercator, x0, y0, x1, y1)\n            .map(d => {\n              const k = `${d.x}_${d.y}`;\n              if (r.hasOwnProperty(k)) return r[k];\n\n              r[k] = d;\n              tiles.push(d);\n              return d;\n            });\n        } else { // gen only those missing, one by one\n          const selTiles = [];\n          for (let x = x0; x <= x1; x++) {\n            for (let y = y0; y <= y1; y++) {\n              const k = `${x}_${y}`;\n              if (!r.hasOwnProperty(k)) {\n                r[k] = genTiles(this.level, this.#isMercator, x, y, x, y)[0];\n                tiles.push(r[k]);\n              }\n              selTiles.push(r[k]);\n            }\n          }\n          tiles = selTiles;\n        }\n      }\n    }\n\n    /*\n    console.log({\n      level: this.level,\n      totalObjs: this.children.length,\n      tilesFound: tiles.length,\n      tilesInView: tiles.filter(this.#isInView || (() => true)).length,\n      levelTiles: this.#tilesMeta[this.level].length,\n      fetched: this.#tilesMeta[this.level].filter(d => d.obj).length,\n      loading: this.#tilesMeta[this.level].filter(d => d.loading).length,\n    });\n    */\n\n    tiles\n      .filter(d => !d.obj)\n      .filter(this.#isInView || (() => true))\n      .forEach(d => {\n        const { x, y, lng, lat, latLen } = d;\n        const lngLen = 360 / (2**this.level);\n\n        if (!d.obj) {\n          const width = lngLen * (1 - this.tileMargin);\n          const height = latLen * (1 - this.tileMargin);\n          const rotLng = deg2Rad(lng);\n          const rotLat = deg2Rad(-lat);\n          const tile = new Mesh(\n            new SphereGeometry(\n              this.#radius,\n              Math.ceil(width / this.curvatureResolution),\n              Math.ceil(height / this.curvatureResolution),\n              deg2Rad(90 - width / 2) + rotLng,\n              deg2Rad(width),\n              deg2Rad(90 - height / 2) + rotLat,\n              deg2Rad(height)\n            ),\n            new MeshLambertMaterial()\n          );\n          if (this.#isMercator) {\n            const [y0, y1] = [lat + latLen / 2, lat - latLen / 2].map(lat => 0.5 - (lat / 180));\n            convertMercatorUV(tile.geometry.attributes.uv, y0, y1);\n          }\n\n          d.obj = tile;\n        }\n\n        if (!d.loading) {\n          d.loading = true;\n\n          // Fetch tile image\n          new TextureLoader().load(this.tileUrl(x, y, this.level), texture => {\n            const tile = d.obj;\n            if (tile) {\n              texture.colorSpace = SRGBColorSpace;\n              tile.material.map = texture;\n              tile.material.color = null;\n              tile.material.needsUpdate = true;\n              this.add(tile);\n            }\n            d.loading = false;\n          });\n        }\n      });\n  }\n}\n"],"names":["tree_addAll","tree_findAllWithinRadius","tree_removeAll","materialDispose","material","Array","forEach","map","dispose","deallocate","obj","geometry","texture","children","emptyObject","length","childObj","remove","polar2Cartesian","lat","lng","r","phi","Math","PI","theta","x","sin","cos","y","z","cartesian2Polar","_ref","sqrt","acos","atan2","deg2Rad","deg","zero","number","rgb","linear","colorRgb","value","identity","constant","bisect","interpolate","interpolateValue","yMercatorScale","geoMercatorRaw","yMercatorScaleClamped","max","min","yMercatorScaleInvert","invert","convertMercatorUV","uvs","y0","arguments","undefined","y1","offsetScale","scaleLinear","domain","range","clamp","revOffsetScale","scale","v","arr","array","i","len","needsUpdate","findTileXY","level","isMercator","gridSize","pow","floor","relY","genTilesCoords","x0","_x1","_y1","tiles","tileLngLen","regTileLatLen","x1","maxX","maxY","reproY","tileLatLen","reproYEnd","latLen","push","MAX_LEVEL_TO_RENDER_ALL_TILES","MAX_LEVEL_TO_BUILD_LOOKUP_OCTREE","TILE_SEARCH_RADIUS_CAMERA_DISTANCE","TILE_SEARCH_RADIUS_SURFACE_DISTANCE","_radius","WeakMap","_isMercator","_tileUrl","_level","_tilesMeta","_isInView","_camera","_innerBackLayer","_ThreeSlippyMapGlobe_brand","WeakSet","ThreeSlippyMapGlobe","_Group","radius","_this","tileUrl","_ref$minLevel","minLevel","_ref$maxLevel","maxLevel","_ref$mercatorProjecti","mercatorProjection","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_defineProperty","_toConsumableArray","_","idx","Object","values","_classPrivateFieldGet","l","d","_classPrivateFieldSet","add","Mesh","SphereGeometry","MeshBasicMaterial","color","visible","polygonOffset","polygonOffsetUnits","polygonOffsetFactor","_inherits","_createClass","key","get","set","updatePov","_this2","_assertClassBrand","_buildMetaLevel","call","prevLevel","depthWrite","_fetchNeededTiles","camera","_this3","Camera","frustum","hullPnts","lngLen","lng0","lng1","lat0","lat1","_ref2","_ref3","_slicedToArray","_ref4","Vector3","Frustum","updateMatrix","updateMatrixWorld","setFromProjectionMatrix","Matrix4","multiplyMatrices","projectionMatrix","matrixWorldInverse","some","pos","containsPoint","clone","applyMatrix4","matrixWorld","pov","position","distToGlobeCenter","distanceTo","getWorldPosition","cameraDistance","thresholds","findIndex","t","Group","_this4","levelMeta","genTiles","centroid","octree","d3Octree","addAll","_this5","hasOwnProperty","povPos","worldToLocal","_tiles$octree","searchRadius","findAllWithinRadius","apply","concat","povCoords","searchRadiusLat","searchRadiusLng","lngRange","latRange","_findTileXY","_findTileXY2","_findTileXY3","_findTileXY4","record","round","k","selTiles","filter","width","tileMargin","height","rotLng","rotLat","tile","ceil","curvatureResolution","MeshLambertMaterial","_map","_map2","attributes","uv","loading","TextureLoader","load","colorSpace","SRGBColorSpace"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAe,iBAAQ,CAAC,CAAC,EAAE;EAC3B,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;EAClC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;EAChC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;EAChC,EAAE,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC7C;;EAEA,SAAS,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EAC/B,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC;;EAEpD,EAAE,IAAI,MAAM;EACZ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK;EACvB,MAAM,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;EACtB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,KAAK;EACX,MAAM,MAAM;EACZ,MAAM,IAAI;EACV,MAAM,CAAC;EACP,MAAM,CAAC;;EAEP;EACA,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,IAAI;;EAE3C;EACA,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE;EACtB,IAAI,IAAI,KAAK,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;EAChE,IAAI,IAAI,MAAM,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;EACjE,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;EAC/D,IAAI,IAAI,MAAM,GAAG,IAAI,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,IAAI;EACzG;;EAEA;EACA,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;EACrC,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;EACrC,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;EACrC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,IAAI;;EAEpH;EACA,EAAE,GAAG;EACL,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;EAC1E,IAAI,IAAI,KAAK,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;EAChE,IAAI,IAAI,MAAM,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;EACjE,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;EAC/D,GAAG,QAAQ,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;EACzG,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,IAAI;EACjD;;EAEO,SAAS,MAAM,CAAC,IAAI,EAAE;EAC7B,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;EACnD,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM;EACvB,EAAE,MAAM,EAAE,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC;EAChC,EAAE,MAAM,EAAE,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC;EAChC,EAAE,MAAM,EAAE,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC;EAChC,EAAE,IAAI,EAAE,GAAG,QAAQ;EACnB,MAAM,EAAE,GAAG,QAAQ;EACnB,MAAM,EAAE,GAAG,QAAQ;EACnB,MAAM,EAAE,GAAG,CAAC,QAAQ;EACpB,MAAM,EAAE,GAAG,CAAC,QAAQ;EACpB,MAAM,EAAE,GAAG,CAAC,QAAQ;;EAEpB;EACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAC1C,IAAI,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;EAC/H,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EACb,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EACb,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EACb,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EACtB,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EACtB,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EACtB,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EACtB,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EACtB,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EACtB;;EAEA;EACA,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,OAAO,IAAI;;EAEhD;EACA,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;EAE1C;EACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAC9B,IAAI,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3C;;EAEA,EAAE,OAAO,IAAI;EACb;;ECjGe,mBAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EACjC,EAAE,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC;;EAEnE,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;;EAEnB;EACA;EACA;EACA,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE;EACjB,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;EACjC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;EACjC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;EACjC;;EAEA;EACA,OAAO;EACP,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;EACxB,QAAQ,IAAI,GAAG,IAAI,CAAC,KAAK;EACzB,QAAQ,MAAM;EACd,QAAQ,CAAC;;EAET,IAAI,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE;EACxE,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;EAClD,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC;EACpE,MAAM,QAAQ,CAAC;EACf,QAAQ,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACvD,QAAQ,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACvD,QAAQ,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACvD,QAAQ,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACvD,QAAQ,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACvD,QAAQ,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACvD,QAAQ,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACvD,QAAQ,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACvD;EACA;;EAEA,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI;EAC1D;;EAEA,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;EACf,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;EACf,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;EACf,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;EACf,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;EACf,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;EACf,EAAE,OAAO,IAAI;EACb;;ECnDe,kBAAQ,GAAG;EAC1B,EAAE,IAAI,IAAI,GAAG,EAAE;EACf,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE;EAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI;EACtE,GAAG,CAAC;EACJ,EAAE,OAAO,IAAI;EACb;;ECNe,oBAAQ,CAAC,CAAC,EAAE;EAC3B,EAAE,OAAO,SAAS,CAAC;EACnB,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnF,QAAQ,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;EACtG;;ECJe,eAAQ,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EACtD,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI;EAClB,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE;EACd,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE;EACd,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE;EACd,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE;EACd,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE;EACd,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE;EACd;;ECNe,kBAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE;EACzC,EAAE,IAAI,IAAI;EACV,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,IAAI,GAAG,EAAE;EACf,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK;EACvB,MAAM,CAAC;EACP,MAAM,CAAC;;EAEP,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/D,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,MAAM,GAAG,QAAQ;EACvC,OAAO;EACP,IAAI,EAAE,GAAG,CAAC,GAAG,MAAM,EAAE,EAAE,GAAG,CAAC,GAAG,MAAM,EAAE,EAAE,GAAG,CAAC,GAAG,MAAM;EACrD,IAAI,EAAE,GAAG,CAAC,GAAG,MAAM,EAAE,EAAE,GAAG,CAAC,GAAG,MAAM,EAAE,EAAE,GAAG,CAAC,GAAG,MAAM;EACrD,IAAI,MAAM,IAAI,MAAM;EACpB;;EAEA,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;;EAEzB;EACA,IAAI,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC,IAAI;EACvB,WAAW,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI;EACzB,WAAW,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI;EACzB,WAAW,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI;EACzB,WAAW,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI;EACzB,WAAW,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI;EACzB,WAAW,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE;;EAE7B;EACA,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;EACrB,MAAM,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;EAC5B,UAAU,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;EAC5B,UAAU,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;;EAE5B,MAAM,IAAI,CAAC,IAAI;EACf,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACnD,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACnD,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACnD,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACnD,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACnD,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACnD,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACnD,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAClD,OAAO;;EAEP;EACA,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE;EAC3D,QAAQ,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;EACjC,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;EACzD,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EACrC;EACA;;EAEA;EACA,SAAS;EACT,MAAM,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;EACjD,UAAU,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;EACjD,UAAU,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;EACjD,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;EAC1C,MAAM,IAAI,EAAE,GAAG,MAAM,EAAE;EACvB,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;EACtC,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC;EAC1C,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC;EAC1C,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI;EACxB;EACA;EACA;;EAEA,EAAE,OAAO,IAAI;EACb;;ECjFA,MAAM,QAAQ,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;;EAErF,SAAS,mBAAmB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE;EACrD,EAAE,MAAM,MAAM,GAAG,EAAE;;EAEnB,EAAE,MAAM,IAAI,GAAG,CAAC,GAAG,MAAM;EACzB,EAAE,MAAM,IAAI,GAAG,CAAC,GAAG,MAAM;EACzB,EAAE,MAAM,IAAI,GAAG,CAAC,GAAG,MAAM;EACzB,EAAE,MAAM,IAAI,GAAG,CAAC,GAAG,MAAM;EACzB,EAAE,MAAM,IAAI,GAAG,CAAC,GAAG,MAAM;EACzB,EAAE,MAAM,IAAI,GAAG,CAAC,GAAG,MAAM;;EAEzB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK;EAC/C,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;EACtB,MAAM,GAAG;EACT,QAAQ,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI;EAC3B,QAAQ,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,EAAE;EAC7E,UAAU,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB;EACA,OAAO,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI;EAC/B;EACA,IAAI,OAAO,EAAE,GAAG,IAAI,IAAI,EAAE,GAAG,IAAI,IAAI,EAAE,GAAG,IAAI,IAAI,EAAE,GAAG,IAAI,IAAI,EAAE,GAAG,IAAI,IAAI,EAAE,GAAG,IAAI;EACrF,GAAG,CAAC;;EAEJ,EAAE,OAAO,MAAM;EACf;;ECzBe,oBAAQ,CAAC,CAAC,EAAE;EAC3B,EAAE,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC;;EAE/H,EAAE,IAAI,MAAM;EACZ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK;EACvB,MAAM,QAAQ;EACd,MAAM,QAAQ;EACd,MAAM,IAAI;EACV,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG;EACnB,MAAM,CAAC;EACP,MAAM,CAAC;EACP,MAAM,CAAC;EACP,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,KAAK;EACX,MAAM,MAAM;EACZ,MAAM,IAAI;EACV,MAAM,CAAC;EACP,MAAM,CAAC;;EAEP;EACA,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,IAAI;;EAExB;EACA;EACA,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO,IAAI,EAAE;EAChC,IAAI,IAAI,KAAK,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;EAChE,IAAI,IAAI,MAAM,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;EACjE,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;EAC/D,IAAI,IAAI,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,OAAO,IAAI;EACvF,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;EACtB,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC;EAC/L;;EAEA;EACA,EAAE,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE,IAAI,EAAE,QAAQ,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,IAAI;EAC/E,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC,IAAI;;EAExC;EACA,EAAE,IAAI,QAAQ,EAAE,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,GAAG,OAAO,QAAQ,CAAC,IAAI,GAAG,IAAI;;EAEjF;EACA,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,IAAI;;EAE7C;EACA,EAAE,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,OAAO,MAAM,CAAC,CAAC,CAAC;;EAE5C;EACA,EAAE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;EAClH,SAAS,IAAI,MAAM,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;EACvH,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE;EACvB,IAAI,IAAI,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI;EACpC,SAAS,IAAI,CAAC,KAAK,GAAG,IAAI;EAC1B;;EAEA,EAAE,OAAO,IAAI;EACb;;EAEO,SAAS,SAAS,CAAC,IAAI,EAAE;EAChC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACnE,EAAE,OAAO,IAAI;EACb;;ECnEe,kBAAQ,GAAG;EAC1B,EAAE,OAAO,IAAI,CAAC,KAAK;EACnB;;ECFe,kBAAQ,GAAG;EAC1B,EAAE,IAAI,IAAI,GAAG,CAAC;EACd,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE;EAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI;EACxD,GAAG,CAAC;EACJ,EAAE,OAAO,IAAI;EACb;;ECJe,mBAAQ,CAAC,QAAQ,EAAE;EAClC,EAAE,IAAI,IAAI,GAAG,EAAE,EAAE,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EACpE,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;EACnG,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;EACzB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;EACnH,MAAM,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;EACpE,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E;EACA;EACA,EAAE,OAAO,IAAI;EACb;;ECjBe,wBAAQ,CAAC,QAAQ,EAAE;EAClC,EAAE,IAAI,IAAI,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC;EAC7B,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;EAC/G,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;EACzB,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI;EACrB,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;EACrB,MAAM,IAAI,KAAK,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;EAC7I,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/E;EACA,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAChB;EACA,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;EACzB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;EACxD;EACA,EAAE,OAAO,IAAI;EACb;;ECxBO,SAAS,QAAQ,CAAC,CAAC,EAAE;EAC5B,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EACb;;EAEe,eAAQ,CAAC,CAAC,EAAE;EAC3B,EAAE,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,EAAE;EACzD;;ECNO,SAAS,QAAQ,CAAC,CAAC,EAAE;EAC5B,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EACb;;EAEe,eAAQ,CAAC,CAAC,EAAE;EAC3B,EAAE,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,EAAE;EACzD;;ECNO,SAAS,QAAQ,CAAC,CAAC,EAAE;EAC5B,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EACb;;EAEe,eAAQ,CAAC,CAAC,EAAE;EAC3B,EAAE,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,EAAE;EACzD;;ECSe,SAAS,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EAC/C,EAAE,IAAI,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,QAAQ,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACnI,EAAE,OAAO,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;EAClD;;EAEA,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EACjD,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;EACb,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;EACb,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;EACb,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;EACf,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;EACf,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;EACf,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;EACf,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;EACf,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE;EACf,EAAE,IAAI,CAAC,KAAK,GAAG,SAAS;EACxB;;EAEA,SAAS,SAAS,CAAC,IAAI,EAAE;EACzB,EAAE,IAAI,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG,IAAI;EAC3C,EAAE,OAAO,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;EAC/D,EAAE,OAAO,IAAI;EACb;;EAEA,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;;EAEnD,SAAS,CAAC,IAAI,GAAG,WAAW;EAC5B,EAAE,IAAI,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC;EAC9G,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK;EACvB,MAAM,KAAK;EACX,MAAM,KAAK;;EAEX,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,IAAI;;EAExB,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI;;EAE7D,EAAE,KAAK,GAAG,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7D,EAAE,OAAO,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE;EAC7B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;EAClC,QAAQ,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5F,aAAa,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC;EAC9C;EACA;EACA;;EAEA,EAAE,OAAO,IAAI;EACb,CAAC;;EAED,SAAS,CAAC,GAAG,GAAG,QAAQ;EACxB,SAAS,CAAC,MAAM,GAAGA,MAAW;EAC9B,SAAS,CAAC,KAAK,GAAG,UAAU;EAC5B,SAAS,CAAC,IAAI,GAAG,SAAS;EAC1B,SAAS,CAAC,MAAM,GAAG,WAAW;EAC9B,SAAS,CAAC,IAAI,GAAG,SAAS;EAC1B,SAAS,CAAC,mBAAmB,GAAGC,mBAAwB;EACxD,SAAS,CAAC,MAAM,GAAG,WAAW;EAC9B,SAAS,CAAC,SAAS,GAAGC,SAAc;EACpC,SAAS,CAAC,IAAI,GAAG,SAAS;EAC1B,SAAS,CAAC,IAAI,GAAG,SAAS;EAC1B,SAAS,CAAC,KAAK,GAAG,UAAU;EAC5B,SAAS,CAAC,UAAU,GAAG,eAAe;EACtC,SAAS,CAAC,CAAC,GAAG,MAAM;EACpB,SAAS,CAAC,CAAC,GAAG,MAAM;EACpB,SAAS,CAAC,CAAC,GAAG,MAAM;;EC/EpB,IAAMC,gBAAe,GAAG,SAAlBA,eAAeA,CAAGC,QAAQ,EAAI;IAClC,IAAIA,QAAQ,YAAYC,KAAK,EAAE;EAC7BD,IAAAA,QAAQ,CAACE,OAAO,CAACH,gBAAe,CAAC;EACnC,GAAC,MAAM;MACL,IAAIC,QAAQ,CAACG,GAAG,EAAE;EAAEH,MAAAA,QAAQ,CAACG,GAAG,CAACC,OAAO,EAAE;EAAE;MAC5CJ,QAAQ,CAACI,OAAO,EAAE;EACpB;EACF,CAAC;EAED,IAAMC,WAAU,GAAG,SAAbA,UAAUA,CAAGC,GAAG,EAAI;IACxB,IAAIA,GAAG,CAACC,QAAQ,EAAE;EAAED,IAAAA,GAAG,CAACC,QAAQ,CAACH,OAAO,EAAE;EAAE;IAC5C,IAAIE,GAAG,CAACN,QAAQ,EAAE;EAAED,IAAAA,gBAAe,CAACO,GAAG,CAACN,QAAQ,CAAC;EAAE;IACnD,IAAIM,GAAG,CAACE,OAAO,EAAE;EAAEF,IAAAA,GAAG,CAACE,OAAO,CAACJ,OAAO,EAAE;EAAE;IAC1C,IAAIE,GAAG,CAACG,QAAQ,EAAE;EAAEH,IAAAA,GAAG,CAACG,QAAQ,CAACP,OAAO,CAACG,WAAU,CAAC;EAAE;EACxD,CAAC;EAED,IAAMK,WAAW,GAAG,SAAdA,WAAWA,CAAGJ,GAAG,EAAI;EACzB,EAAA,IAAIA,GAAG,IAAIA,GAAG,CAACG,QAAQ,EAAE,OAAOH,GAAG,CAACG,QAAQ,CAACE,MAAM,EAAE;EACnD,IAAA,IAAMC,QAAQ,GAAGN,GAAG,CAACG,QAAQ,CAAC,CAAC,CAAC;EAChCH,IAAAA,GAAG,CAACO,MAAM,CAACD,QAAQ,CAAC;MACpBP,WAAU,CAACO,QAAQ,CAAC;EACtB;EACF,CAAC;;ECtBD,SAASE,eAAeA,CAACC,GAAG,EAAEC,GAAG,EAAEC,CAAC,EAAE;IACpC,IAAMC,GAAG,GAAG,CAAC,EAAE,GAAGH,GAAG,IAAII,IAAI,CAACC,EAAE,GAAG,GAAG;IACtC,IAAMC,KAAK,GAAG,CAAC,EAAE,GAAGL,GAAG,IAAIG,IAAI,CAACC,EAAE,GAAG,GAAG;IACxC,OAAO;EACLE,IAAAA,CAAC,EAAEL,CAAC,GAAGE,IAAI,CAACI,GAAG,CAACL,GAAG,CAAC,GAAGC,IAAI,CAACK,GAAG,CAACH,KAAK,CAAC;MACtCI,CAAC,EAAER,CAAC,GAAGE,IAAI,CAACK,GAAG,CAACN,GAAG,CAAC;EACpBQ,IAAAA,CAAC,EAAET,CAAC,GAAGE,IAAI,CAACI,GAAG,CAACL,GAAG,CAAC,GAAGC,IAAI,CAACI,GAAG,CAACF,KAAK;KACtC;EACH;EAEA,SAASM,eAAeA,CAAAC,IAAA,EAAc;EAAA,EAAA,IAAXN,CAAC,GAAAM,IAAA,CAADN,CAAC;MAAEG,CAAC,GAAAG,IAAA,CAADH,CAAC;MAAEC,CAAC,GAAAE,IAAA,CAADF,CAAC;EAChC,EAAA,IAAMT,CAAC,GAAGE,IAAI,CAACU,IAAI,CAACP,CAAC,GAACA,CAAC,GAAGG,CAAC,GAACA,CAAC,GAAGC,CAAC,GAACA,CAAC,CAAC;IACpC,IAAMR,GAAG,GAAGC,IAAI,CAACW,IAAI,CAACL,CAAC,GAAGR,CAAC,CAAC;IAC5B,IAAMI,KAAK,GAAGF,IAAI,CAACY,KAAK,CAACL,CAAC,EAAEJ,CAAC,CAAC;IAE9B,OAAO;MACLP,GAAG,EAAE,EAAE,GAAGG,GAAG,GAAG,GAAG,GAAGC,IAAI,CAACC,EAAE;MAC7BJ,GAAG,EAAE,EAAE,GAAGK,KAAK,GAAG,GAAG,GAAGF,IAAI,CAACC,EAAE,IAAIC,KAAK,GAAG,CAACF,IAAI,CAACC,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;EAAE;EACpEH,IAAAA,CAAC,EAADA;KACD;EACH;EAEA,SAASe,OAAOA,CAACC,GAAG,EAAE;EAAE,EAAA,OAAOA,GAAG,GAAGd,IAAI,CAACC,EAAE,GAAG,GAAG;EAAE;;ECtBrC,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;EACxC,EAAE,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;EACjF;;ECFe,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE;EACzC,EAAE,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG;EAClC,MAAM,CAAC,GAAG,CAAC,GAAG;EACd,MAAM,CAAC,GAAG,CAAC,GAAG;EACd,MAAM,CAAC,IAAI,CAAC,GAAG;EACf,MAAM,GAAG;EACT;;ECHe,SAAS,QAAQ,CAAC,CAAC,EAAE;EACpC,EAAE,IAAI,QAAQ,EAAE,QAAQ,EAAE,KAAK;;EAE/B;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;EACtB,IAAI,QAAQ,GAAG,SAAS;EACxB,IAAI,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3C,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,GAAG,MAAM;EACT,IAAI,QAAQ,GAAG,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,UAAU,GAAG,CAAC,GAAGc,MAAI;EAC7D,IAAI,QAAQ,GAAG,CAAC;EAChB,IAAI,KAAK,GAAG,CAAC;EACb;;EAEA,EAAE,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE;EAC7C,IAAI,IAAI,EAAE,GAAG,EAAE,EAAE;EACjB,MAAM,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE;EACzC,MAAM,GAAG;EACT,QAAQ,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC;EACnC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC;EACjD,aAAa,EAAE,GAAG,GAAG;EACrB,OAAO,QAAQ,EAAE,GAAG,EAAE;EACtB;EACA,IAAI,OAAO,EAAE;EACb;;EAEA,EAAE,SAAS,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE;EAC9C,IAAI,IAAI,EAAE,GAAG,EAAE,EAAE;EACjB,MAAM,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE;EACzC,MAAM,GAAG;EACT,QAAQ,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC;EACnC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC;EAClD,aAAa,EAAE,GAAG,GAAG;EACrB,OAAO,QAAQ,EAAE,GAAG,EAAE;EACtB;EACA,IAAI,OAAO,EAAE;EACb;;EAEA,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE;EAC/C,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;EACpC,IAAI,OAAO,CAAC,GAAG,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;EACrE;;EAEA,EAAE,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC;EAC9B;;EAEA,SAASA,MAAI,GAAG;EAChB,EAAE,OAAO,CAAC;EACV;;ECvDe,SAASC,QAAM,CAAC,CAAC,EAAE;EAClC,EAAE,OAAO,CAAC,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;EAC9B;;ECEA,MAAM,eAAe,GAAG,QAAQ,CAAC,SAAS,CAAC;EACpC,MAAM,WAAW,GAAG,eAAe,CAAC,KAAK;EAEpB,QAAQ,CAACA,QAAM,CAAC,CAAC;;ECP7C,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;EACzB,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;EACtB,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;EAErB,SAAS,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;EACtC,EAAE,MAAM,IAAI,GAAG,CAAC,IAAI,GAAG,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;EAClD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;EAC1C,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC;EACxC,MAAM,MAAM,GAAG,KAAK,IAAI,GAAG,GAAG,EAAE,GAAG,KAAK,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC;EACxE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG;EACjB,EAAE,IAAI,KAAK,GAAG,CAAC,EAAE;EACjB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,MAAM;EACvC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;EAChC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;EAC/B,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,KAAK,EAAE,EAAE,EAAE;EAC9B,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE;EAC7B,IAAI,GAAG,GAAG,CAAC,GAAG;EACd,GAAG,MAAM;EACT,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,MAAM;EACtC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;EAChC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;EAC/B,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,KAAK,EAAE,EAAE,EAAE;EAC9B,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE;EAC7B;EACA,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,OAAO,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC;EACnF,EAAE,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EACtB;;EAEe,SAAS,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;EAClD,EAAE,IAAI,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,KAAK;EAC9C,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE,OAAO,EAAE;EAC7B,EAAE,IAAI,KAAK,KAAK,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC;EACpC,EAAE,MAAM,OAAO,GAAG,IAAI,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,OAAO,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;EACrH,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE;EAC5B,EAAE,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;EAC7C,EAAE,IAAI,OAAO,EAAE;EACf,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG;EACvE,SAAS,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,GAAG;EAC9D,GAAG,MAAM;EACT,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG;EACvE,SAAS,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,GAAG;EAC9D;EACA,EAAE,OAAO,KAAK;EACd;;EAEO,SAAS,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;EAClD,EAAE,IAAI,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,KAAK;EAC9C,EAAE,OAAO,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC;;EAEO,SAAS,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;EAC7C,EAAE,IAAI,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,KAAK;EAC9C,EAAE,MAAM,OAAO,GAAG,IAAI,GAAG,KAAK,EAAE,GAAG,GAAG,OAAO,GAAG,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;EACrH,EAAE,OAAO,CAAC,OAAO,GAAG,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;EACxD;;ECtDO,SAAS,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE;EACzC,EAAE,QAAQ,SAAS,CAAC,MAAM;EAC1B,IAAI,KAAK,CAAC,EAAE;EACZ,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;EAChC,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;EAC/C;EACA,EAAE,OAAO,IAAI;EACb;;ECPe,eAAQ,CAAC,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE;EACzD,EAAE,WAAW,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,SAAS;EACvD,EAAE,SAAS,CAAC,WAAW,GAAG,WAAW;EACrC;;EAEO,SAAS,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE;EAC3C,EAAE,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC;EACjD,EAAE,KAAK,IAAI,GAAG,IAAI,UAAU,EAAE,SAAS,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC;EAC9D,EAAE,OAAO,SAAS;EAClB;;ECPO,SAAS,KAAK,GAAG;;EAEjB,IAAI,MAAM,GAAG,GAAG;EAChB,IAAI,QAAQ,GAAG,CAAC,GAAG,MAAM;;EAEhC,IAAI,GAAG,GAAG,qBAAqB;EAC/B,IAAI,GAAG,GAAG,mDAAmD;EAC7D,IAAI,GAAG,GAAG,oDAAoD;EAC9D,IAAI,KAAK,GAAG,oBAAoB;EAChC,IAAI,YAAY,GAAG,IAAI,MAAM,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAChE,IAAI,YAAY,GAAG,IAAI,MAAM,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAChE,IAAI,aAAa,GAAG,IAAI,MAAM,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACzE,IAAI,aAAa,GAAG,IAAI,MAAM,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACzE,IAAI,YAAY,GAAG,IAAI,MAAM,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAChE,IAAI,aAAa,GAAG,IAAI,MAAM,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;;EAEzE,IAAI,KAAK,GAAG;EACZ,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,YAAY,EAAE,QAAQ;EACxB,EAAE,IAAI,EAAE,QAAQ;EAChB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,KAAK,EAAE,QAAQ;EACjB,EAAE,KAAK,EAAE,QAAQ;EACjB,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,KAAK,EAAE,QAAQ;EACjB,EAAE,cAAc,EAAE,QAAQ;EAC1B,EAAE,IAAI,EAAE,QAAQ;EAChB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,KAAK,EAAE,QAAQ;EACjB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,KAAK,EAAE,QAAQ;EACjB,EAAE,cAAc,EAAE,QAAQ;EAC1B,EAAE,QAAQ,EAAE,QAAQ;EACpB,EAAE,OAAO,EAAE,QAAQ;EACnB,EAAE,IAAI,EAAE,QAAQ;EAChB,EAAE,QAAQ,EAAE,QAAQ;EACpB,EAAE,QAAQ,EAAE,QAAQ;EACpB,EAAE,aAAa,EAAE,QAAQ;EACzB,EAAE,QAAQ,EAAE,QAAQ;EACpB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,QAAQ,EAAE,QAAQ;EACpB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,WAAW,EAAE,QAAQ;EACvB,EAAE,cAAc,EAAE,QAAQ;EAC1B,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,OAAO,EAAE,QAAQ;EACnB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,YAAY,EAAE,QAAQ;EACxB,EAAE,aAAa,EAAE,QAAQ;EACzB,EAAE,aAAa,EAAE,QAAQ;EACzB,EAAE,aAAa,EAAE,QAAQ;EACzB,EAAE,aAAa,EAAE,QAAQ;EACzB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,QAAQ,EAAE,QAAQ;EACpB,EAAE,WAAW,EAAE,QAAQ;EACvB,EAAE,OAAO,EAAE,QAAQ;EACnB,EAAE,OAAO,EAAE,QAAQ;EACnB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,WAAW,EAAE,QAAQ;EACvB,EAAE,WAAW,EAAE,QAAQ;EACvB,EAAE,OAAO,EAAE,QAAQ;EACnB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,IAAI,EAAE,QAAQ;EAChB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,IAAI,EAAE,QAAQ;EAChB,EAAE,KAAK,EAAE,QAAQ;EACjB,EAAE,WAAW,EAAE,QAAQ;EACvB,EAAE,IAAI,EAAE,QAAQ;EAChB,EAAE,QAAQ,EAAE,QAAQ;EACpB,EAAE,OAAO,EAAE,QAAQ;EACnB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,KAAK,EAAE,QAAQ;EACjB,EAAE,KAAK,EAAE,QAAQ;EACjB,EAAE,QAAQ,EAAE,QAAQ;EACpB,EAAE,aAAa,EAAE,QAAQ;EACzB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,YAAY,EAAE,QAAQ;EACxB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,oBAAoB,EAAE,QAAQ;EAChC,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,WAAW,EAAE,QAAQ;EACvB,EAAE,aAAa,EAAE,QAAQ;EACzB,EAAE,YAAY,EAAE,QAAQ;EACxB,EAAE,cAAc,EAAE,QAAQ;EAC1B,EAAE,cAAc,EAAE,QAAQ;EAC1B,EAAE,cAAc,EAAE,QAAQ;EAC1B,EAAE,WAAW,EAAE,QAAQ;EACvB,EAAE,IAAI,EAAE,QAAQ;EAChB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,KAAK,EAAE,QAAQ;EACjB,EAAE,OAAO,EAAE,QAAQ;EACnB,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,gBAAgB,EAAE,QAAQ;EAC5B,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,YAAY,EAAE,QAAQ;EACxB,EAAE,YAAY,EAAE,QAAQ;EACxB,EAAE,cAAc,EAAE,QAAQ;EAC1B,EAAE,eAAe,EAAE,QAAQ;EAC3B,EAAE,iBAAiB,EAAE,QAAQ;EAC7B,EAAE,eAAe,EAAE,QAAQ;EAC3B,EAAE,eAAe,EAAE,QAAQ;EAC3B,EAAE,YAAY,EAAE,QAAQ;EACxB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,QAAQ,EAAE,QAAQ;EACpB,EAAE,WAAW,EAAE,QAAQ;EACvB,EAAE,IAAI,EAAE,QAAQ;EAChB,EAAE,OAAO,EAAE,QAAQ;EACnB,EAAE,KAAK,EAAE,QAAQ;EACjB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,aAAa,EAAE,QAAQ;EACzB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,aAAa,EAAE,QAAQ;EACzB,EAAE,aAAa,EAAE,QAAQ;EACzB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,IAAI,EAAE,QAAQ;EAChB,EAAE,IAAI,EAAE,QAAQ;EAChB,EAAE,IAAI,EAAE,QAAQ;EAChB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,aAAa,EAAE,QAAQ;EACzB,EAAE,GAAG,EAAE,QAAQ;EACf,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,WAAW,EAAE,QAAQ;EACvB,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,QAAQ,EAAE,QAAQ;EACpB,EAAE,QAAQ,EAAE,QAAQ;EACpB,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,OAAO,EAAE,QAAQ;EACnB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,IAAI,EAAE,QAAQ;EAChB,EAAE,WAAW,EAAE,QAAQ;EACvB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,GAAG,EAAE,QAAQ;EACf,EAAE,IAAI,EAAE,QAAQ;EAChB,EAAE,OAAO,EAAE,QAAQ;EACnB,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,SAAS,EAAE,QAAQ;EACrB,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,KAAK,EAAE,QAAQ;EACjB,EAAE,KAAK,EAAE,QAAQ;EACjB,EAAE,UAAU,EAAE,QAAQ;EACtB,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,WAAW,EAAE;EACf,CAAC;;EAED,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE;EACrB,EAAE,IAAI,CAAC,QAAQ,EAAE;EACjB,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC;EAC9D,GAAG;EACH,EAAE,WAAW,GAAG;EAChB,IAAI,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE;EACnC,GAAG;EACH,EAAE,GAAG,EAAE,eAAe;EACtB,EAAE,SAAS,EAAE,eAAe;EAC5B,EAAE,UAAU,EAAE,gBAAgB;EAC9B,EAAE,SAAS,EAAE,eAAe;EAC5B,EAAE,SAAS,EAAE,eAAe;EAC5B,EAAE,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF,SAAS,eAAe,GAAG;EAC3B,EAAE,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE;EAC/B;;EAEA,SAAS,gBAAgB,GAAG;EAC5B,EAAE,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,UAAU,EAAE;EAChC;;EAEA,SAAS,eAAe,GAAG;EAC3B,EAAE,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE;EACrC;;EAEA,SAAS,eAAe,GAAG;EAC3B,EAAE,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE;EAC/B;;EAEe,SAAS,KAAK,CAAC,MAAM,EAAE;EACtC,EAAE,IAAI,CAAC,EAAE,CAAC;EACV,EAAE,MAAM,GAAG,CAAC,MAAM,GAAG,EAAE,EAAE,IAAI,EAAE,CAAC,WAAW,EAAE;EAC7C,EAAE,OAAO,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;EAC/F,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;EACzH,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC;EACxF,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC;EAC/J,QAAQ,IAAI;EACZ,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACtE,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;EAC1G,QAAQ,CAAC,CAAC,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACvE,QAAQ,CAAC,CAAC,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3G,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;EAC/E,QAAQ,CAAC,CAAC,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACnF,QAAQ,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;EAC1D,QAAQ,MAAM,KAAK,aAAa,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC3D,QAAQ,IAAI;EACZ;;EAEA,SAAS,IAAI,CAAC,CAAC,EAAE;EACjB,EAAE,OAAO,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;EAC5D;;EAEA,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EAC1B,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG;EAC7B,EAAE,OAAO,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC5B;;EAEO,SAAS,UAAU,CAAC,CAAC,EAAE;EAC9B,EAAE,IAAI,EAAE,CAAC,YAAY,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;EACzC,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,GAAG;EACxB,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;EACb,EAAE,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC;EAC1C;;EAEO,SAASC,KAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE;EACtC,EAAE,OAAO,SAAS,CAAC,MAAM,KAAK,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,IAAI,IAAI,GAAG,CAAC,GAAG,OAAO,CAAC;EACjG;;EAEO,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE;EACtC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,IAAI,CAAC,OAAO,GAAG,CAAC,OAAO;EACzB;;EAEA,MAAM,CAAC,GAAG,EAAEA,KAAG,EAAE,MAAM,CAAC,KAAK,EAAE;EAC/B,EAAE,QAAQ,CAAC,CAAC,EAAE;EACd,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;EACpD,IAAI,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;EACpE,GAAG;EACH,EAAE,MAAM,CAAC,CAAC,EAAE;EACZ,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;EAChD,IAAI,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;EACpE,GAAG;EACH,EAAE,GAAG,GAAG;EACR,IAAI,OAAO,IAAI;EACf,GAAG;EACH,EAAE,KAAK,GAAG;EACV,IAAI,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACxF,GAAG;EACH,EAAE,WAAW,GAAG;EAChB,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;EAC5C,YAAY,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;EAC5C,YAAY,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK;EAC5C,YAAY,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;EACnD,GAAG;EACH,EAAE,GAAG,EAAE,aAAa;EACpB,EAAE,SAAS,EAAE,aAAa;EAC1B,EAAE,UAAU,EAAE,cAAc;EAC5B,EAAE,SAAS,EAAE,aAAa;EAC1B,EAAE,QAAQ,EAAE;EACZ,CAAC,CAAC,CAAC;;EAEH,SAAS,aAAa,GAAG;EACzB,EAAE,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACtD;;EAEA,SAAS,cAAc,GAAG;EAC1B,EAAE,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC;EAC5G;;EAEA,SAAS,aAAa,GAAG;EACzB,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;EAChC,EAAE,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3H;;EAEA,SAAS,MAAM,CAAC,OAAO,EAAE;EACzB,EAAE,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;EAC/D;;EAEA,SAAS,MAAM,CAAC,KAAK,EAAE;EACvB,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;EAC3D;;EAEA,SAAS,GAAG,CAAC,KAAK,EAAE;EACpB,EAAE,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;EACvB,EAAE,OAAO,CAAC,KAAK,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC;EACrD;;EAEA,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EAC1B,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG;EAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG;EACxC,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG;EAC1B,EAAE,OAAO,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC5B;;EAEO,SAAS,UAAU,CAAC,CAAC,EAAE;EAC9B,EAAE,IAAI,CAAC,YAAY,GAAG,EAAE,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC;EAChE,EAAE,IAAI,EAAE,CAAC,YAAY,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;EACzC,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,GAAG;EACxB,EAAE,IAAI,CAAC,YAAY,GAAG,EAAE,OAAO,CAAC;EAChC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;EACb,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;EACnB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;EACnB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;EACnB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC7B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC7B,MAAM,CAAC,GAAG,GAAG;EACb,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG;EACnB,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC;EACzB,EAAE,IAAI,CAAC,EAAE;EACT,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;EAChD,SAAS,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;EAC3C,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;EAC5B,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;EAC5C,IAAI,CAAC,IAAI,EAAE;EACX,GAAG,MAAM;EACT,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;EAC9B;EACA,EAAE,OAAO,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC;EACpC;;EAEO,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE;EACtC,EAAE,OAAO,SAAS,CAAC,MAAM,KAAK,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,IAAI,IAAI,GAAG,CAAC,GAAG,OAAO,CAAC;EACjG;;EAEA,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE;EAC/B,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,IAAI,CAAC,OAAO,GAAG,CAAC,OAAO;EACzB;;EAEA,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,KAAK,EAAE;EAC/B,EAAE,QAAQ,CAAC,CAAC,EAAE;EACd,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;EACpD,IAAI,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;EAC5D,GAAG;EACH,EAAE,MAAM,CAAC,CAAC,EAAE;EACZ,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;EAChD,IAAI,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;EAC5D,GAAG;EACH,EAAE,GAAG,GAAG;EACR,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG;EAC7C,QAAQ,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;EAClD,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC;EAClB,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;EAC1C,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE;EACvB,IAAI,OAAO,IAAI,GAAG;EAClB,MAAM,OAAO,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;EACnD,MAAM,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EACxB,MAAM,OAAO,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;EAClD,MAAM,IAAI,CAAC;EACX,KAAK;EACL,GAAG;EACH,EAAE,KAAK,GAAG;EACV,IAAI,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACxF,GAAG;EACH,EAAE,WAAW,GAAG;EAChB,IAAI,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;EACvD,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC;EACtC,YAAY,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;EACnD,GAAG;EACH,EAAE,SAAS,GAAG;EACd,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;EAClC,IAAI,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3I;EACA,CAAC,CAAC,CAAC;;EAEH,SAAS,MAAM,CAAC,KAAK,EAAE;EACvB,EAAE,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG;EAC5B,EAAE,OAAO,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK;EACxC;;EAEA,SAAS,MAAM,CAAC,KAAK,EAAE;EACvB,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;EAC7C;;EAEA;EACA,SAAS,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;EAC5B,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG;EACxC,QAAQ,CAAC,GAAG,GAAG,GAAG;EAClB,QAAQ,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG;EAC/C,QAAQ,EAAE,IAAI,GAAG;EACjB;;AC3YA,iBAAe,CAAC,IAAI,MAAM,CAAC;;ECE3B,SAASC,QAAM,CAAC,CAAC,EAAE,CAAC,EAAE;EACtB,EAAE,OAAO,SAAS,CAAC,EAAE;EACrB,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;EACpB,GAAG;EACH;;EAEA,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EAC9B,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,EAAE;EAC5E,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EACjC,GAAG;EACH;;EAOO,SAAS,KAAK,CAAC,CAAC,EAAE;EACzB,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,OAAO,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;EACnD,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACpE,GAAG;EACH;;EAEe,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;EACtC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;EACf,EAAE,OAAO,CAAC,GAAGA,QAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACtD;;ACvBA,YAAe,CAAC,SAAS,QAAQ,CAAC,CAAC,EAAE;EACrC,EAAE,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;;EAEtB,EAAE,SAAS,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE;EAC3B,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,KAAK,GAAGC,KAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,GAAGA,KAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EACvE,QAAQ,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACjC,QAAQ,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACjC,QAAQ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC;EACrD,IAAI,OAAO,SAAS,CAAC,EAAE;EACvB,MAAM,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACpB,MAAM,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACpB,MAAM,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACpB,MAAM,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;EAChC,MAAM,OAAO,KAAK,GAAG,EAAE;EACvB,KAAK;EACL;;EAEA,EAAE,GAAG,CAAC,KAAK,GAAG,QAAQ;;EAEtB,EAAE,OAAO,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC;;ECzBU,oBAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;EAC9B,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE;EAChB,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;EAC9C,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;EACnB,MAAM,CAAC;EACP,EAAE,OAAO,SAAS,CAAC,EAAE;EACrB,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5D,IAAI,OAAO,CAAC;EACZ,GAAG;EACH;;EAEO,SAAS,aAAa,CAAC,CAAC,EAAE;EACjC,EAAE,OAAO,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,YAAY,QAAQ,CAAC;EAC1D;;ECNO,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;EACnC,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC;EAC3B,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;EACzC,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC;EACvB,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC;EACvB,MAAM,CAAC;;EAEP,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGC,WAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEjC,EAAE,OAAO,SAAS,CAAC,EAAE;EACrB,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,IAAI,OAAO,CAAC;EACZ,GAAG;EACH;;ECrBe,aAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;EAC9B,EAAE,IAAI,CAAC,GAAG,IAAI,IAAI;EAClB,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE;EACrC,IAAI,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;EAC5C,GAAG;EACH;;ECLe,0BAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;EAC9B,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE;EACrC,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;EAC9B,GAAG;EACH;;ECFe,eAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;EAC9B,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,MAAM,CAAC,GAAG,EAAE;EACZ,MAAM,CAAC;;EAEP,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC,GAAG,EAAE;EACjD,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC,GAAG,EAAE;;EAEjD,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;EACf,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;EAChB,MAAM,CAAC,CAAC,CAAC,CAAC,GAAGA,WAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,KAAK,MAAM;EACX,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACjB;EACA;;EAEA,EAAE,OAAO,SAAS,CAAC,EAAE;EACrB,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/B,IAAI,OAAO,CAAC;EACZ,GAAG;EACH;;ECpBA,IAAI,GAAG,GAAG,6CAA6C;EACvD,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;;EAErC,SAAS,IAAI,CAAC,CAAC,EAAE;EACjB,EAAE,OAAO,WAAW;EACpB,IAAI,OAAO,CAAC;EACZ,GAAG;EACH;;EAEA,SAAS,GAAG,CAAC,CAAC,EAAE;EAChB,EAAE,OAAO,SAAS,CAAC,EAAE;EACrB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;EACpB,GAAG;EACH;;EAEe,eAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;EAC9B,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC;EAC5C,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,CAAC,GAAG,EAAE;EACZ,MAAM,CAAC,GAAG,EAAE;EACZ,MAAM,CAAC,GAAG,EAAE,CAAC;;EAEb;EACA,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE;;EAExB;EACA,EAAE,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1B,UAAU,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;EAC7B,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,KAAK,IAAI,EAAE,EAAE;EAC9B,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;EAC1B,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EAC3B,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE;EACtB;EACA,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;EACvC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EAC3B,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE;EACtB,KAAK,MAAM;EACX,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI;EACnB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEJ,iBAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;EACvC;EACA,IAAI,EAAE,GAAG,GAAG,CAAC,SAAS;EACtB;;EAEA;EACA,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE;EACrB,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;EACpB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EACzB,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE;EACpB;;EAEA;EACA;EACA,EAAE,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,QAAQ,IAAI,CAAC,CAAC,CAAC;EACf,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE;EACnC,UAAU,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,UAAU,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;EAC3B,SAAS,CAAC;EACV;;ECrDe,oBAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;EAC9B,EAAE,IAAI,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC;EACrB,EAAE,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,SAAS,GAAG,QAAQ,CAAC,CAAC;EAClD,QAAQ,CAAC,CAAC,KAAK,QAAQ,GAAGA;EAC1B,QAAQ,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,MAAM;EAChE,QAAQ,CAAC,YAAY,KAAK,GAAG;EAC7B,QAAQ,CAAC,YAAY,IAAI,GAAG;EAC5B,QAAQ,aAAa,CAAC,CAAC,CAAC,GAAG;EAC3B,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG;EAC3B,QAAQ,OAAO,CAAC,CAAC,OAAO,KAAK,UAAU,IAAI,OAAO,CAAC,CAAC,QAAQ,KAAK,UAAU,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG;EAC1F,QAAQA,iBAAM,EAAE,CAAC,EAAE,CAAC,CAAC;EACrB;;ECrBe,yBAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;EAC9B,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE;EACrC,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC1C,GAAG;EACH;;ECJe,SAAS,SAAS,CAAC,CAAC,EAAE;EACrC,EAAE,OAAO,WAAW;EACpB,IAAI,OAAO,CAAC;EACZ,GAAG;EACH;;ECJe,SAAS,MAAM,CAAC,CAAC,EAAE;EAClC,EAAE,OAAO,CAAC,CAAC;EACX;;ECGA,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;EAEV,SAASK,UAAQ,CAAC,CAAC,EAAE;EAC5B,EAAE,OAAO,CAAC;EACV;;EAEA,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;EACzB,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EACvB,QAAQ,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;EACzC,QAAQC,SAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;EACtC;;EAEA,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;EACvB,EAAE,IAAI,CAAC;EACP,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC;EAChC,EAAE,OAAO,SAAS,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;EAC5D;;EAEA;EACA;EACA,SAAS,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE;EAC3C,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;EAClE,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC;EAC/D,OAAO,EAAE,GAAG,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC;EACvD,EAAE,OAAO,SAAS,CAAC,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAC1C;;EAEA,SAAS,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE;EAC7C,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;EACnD,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;EACtB,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;EACtB,MAAM,CAAC,GAAG,EAAE;;EAEZ;EACA,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE;EAC7B,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE;EACrC,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE;EACnC;;EAEA,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;EAClB,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC9C,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC9C;;EAEA,EAAE,OAAO,SAAS,CAAC,EAAE;EACrB,IAAI,IAAI,CAAC,GAAGC,WAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;EACvC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxB,GAAG;EACH;;EAEO,SAAS,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE;EACrC,EAAE,OAAO;EACT,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;EAC7B,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE;EAC3B,OAAO,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE;EACvC,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE;EAC3B,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;EAChC;;EAEO,SAAS,WAAW,GAAG;EAC9B,EAAE,IAAI,MAAM,GAAG,IAAI;EACnB,MAAM,KAAK,GAAG,IAAI;EAClB,MAAMC,aAAW,GAAGC,WAAgB;EACpC,MAAM,SAAS;EACf,MAAM,WAAW;EACjB,MAAM,OAAO;EACb,MAAM,KAAK,GAAGJ,UAAQ;EACtB,MAAM,SAAS;EACf,MAAM,MAAM;EACZ,MAAM,KAAK;;EAEX,EAAE,SAAS,OAAO,GAAG;EACrB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;EACjD,IAAI,IAAI,KAAK,KAAKA,UAAQ,EAAE,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACrE,IAAI,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,KAAK;EACvC,IAAI,MAAM,GAAG,KAAK,GAAG,IAAI;EACzB,IAAI,OAAO,KAAK;EAChB;;EAEA,EAAE,SAAS,KAAK,CAAC,CAAC,EAAE;EACpB,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,MAAM,KAAK,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,KAAK,EAAEG,aAAW,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EAClJ;;EAEA,EAAE,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC,EAAE;EAC7B,IAAI,OAAO,KAAK,CAAC,WAAW,CAAC,CAAC,KAAK,KAAK,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjH,GAAG;;EAEH,EAAE,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC,EAAE;EAC7B,IAAI,OAAO,SAAS,CAAC,MAAM,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,MAAM,CAAC,KAAK,EAAE;EAC1F,GAAG;;EAEH,EAAE,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC,EAAE;EAC5B,IAAI,OAAO,SAAS,CAAC,MAAM,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,KAAK,CAAC,KAAK,EAAE;EAChF,GAAG;;EAEH,EAAE,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC,EAAE;EACjC,IAAI,OAAO,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAEA,aAAW,GAAG,gBAAgB,EAAE,OAAO,EAAE;EAC3E,GAAG;;EAEH,EAAE,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC,EAAE;EAC5B,IAAI,OAAO,SAAS,CAAC,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,GAAGH,UAAQ,EAAE,OAAO,EAAE,IAAI,KAAK,KAAKA,UAAQ;EAC3F,GAAG;;EAEH,EAAE,KAAK,CAAC,WAAW,GAAG,SAAS,CAAC,EAAE;EAClC,IAAI,OAAO,SAAS,CAAC,MAAM,IAAIG,aAAW,GAAG,CAAC,EAAE,OAAO,EAAE,IAAIA,aAAW;EACxE,GAAG;;EAEH,EAAE,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC,EAAE;EAC9B,IAAI,OAAO,SAAS,CAAC,MAAM,IAAI,OAAO,GAAG,CAAC,EAAE,KAAK,IAAI,OAAO;EAC5D,GAAG;;EAEH,EAAE,OAAO,SAAS,CAAC,EAAE,CAAC,EAAE;EACxB,IAAI,SAAS,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC;EAClC,IAAI,OAAO,OAAO,EAAE;EACpB,GAAG;EACH;;EAEe,SAAS,UAAU,GAAG;EACrC,EAAE,OAAO,WAAW,EAAE,CAACH,UAAQ,EAAEA,UAAQ,CAAC;EAC1C;;EC5He,sBAAQ,CAAC,CAAC,EAAE;EAC3B,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;EACxC,QAAQ,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;EAC/C,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;EACtB;;EAEA;EACA;EACA;EACO,SAAS,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE;EACzC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,IAAI,CAAC;EAC/F,EAAE,IAAI,CAAC,EAAE,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;;EAEpC;EACA;EACA,EAAE,OAAO;EACT,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,WAAW;EAChF,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;EAClB,GAAG;EACH;;ECjBe,iBAAQ,CAAC,CAAC,EAAE;EAC3B,EAAE,OAAO,CAAC,GAAG,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;EAC5D;;ECJe,oBAAQ,CAAC,QAAQ,EAAE,SAAS,EAAE;EAC7C,EAAE,OAAO,SAAS,KAAK,EAAE,KAAK,EAAE;EAChC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM;EACxB,QAAQ,CAAC,GAAG,EAAE;EACd,QAAQ,CAAC,GAAG,CAAC;EACb,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;EACvB,QAAQ,MAAM,GAAG,CAAC;;EAElB,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;EAC3B,MAAM,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC;EACjE,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EAC5C,MAAM,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,EAAE;EACrC,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC;EACjD;;EAEA,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;EACtC,GAAG;EACH;;ECjBe,uBAAQ,CAAC,QAAQ,EAAE;EAClC,EAAE,OAAO,SAAS,KAAK,EAAE;EACzB,IAAI,OAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;EAC/C,MAAM,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;EACzB,KAAK,CAAC;EACN,GAAG;EACH;;ECNA;EACA,IAAI,EAAE,GAAG,0EAA0E;;EAEpE,SAAS,eAAe,CAAC,SAAS,EAAE;EACnD,EAAE,IAAI,EAAE,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,IAAI,KAAK,CAAC,kBAAkB,GAAG,SAAS,CAAC;EACpF,EAAE,IAAI,KAAK;EACX,EAAE,OAAO,IAAI,eAAe,CAAC;EAC7B,IAAI,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;EAClB,IAAI,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;EACnB,IAAI,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;EAClB,IAAI,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;EACpB,IAAI,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;EAClB,IAAI,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;EACnB,IAAI,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;EACnB,IAAI,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;EAC5C,IAAI,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;EAClB,IAAI,IAAI,EAAE,KAAK,CAAC,EAAE;EAClB,GAAG,CAAC;EACJ;;EAEA,eAAe,CAAC,SAAS,GAAG,eAAe,CAAC,SAAS,CAAC;;EAE/C,SAAS,eAAe,CAAC,SAAS,EAAE;EAC3C,EAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,KAAK,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC,IAAI,GAAG,EAAE;EACtE,EAAE,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,KAAK,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC,KAAK,GAAG,EAAE;EACzE,EAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,KAAK,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC,IAAI,GAAG,EAAE;EACtE,EAAE,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,KAAK,SAAS,GAAG,EAAE,GAAG,SAAS,CAAC,MAAM,GAAG,EAAE;EAC3E,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI;EAC9B,EAAE,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,KAAK,SAAS,GAAG,SAAS,GAAG,CAAC,SAAS,CAAC,KAAK;EAC3E,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK;EAChC,EAAE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,KAAK,SAAS,GAAG,SAAS,GAAG,CAAC,SAAS,CAAC,SAAS;EACvF,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI;EAC9B,EAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,KAAK,SAAS,GAAG,EAAE,GAAG,SAAS,CAAC,IAAI,GAAG,EAAE;EACrE;;EAEA,eAAe,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW;EAChD,EAAE,OAAO,IAAI,CAAC;EACd,QAAQ,IAAI,CAAC;EACb,QAAQ,IAAI,CAAC;EACb,QAAQ,IAAI,CAAC;EACb,SAAS,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE;EAC7B,SAAS,IAAI,CAAC,KAAK,KAAK,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;EACpE,SAAS,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,EAAE;EAC9B,SAAS,IAAI,CAAC,SAAS,KAAK,SAAS,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;EAClF,SAAS,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE;EAC7B,QAAQ,IAAI,CAAC,IAAI;EACjB,CAAC;;EC9CD;EACe,mBAAQ,CAAC,CAAC,EAAE;EAC3B,EAAE,GAAG,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAC9D,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChB,MAAM,KAAK,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EAC7B,MAAM,KAAK,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC9C,MAAM,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;EAC1D;EACA;EACA,EAAE,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;EACtD;;ECRO,IAAI,cAAc;;EAEV,yBAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;EAC9B,EAAE,IAAI,CAAC,GAAG,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC;EAClC,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE;EACvB,EAAE,IAAI,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;EACxB,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;EACrB,MAAM,CAAC,GAAG,QAAQ,IAAI,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EACnG,MAAM,CAAC,GAAG,WAAW,CAAC,MAAM;EAC5B,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG;EACnB,QAAQ,CAAC,GAAG,CAAC,GAAG,WAAW,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG;EAC3D,QAAQ,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;EACnE,QAAQ,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7F;;ECbe,sBAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;EAC9B,EAAE,IAAI,CAAC,GAAG,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC;EAClC,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE;EACvB,EAAE,IAAI,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;EACxB,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;EACrB,EAAE,OAAO,QAAQ,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG;EAChE,QAAQ,WAAW,CAAC,MAAM,GAAG,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,WAAW,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC;EACrH,QAAQ,WAAW,GAAG,IAAI,KAAK,CAAC,QAAQ,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;EAC5E;;ACNA,oBAAe;EACf,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC;EACrC,EAAE,GAAG,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;EACvC,EAAE,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE;EACpB,EAAE,GAAG,EAAE,aAAa;EACpB,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;EACnC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7B,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;EACjC,EAAE,GAAG,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;EACvC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,aAAa,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;EAC1C,EAAE,GAAG,EAAE,aAAa;EACpB,EAAE,GAAG,EAAE,gBAAgB;EACvB,EAAE,GAAG,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE;EACtD,EAAE,GAAG,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE;EACvC,CAAC;;EClBc,iBAAQ,CAAC,CAAC,EAAE;EAC3B,EAAE,OAAO,CAAC;EACV;;ECOA,IAAI,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG;EAC7B,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;;EAEpE,qBAAQ,CAAC,MAAM,EAAE;EAChC,EAAE,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,KAAK,SAAS,GAAG,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;EAChK,MAAM,cAAc,GAAG,MAAM,CAAC,QAAQ,KAAK,SAAS,GAAG,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE;EACnF,MAAM,cAAc,GAAG,MAAM,CAAC,QAAQ,KAAK,SAAS,GAAG,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE;EACnF,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,KAAK,SAAS,GAAG,GAAG,GAAG,MAAM,CAAC,OAAO,GAAG,EAAE;EACxE,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;EAC7G,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,KAAK,SAAS,GAAG,GAAG,GAAG,MAAM,CAAC,OAAO,GAAG,EAAE;EACxE,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,KAAK,SAAS,GAAG,GAAG,GAAG,MAAM,CAAC,KAAK,GAAG,EAAE;EAClE,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,KAAK,SAAS,GAAG,KAAK,GAAG,MAAM,CAAC,GAAG,GAAG,EAAE;;EAE9D,EAAE,SAAS,SAAS,CAAC,SAAS,EAAE;EAChC,IAAI,SAAS,GAAG,eAAe,CAAC,SAAS,CAAC;;EAE1C,IAAI,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI;EAC7B,QAAQ,KAAK,GAAG,SAAS,CAAC,KAAK;EAC/B,QAAQ,IAAI,GAAG,SAAS,CAAC,IAAI;EAC7B,QAAQ,MAAM,GAAG,SAAS,CAAC,MAAM;EACjC,QAAQ,IAAI,GAAG,SAAS,CAAC,IAAI;EAC7B,QAAQ,KAAK,GAAG,SAAS,CAAC,KAAK;EAC/B,QAAQ,KAAK,GAAG,SAAS,CAAC,KAAK;EAC/B,QAAQ,SAAS,GAAG,SAAS,CAAC,SAAS;EACvC,QAAQ,IAAI,GAAG,SAAS,CAAC,IAAI;EAC7B,QAAQ,IAAI,GAAG,SAAS,CAAC,IAAI;;EAE7B;EACA,IAAI,IAAI,IAAI,KAAK,GAAG,EAAE,KAAK,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG;;EAE9C;EACA,SAAS,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,SAAS,KAAK,SAAS,KAAK,SAAS,GAAG,EAAE,CAAC,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG;;EAErG;EACA,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,KAAK,GAAG,GAAG;;EAErF;EACA;EACA,IAAI,IAAI,MAAM,GAAG,MAAM,KAAK,GAAG,GAAG,cAAc,GAAG,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE;EACxH,QAAQ,MAAM,GAAG,MAAM,KAAK,GAAG,GAAG,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,GAAG,EAAE;;EAEnF;EACA;EACA;EACA,IAAI,IAAI,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC;EACtC,QAAQ,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;;EAE7C;EACA;EACA;EACA;EACA,IAAI,SAAS,GAAG,SAAS,KAAK,SAAS,GAAG;EAC1C,UAAU,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC;EACnE,UAAU,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;;EAE9C,IAAI,SAAS,MAAM,CAAC,KAAK,EAAE;EAC3B,MAAM,IAAI,WAAW,GAAG,MAAM;EAC9B,UAAU,WAAW,GAAG,MAAM;EAC9B,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC;;EAEjB,MAAM,IAAI,IAAI,KAAK,GAAG,EAAE;EACxB,QAAQ,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,WAAW;EACrD,QAAQ,KAAK,GAAG,EAAE;EAClB,OAAO,MAAM;EACb,QAAQ,KAAK,GAAG,CAAC,KAAK;;EAEtB;EACA,QAAQ,IAAI,aAAa,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC;;EAEtD;EACA,QAAQ,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;;EAE3E;EACA,QAAQ,IAAI,IAAI,EAAE,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;;EAE3C;EACA,QAAQ,IAAI,aAAa,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,GAAG,EAAE,aAAa,GAAG,KAAK;;EAEhF;EACA,QAAQ,WAAW,GAAG,CAAC,aAAa,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,EAAE,GAAG,IAAI,IAAI,WAAW;EAC9H,QAAQ,WAAW,GAAG,CAAC,IAAI,KAAK,GAAG,GAAG,QAAQ,CAAC,CAAC,GAAG,cAAc,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,WAAW,IAAI,aAAa,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;;EAEvI;EACA;EACA,QAAQ,IAAI,WAAW,EAAE;EACzB,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM;EAClC,UAAU,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;EAC1B,YAAY,IAAI,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE;EAC3D,cAAc,WAAW,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,WAAW;EACpG,cAAc,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACvC,cAAc;EACd;EACA;EACA;EACA;;EAEA;EACA,MAAM,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC;;EAExD;EACA,MAAM,IAAI,MAAM,GAAG,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM;EACzE,UAAU,OAAO,GAAG,MAAM,GAAG,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;;EAElF;EACA,MAAM,IAAI,KAAK,IAAI,IAAI,EAAE,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,EAAE,OAAO,CAAC,MAAM,GAAG,KAAK,GAAG,WAAW,CAAC,MAAM,GAAG,QAAQ,CAAC,EAAE,OAAO,GAAG,EAAE;;EAE7H;EACA,MAAM,QAAQ,KAAK;EACnB,QAAQ,KAAK,GAAG,EAAE,KAAK,GAAG,WAAW,GAAG,KAAK,GAAG,WAAW,GAAG,OAAO,CAAC,CAAC;EACvE,QAAQ,KAAK,GAAG,EAAE,KAAK,GAAG,WAAW,GAAG,OAAO,GAAG,KAAK,GAAG,WAAW,CAAC,CAAC;EACvE,QAAQ,KAAK,GAAG,EAAE,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,WAAW,GAAG,KAAK,GAAG,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;EACtI,QAAQ,SAAS,KAAK,GAAG,OAAO,GAAG,WAAW,GAAG,KAAK,GAAG,WAAW,CAAC,CAAC;EACtE;;EAEA,MAAM,OAAO,QAAQ,CAAC,KAAK,CAAC;EAC5B;;EAEA,IAAI,MAAM,CAAC,QAAQ,GAAG,WAAW;EACjC,MAAM,OAAO,SAAS,GAAG,EAAE;EAC3B,KAAK;;EAEL,IAAI,OAAO,MAAM;EACjB;;EAEA,EAAE,SAAS,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE;EAC1C,IAAI,IAAI,CAAC,GAAG,SAAS,EAAE,SAAS,GAAG,eAAe,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,GAAG,GAAG,EAAE,SAAS,EAAE;EAChG,QAAQ,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC1E,QAAQ,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAC5B,QAAQ,MAAM,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACpC,IAAI,OAAO,SAAS,KAAK,EAAE;EAC3B,MAAM,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM;EAClC,KAAK;EACL;;EAEA,EAAE,OAAO;EACT,IAAI,MAAM,EAAE,SAAS;EACrB,IAAI,YAAY,EAAE;EAClB,GAAG;EACH;;ECjJA,IAAI,MAAM;EACH,IAAI,MAAM;EACV,IAAI,YAAY;;EAEvB,aAAa,CAAC;EACd,EAAE,SAAS,EAAE,GAAG;EAChB,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;EACf,EAAE,QAAQ,EAAE,CAAC,GAAG,EAAE,EAAE;EACpB,CAAC,CAAC;;EAEa,SAAS,aAAa,CAAC,UAAU,EAAE;EAClD,EAAE,MAAM,GAAG,YAAY,CAAC,UAAU,CAAC;EACnC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM;EACxB,EAAE,YAAY,GAAG,MAAM,CAAC,YAAY;EACpC,EAAE,OAAO,MAAM;EACf;;ECfe,uBAAQ,CAAC,IAAI,EAAE;EAC9B,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;EAC/C;;ECFe,wBAAQ,CAAC,IAAI,EAAE,KAAK,EAAE;EACrC,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;EAC/G;;ECFe,uBAAQ,CAAC,IAAI,EAAE,GAAG,EAAE;EACnC,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI;EACnD,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;EACxD;;ECFe,SAAS,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE;EAClE,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;EACzC,MAAM,SAAS;EACf,EAAE,SAAS,GAAG,eAAe,CAAC,SAAS,IAAI,IAAI,GAAG,IAAI,GAAG,SAAS,CAAC;EACnE,EAAE,QAAQ,SAAS,CAAC,IAAI;EACxB,IAAI,KAAK,GAAG,EAAE;EACd,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;EAC3D,MAAM,IAAI,SAAS,CAAC,SAAS,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,SAAS,GAAG,SAAS;EAC1H,MAAM,OAAO,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC;EAC3C;EACA,IAAI,KAAK,EAAE;EACX,IAAI,KAAK,GAAG;EACZ,IAAI,KAAK,GAAG;EACZ,IAAI,KAAK,GAAG;EACZ,IAAI,KAAK,GAAG,EAAE;EACd,MAAM,IAAI,SAAS,CAAC,SAAS,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,SAAS,GAAG,SAAS,IAAI,SAAS,CAAC,IAAI,KAAK,GAAG,CAAC;EACxL,MAAM;EACN;EACA,IAAI,KAAK,GAAG;EACZ,IAAI,KAAK,GAAG,EAAE;EACd,MAAM,IAAI,SAAS,CAAC,SAAS,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,SAAS,CAAC,SAAS,GAAG,SAAS,GAAG,CAAC,SAAS,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC;EACjJ,MAAM;EACN;EACA;EACA,EAAE,OAAO,MAAM,CAAC,SAAS,CAAC;EAC1B;;ECvBO,SAAS,SAAS,CAAC,KAAK,EAAE;EACjC,EAAE,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM;;EAE3B,EAAE,KAAK,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE;EAChC,IAAI,IAAI,CAAC,GAAG,MAAM,EAAE;EACpB,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;EACnE,GAAG;;EAEH,EAAE,KAAK,CAAC,UAAU,GAAG,SAAS,KAAK,EAAE,SAAS,EAAE;EAChD,IAAI,IAAI,CAAC,GAAG,MAAM,EAAE;EACpB,IAAI,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,KAAK,EAAE,SAAS,CAAC;EACnF,GAAG;;EAEH,EAAE,KAAK,CAAC,IAAI,GAAG,SAAS,KAAK,EAAE;EAC/B,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE,KAAK,GAAG,EAAE;;EAEjC,IAAI,IAAI,CAAC,GAAG,MAAM,EAAE;EACpB,IAAI,IAAI,EAAE,GAAG,CAAC;EACd,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC;EACzB,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC;EACrB,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC;EACpB,IAAI,IAAI,OAAO;EACf,IAAI,IAAI,IAAI;EACZ,IAAI,IAAI,OAAO,GAAG,EAAE;;EAEpB,IAAI,IAAI,IAAI,GAAG,KAAK,EAAE;EACtB,MAAM,IAAI,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI;EAC7C,MAAM,IAAI,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,IAAI;EACnC;EACA;EACA,IAAI,OAAO,OAAO,EAAE,GAAG,CAAC,EAAE;EAC1B,MAAM,IAAI,GAAG,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;EAC9C,MAAM,IAAI,IAAI,KAAK,OAAO,EAAE;EAC5B,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG;EAChB,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG;EAChB,QAAQ,OAAO,MAAM,CAAC,CAAC,CAAC;EACxB,OAAO,MAAM,IAAI,IAAI,GAAG,CAAC,EAAE;EAC3B,QAAQ,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI;EAC/C,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI;EAC5C,OAAO,MAAM,IAAI,IAAI,GAAG,CAAC,EAAE;EAC3B,QAAQ,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI;EAC9C,QAAQ,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI;EAC7C,OAAO,MAAM;EACb,QAAQ;EACR;EACA,MAAM,OAAO,GAAG,IAAI;EACpB;;EAEA,IAAI,OAAO,KAAK;EAChB,GAAG;;EAEH,EAAE,OAAO,KAAK;EACd;;EAEe,SAAS,MAAM,GAAG;EACjC,EAAE,IAAI,KAAK,GAAG,UAAU,EAAE;;EAE1B,EAAE,KAAK,CAAC,IAAI,GAAG,WAAW;EAC1B,IAAI,OAAO,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC;EAChC,GAAG;;EAEH,EAAE,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC;;EAEnC,EAAE,OAAO,SAAS,CAAC,KAAK,CAAC;EACzB;;ECnEO,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE;EAChB,IAAI,MAAM,GAAG,EAAE,GAAG,CAAC;EAQnB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI;EAIpB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG;EAGlB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG;EAKlB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG;;ECnBlB,SAAS,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE;EACzC,EAAE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EAC/C;;EAEA,WAAW,CAAC,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;EACpC,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;EACvC,CAAC;;ECPD,IAAMK,cAAc,GAAG,SAAjBA,cAAcA,CAAGpB,CAAC,EAAA;IAAA,OAAI,CAAC,GAAG,CAACqB,WAAc,CAAC,CAAC,EAAE,CAAC,GAAG,GAAGrB,CAAC,IAAIN,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGD,IAAI,CAACC,EAAE,GAAG,CAAC,IAAI,CAAC;EAAA,CAAA;EAC7F,IAAM2B,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAGtB,CAAC,EAAA;EAAA,EAAA,OAAIN,IAAI,CAAC6B,GAAG,CAAC,CAAC,EAAE7B,IAAI,CAAC8B,GAAG,CAAC,CAAC,EAAEJ,cAAc,CAACpB,CAAC,CAAC,CAAC,CAAC;EAAA,CAAA;EAC9E,IAAMyB,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAGzB,CAAC,EAAA;EAAA,EAAA,OAAI,GAAG,GAAGqB,WAAc,CAACK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG1B,CAAC,CAAC,GAAG,CAAC,IAAIN,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGD,IAAI,CAACC,EAAE;EAAA,CAAA;EAE1G,IAAMgC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,GAAG,EAAqB;EAAA,EAAA,IAAnBC,EAAE,GAAAC,SAAA,CAAA5C,MAAA,GAAA,CAAA,IAAA4C,SAAA,CAAA,CAAA,CAAA,KAAAC,SAAA,GAAAD,SAAA,CAAA,CAAA,CAAA,GAAG,CAAC;EAAA,EAAA,IAAEE,EAAE,GAAAF,SAAA,CAAA5C,MAAA,GAAA,CAAA,IAAA4C,SAAA,CAAA,CAAA,CAAA,KAAAC,SAAA,GAAAD,SAAA,CAAA,CAAA,CAAA,GAAG,CAAC;IAC5C,IAAMG,WAAW,GAAGC,MAAW,EAAE,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAACP,EAAE,EAAEG,EAAE,CAAC,CAAC,CAACK,KAAK,CAAC,IAAI,CAAC;EAC5E,EAAA,IAAMC,cAAc,GAAGJ,MAAW,EAAE,CAACC,MAAM,CAAC,CAACb,qBAAqB,CAACO,EAAE,CAAC,EAAEP,qBAAqB,CAACU,EAAE,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC;EAC7H,EAAA,IAAME,KAAK,GAAG,SAARA,KAAKA,CAAGC,CAAC,EAAA;MAAA,OAAIF,cAAc,CAAChB,qBAAqB,CAACW,WAAW,CAACO,CAAC,CAAC,CAAC,CAAC;EAAA,GAAA;EAExE,EAAA,IAAMC,GAAG,GAAGb,GAAG,CAACc,KAAK;EACrB,EAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGH,GAAG,CAACvD,MAAM,EAAEyD,CAAC,GAAGC,GAAG,EAAED,CAAC,IAAE,CAAC,EAAE;EAC/CF,IAAAA,GAAG,CAACE,CAAC,GAAC,CAAC,CAAC,GAAGJ,KAAK,CAACE,GAAG,CAACE,CAAC,GAAC,CAAC,CAAC,CAAC;EAC5B;IACAf,GAAG,CAACiB,WAAW,GAAG,IAAI;EACxB,CAAC;;ECfM,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK,EAAEC,UAAU,EAAEzD,GAAG,EAAED,GAAG,EAAK;IACzD,IAAM2D,QAAQ,GAAAvD,IAAA,CAAAwD,GAAA,CAAG,CAAC,EAAIH,KAAK,CAAA;EAC3B,EAAA,IAAMlD,CAAC,GAAGH,IAAI,CAAC6B,GAAG,CAAC,CAAC,EAAE7B,IAAI,CAAC8B,GAAG,CAACyB,QAAQ,GAAG,CAAC,EAAEvD,IAAI,CAACyD,KAAK,CAAC,CAAC5D,GAAG,GAAG,GAAG,IAAI0D,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC;EACvF,EAAA,IAAIG,IAAI,GAAG,CAAC,EAAE,GAAG9D,GAAG,IAAI,GAAG;IAC3B0D,UAAU,KAAKI,IAAI,GAAG1D,IAAI,CAAC6B,GAAG,CAAC,CAAC,EAAE7B,IAAI,CAAC8B,GAAG,CAAC,CAAC,EAAEJ,cAAc,CAACgC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrE,IAAMpD,CAAC,GAAGN,IAAI,CAACyD,KAAK,CAACC,IAAI,GAAGH,QAAQ,CAAC;EACrC,EAAA,OAAO,CAACpD,CAAC,EAAEG,CAAC,CAAC;EACf,CAAC;EAED,IAAMqD,cAAc,GAAG,SAAjBA,cAAcA,CAAIN,KAAK,EAAEC,UAAU,EAA+B;EAAA,EAAA,IAA7BM,EAAE,GAAAxB,SAAA,CAAA5C,MAAA,GAAA,CAAA,IAAA4C,SAAA,CAAA,CAAA,CAAA,KAAAC,SAAA,GAAAD,SAAA,CAAA,CAAA,CAAA,GAAG,CAAC;EAAA,EAAA,IAAED,EAAE,GAAAC,SAAA,CAAA5C,MAAA,GAAA,CAAA,IAAA4C,SAAA,CAAA,CAAA,CAAA,KAAAC,SAAA,GAAAD,SAAA,CAAA,CAAA,CAAA,GAAG,CAAC;IAAA,IAAEyB,GAAG,GAAAzB,SAAA,CAAA5C,MAAA,GAAA4C,CAAAA,GAAAA,SAAA,MAAAC,SAAA;IAAA,IAAEyB,GAAG,GAAA1B,SAAA,CAAA5C,MAAA,GAAA4C,CAAAA,GAAAA,SAAA,MAAAC,SAAA;IACjE,IAAM0B,KAAK,GAAG,EAAE;IAEhB,IAAMR,QAAQ,GAAAvD,IAAA,CAAAwD,GAAA,CAAG,CAAC,EAAIH,KAAK,CAAA;EAC3B,EAAA,IAAMW,UAAU,GAAG,GAAG,GAAGT,QAAQ;EACjC,EAAA,IAAMU,aAAa,GAAG,GAAG,GAAGV,QAAQ;IAEpC,IAAMW,EAAE,GAAGL,GAAG,KAAKxB,SAAS,GAAGkB,QAAQ,GAAG,CAAC,GAAGM,GAAG;IACjD,IAAMvB,EAAE,GAAGwB,GAAG,KAAKzB,SAAS,GAAGkB,QAAQ,GAAG,CAAC,GAAGO,GAAG;IAEjD,KAAK,IAAI3D,CAAC,GAAGyD,EAAE,EAAEO,IAAI,GAAGnE,IAAI,CAAC8B,GAAG,CAACyB,QAAQ,GAAG,CAAC,EAAEW,EAAE,CAAC,EAAE/D,CAAC,IAAIgE,IAAI,EAAEhE,CAAC,EAAE,EAAE;MAClE,KAAK,IAAIG,CAAC,GAAG6B,EAAE,EAAEiC,IAAI,GAAGpE,IAAI,CAAC8B,GAAG,CAACyB,QAAQ,GAAG,CAAC,EAAEjB,EAAE,CAAC,EAAEhC,CAAC,IAAI8D,IAAI,EAAE9D,CAAC,EAAE,EAAE;QAClE,IAAI+D,MAAM,GAAG/D,CAAC;EAAEgE,QAAAA,UAAU,GAAGL,aAAa;EAE1C,MAAA,IAAIX,UAAU,EAAE;EACd;EACAe,QAAAA,MAAM,GAAG/D,CAAC,KAAK,CAAC,GAAGA,CAAC,GAAGyB,oBAAoB,CAACzB,CAAC,GAAGiD,QAAQ,CAAC,GAAGA,QAAQ;UACpE,IAAMgB,SAAS,GAAGjE,CAAC,GAAG,CAAC,KAAKiD,QAAQ,GAAGjD,CAAC,GAAG,CAAC,GAAGyB,oBAAoB,CAAC,CAACzB,CAAC,GAAG,CAAC,IAAIiD,QAAQ,CAAC,GAAGA,QAAQ;UAClGe,UAAU,GAAG,CAACC,SAAS,GAAGF,MAAM,IAAI,GAAG,GAAGd,QAAQ;EACpD;;EAEA;QACA,IAAM1D,GAAG,GAAG,IAAI,GAAG,CAACM,CAAC,GAAG,GAAG,IAAI6D,UAAU;EACzC,MAAA,IAAMpE,GAAG,GAAG,EAAE,IAAIyE,MAAM,GAAG,GAAG,GAAGd,QAAQ,GAAGe,UAAU,GAAG,CAAC,CAAC;EAC3D,MAAA,IAAME,MAAM,GAAGF,UAAU,CAAC;;QAE1BP,KAAK,CAACU,IAAI,CAAC;EAAEtE,QAAAA,CAAC,EAADA,CAAC;EAAEG,QAAAA,CAAC,EAADA,CAAC;EAAET,QAAAA,GAAG,EAAHA,GAAG;EAAED,QAAAA,GAAG,EAAHA,GAAG;EAAE4E,QAAAA,MAAM,EAANA;EAAO,OAAC,CAAC;EACxC;EACF;EAEA,EAAA,OAAOT,KAAK;EACd,CAAC;;ECrBD,IAAMW,6BAA6B,GAAG,CAAC,CAAC;EACxC,IAAMC,gCAAgC,GAAG,CAAC,CAAC;EAC3C,IAAMC,kCAAkC,GAAG,CAAC,CAAC;EAC7C,IAAMC,mCAAmC,GAAG,EAAE,CAAC;EAAC,IAAAC,OAAA,oBAAAC,OAAA,EAAA;EAAA,IAAAC,WAAA,oBAAAD,OAAA,EAAA;EAAA,IAAAE,QAAA,oBAAAF,OAAA,EAAA;EAAA,IAAAG,MAAA,oBAAAH,OAAA,EAAA;EAAA,IAAAI,UAAA,oBAAAJ,OAAA,EAAA;EAAA,IAAAK,SAAA,oBAAAL,OAAA,EAAA;EAAA,IAAAM,OAAA,oBAAAN,OAAA,EAAA;EAAA,IAAAO,eAAA,oBAAAP,OAAA,EAAA;EAAA,IAAAQ,0BAAA,oBAAAC,OAAA,EAAA;AAE3BC,MAAAA,mBAAmB,0BAAAC,MAAA,EAAA;IACtC,SAAAD,mBAAAA,CAAYE,MAAM,EAKV;EAAA,IAAA,IAAAC,KAAA;EAAA,IAAA,IAAAnF,IAAA,GAAA2B,SAAA,CAAA5C,MAAA,GAAA,CAAA,IAAA4C,SAAA,CAAA,CAAA,CAAA,KAAAC,SAAA,GAAAD,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAE;QAJJyD,OAAO,GAAApF,IAAA,CAAPoF,OAAO;QAAAC,aAAA,GAAArF,IAAA,CACPsF,QAAQ;EAARA,MAAAA,QAAQ,GAAAD,aAAA,KAAG,SAAA,GAAA,CAAC,GAAAA,aAAA;QAAAE,aAAA,GAAAvF,IAAA,CACZwF,QAAQ;EAARA,MAAAA,QAAQ,GAAAD,aAAA,KAAG,SAAA,GAAA,EAAE,GAAAA,aAAA;QAAAE,qBAAA,GAAAzF,IAAA,CACb0F,kBAAkB;EAAlBA,MAAAA,kBAAkB,GAAAD,qBAAA,KAAG,SAAA,GAAA,IAAI,GAAAA,qBAAA;EAAAE,IAAAA,eAAA,OAAAX,mBAAA,CAAA;MAEzBG,KAAA,GAAAS,UAAA,CAAA,IAAA,EAAAZ,mBAAA,CAAA;EAkIF;MAAAa,2BAAA,CAAAV,KAAA,EAAAL,0BAAA,CAAA;EA/GA;MACAgB,0BAAA,CAAAX,KAAA,EAAAd,OAAO,EAAA,SAAA,CAAA;MACPyB,0BAAA,CAAAX,KAAA,EAAAZ,WAAW,EAAA,SAAA,CAAA;MACXuB,0BAAA,CAAAX,KAAA,EAAAX,QAAQ,EAAA,SAAA,CAAA;MACRsB,0BAAA,CAAAX,KAAA,EAAAV,MAAM,EAAA,SAAA,CAAA;EACNqB,IAAAA,0BAAA,CAAAX,KAAA,EAAAT,UAAU,EAAG,EAAE,CAAA;MACfoB,0BAAA,CAAAX,KAAA,EAAAR,SAAS,EAAA,SAAA,CAAA;MACTmB,0BAAA,CAAAX,KAAA,EAAAP,OAAO,EAAA,SAAA,CAAA;MACPkB,0BAAA,CAAAX,KAAA,EAAAN,eAAe,EAAA,SAAA,CAAA;EAACkB,IAAAA,eAAA,CAAAZ,KAAA,EAAA,UAAA,EAAA,SAAA,CAAA;EAAAY,IAAAA,eAAA,CAAAZ,KAAA,EAAA,UAAA,EAAA,SAAA,CAAA;EAAAY,IAAAA,eAAA,CAAAZ,KAAA,EAAA,YAAA,EAUHa,kBAAA,CAAI,IAAI3H,KAAK,CAAC,EAAE,CAAC,EAAEE,GAAG,CAAC,UAAC0H,CAAC,EAAEC,GAAG,EAAA;QAAA,OAAK,CAAC,GAAA3G,IAAA,CAAAwD,GAAA,CAAG,CAAC,EAAEmD,GAAG,CAAA;OAAC,CAAA,CAAA;EAAE;MAAAH,eAAA,CAAAZ,KAAA,EAAA,qBAAA,EACvC,CAAC,CAAA;EAAE;MAAAY,eAAA,CAAAZ,KAAA,EAAA,YAAA,EACZ,CAAC,CAAA;MAAAY,eAAA,CAAAZ,KAAA,EAAA,YAAA,EA8ED,YAAM;EACjBgB,MAAAA,MAAM,CAACC,MAAM,CAACC,sBAAA,CAAK3B,UAAU,EAAAS,KAAD,CAAC,CAAC,CAAC7G,OAAO,CAAC,UAAAgI,CAAC,EAAI;EAC1CA,QAAAA,CAAC,CAAChI,OAAO,CAAC,UAAAiI,CAAC,EAAI;YACb,IAAIA,CAAC,CAAC7H,GAAG,EAAE;EACTyG,YAAAA,KAAA,CAAKlG,MAAM,CAACsH,CAAC,CAAC7H,GAAG,CAAC;EAClBI,YAAAA,WAAW,CAACyH,CAAC,CAAC7H,GAAG,CAAC;cAClB,OAAO6H,CAAC,CAAC7H,GAAG;EACd;EACF,SAAC,CAAC;EACJ,OAAC,CAAC;EACF8H,MAAAA,sBAAA,CAAK9B,UAAU,EAAAS,KAAA,EAAG,EAAJ,CAAC;OAChB,CAAA;EA/HCqB,IAAAA,sBAAA,CAAKnC,OAAO,EAAAc,KAAA,EAAGD,MAAJ,CAAC;MACZC,KAAA,CAAKC,OAAO,GAAGA,OAAO;EACtBoB,IAAAA,sBAAA,CAAKjC,WAAW,EAAAY,KAAA,EAAGO,kBAAJ,CAAC;MAChBP,KAAA,CAAKG,QAAQ,GAAGA,QAAQ;MACxBH,KAAA,CAAKK,QAAQ,GAAGA,QAAQ;MACxBL,KAAA,CAAKvC,KAAK,GAAG,CAAC;;EAEd;EACAuC,IAAAA,KAAA,CAAKsB,GAAG,CAACD,sBAAA,CAAK3B,eAAe,EAAAM,KAAA,EAAG,IAAIuB,UAAI,CACtC,IAAIC,oBAAc,CAACN,sBAAA,CAAKhC,OAAO,EAAAc,KAAD,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,EAChD,IAAIyB,uBAAiB,CAAC;EAAEC,MAAAA,KAAK,EAAE;OAAK,CACtC,CAH4B,CAG3B,CAAC;MACFR,sBAAA,CAAKxB,eAAe,EAAAM,KAAD,CAAC,CAAC2B,OAAO,GAAG,KAAK;MACpCT,sBAAA,CAAKxB,eAAe,EAAAM,KAAD,CAAC,CAAC/G,QAAQ,CAAC2I,aAAa,GAAG,IAAI;MAClDV,sBAAA,CAAKxB,eAAe,EAAAM,KAAD,CAAC,CAAC/G,QAAQ,CAAC4I,kBAAkB,GAAG,CAAC;MACpDX,sBAAA,CAAKxB,eAAe,EAAAM,KAAD,CAAC,CAAC/G,QAAQ,CAAC6I,mBAAmB,GAAG,CAAC;EAAC,IAAA,OAAA9B,KAAA;EACxD;IAAC+B,SAAA,CAAAlC,mBAAA,EAAAC,MAAA,CAAA;IAAA,OAAAkC,YAAA,CAAAnC,mBAAA,EAAA,CAAA;MAAAoC,GAAA,EAAA,SAAA;MAAAC,GAAA;EAYD;EACA,IAAA,SAAAA,MAAc;EAAE,MAAA,OAAOhB,sBAAA,CAAK7B,QAAQ,EAAb,IAAY,CAAC;OAAE;EAAA8C,IAAAA,GAAA,EACtC,SAAAA,GAAYlC,CAAAA,OAAO,EAAE;EACnBoB,MAAAA,sBAAA,CAAKhC,QAAQ,EAAb,IAAI,EAAYY,OAAJ,CAAC;QACb,IAAI,CAACmC,SAAS,CAAClB,sBAAA,CAAKzB,OAAO,EAAZ,IAAW,CAAC,CAAC,CAAC;EAC/B;EAAC,GAAA,EAAA;MAAAwC,GAAA,EAAA,OAAA;MAAAC,GAAA,EAMD,SAAAA,GAAAA,GAAY;EAAE,MAAA,OAAOhB,sBAAA,CAAK5B,MAAM,EAAX,IAAU,CAAC;OAAE;EAAA6C,IAAAA,GAAA,EAClC,SAAAA,GAAU1E,CAAAA,KAAK,EAAE;EAAA,MAAA,IAAA4E,MAAA,GAAA,IAAA;QACf,IAAI,CAACnB,sBAAA,CAAK3B,UAAU,EAAf,IAAc,CAAC,CAAC9B,KAAK,CAAC,EAAE6E,iBAAA,CAAA3C,0BAAA,EAAI,IAAA,EAAC4C,eAAc,CAAC,CAAAC,IAAA,CAApB,IAAI,EAAiB/E,KAAK,CAAA;EAEvD,MAAA,IAAMgF,SAAS,GAAGvB,sBAAA,CAAK5B,MAAM,EAAX,IAAU,CAAC;EAC7B+B,MAAAA,sBAAA,CAAK/B,MAAM,EAAX,IAAI,EAAU7B,KAAJ,CAAC;QAEX,IAAIA,KAAK,KAAKgF,SAAS,IAAIA,SAAS,KAAKhG,SAAS,EAAE,OAAO;;EAE3D;QACAyE,sBAAA,CAAKxB,eAAe,EAApB,IAAmB,CAAC,CAACiC,OAAO,GAAGlE,KAAK,GAAG,CAAC;;EAExC;EACAyD,MAAAA,sBAAA,CAAK3B,UAAU,EAAf,IAAc,CAAC,CAAC9B,KAAK,CAAC,CAACtE,OAAO,CAAC,UAAAiI,CAAC,EAAA;EAAA,QAAA,OAAIA,CAAC,CAAC7H,GAAG,KAAK6H,CAAC,CAAC7H,GAAG,CAACN,QAAQ,CAACyJ,UAAU,GAAG,IAAI,CAAC;SAAC,CAAA;;EAEhF;EACAD,MAAAA,SAAS,GAAGhF,KAAK,IAAIyD,sBAAA,CAAK3B,UAAU,EAAf,IAAc,CAAC,CAACkD,SAAS,CAAC,CAACtJ,OAAO,CAAC,UAAAiI,CAAC,EAAA;EAAA,QAAA,OAAIA,CAAC,CAAC7H,GAAG,KAAK6H,CAAC,CAAC7H,GAAG,CAACN,QAAQ,CAACyJ,UAAU,GAAG,KAAK,CAAC;SAAC,CAAA;;EAE1G;QACA,IAAID,SAAS,GAAGhF,KAAK,EAAE;EACrB,QAAA,KAAK,IAAI0D,CAAC,GAAG1D,KAAK,GAAG,CAAC,EAAE0D,CAAC,IAAIsB,SAAS,EAAEtB,CAAC,EAAE,EAAE;YAC3CD,sBAAA,CAAK3B,UAAU,EAAf,IAAc,CAAC,CAAC4B,CAAC,CAAC,IAAID,sBAAA,CAAK3B,UAAU,EAAf,IAAc,CAAC,CAAC4B,CAAC,CAAC,CAAChI,OAAO,CAAC,UAAAiI,CAAC,EAAI;cACpD,IAAIA,CAAC,CAAC7H,GAAG,EAAE;EACT8I,cAAAA,MAAI,CAACvI,MAAM,CAACsH,CAAC,CAAC7H,GAAG,CAAC;EAClBI,cAAAA,WAAW,CAACyH,CAAC,CAAC7H,GAAG,CAAC;gBAClB,OAAO6H,CAAC,CAAC7H,GAAG;EACd;EACF,WAAC,CAAC;EACJ;EACF;QAEA+I,iBAAA,CAAA3C,0BAAA,EAAI,IAAA,EAACgD,iBAAgB,CAAC,CAAAH,IAAA,CAAtB,IAAI,CAAA;EACN;;EAEA;EAAA,GAAA,EAAA;MAAAP,GAAA,EAAA,WAAA;EAAAzG,IAAAA,KAAA,EACA,SAAA4G,SAASA,CAACQ,MAAM,EAAE;EAAA,MAAA,IAAAC,MAAA,GAAA,IAAA;QAChB,IAAI,CAACD,MAAM,IAAI,EAAEA,MAAM,YAAYE,YAAM,CAAC,EAAE;EAE5CzB,MAAAA,sBAAA,CAAK5B,OAAO,EAAZ,IAAI,EAAWmD,MAAJ,CAAC;EAEZ,MAAA,IAAIG,OAAO;EACX1B,MAAAA,sBAAA,CAAK7B,SAAS,EAAd,IAAI,EAAa,UAAA4B,CAAC,EAAI;EACpB,QAAA,IAAI,CAACA,CAAC,CAAC4B,QAAQ,EAAE;EAAE;EACjB,UAAA,IAAMC,MAAM,GAAG,GAAG,GAAA7I,IAAA,CAAAwD,GAAA,CAAI,CAAC,EAAEiF,MAAI,CAACpF,KAAK,CAAC;EACpC,UAAA,IAAQxD,GAAG,GAAkBmH,CAAC,CAAtBnH,GAAG;cAAED,GAAG,GAAaoH,CAAC,CAAjBpH,GAAG;cAAE4E,MAAM,GAAKwC,CAAC,CAAZxC,MAAM;EACxB,UAAA,IAAMsE,IAAI,GAAGjJ,GAAG,GAAGgJ,MAAM,GAAG,CAAC;EAC7B,UAAA,IAAME,IAAI,GAAGlJ,GAAG,GAAGgJ,MAAM,GAAG,CAAC;EAC7B,UAAA,IAAMG,IAAI,GAAGpJ,GAAG,GAAG4E,MAAM,GAAG,CAAC;EAC7B,UAAA,IAAMyE,IAAI,GAAGrJ,GAAG,GAAG4E,MAAM,GAAG,CAAC;EAC7BwC,UAAAA,CAAC,CAAC4B,QAAQ,GAAG,CAAC,CAAChJ,GAAG,EAAEC,GAAG,CAAC,EAAE,CAACmJ,IAAI,EAAEF,IAAI,CAAC,EAAE,CAACG,IAAI,EAAEH,IAAI,CAAC,EAAE,CAACE,IAAI,EAAED,IAAI,CAAC,EAAE,CAACE,IAAI,EAAEF,IAAI,CAAC,CAAC,CAC9E/J,GAAG,CAAC,UAAAkK,KAAA,EAAA;EAAA,YAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,KAAA,EAAA,CAAA,CAAA;EAAEtJ,cAAAA,GAAG,GAAAuJ,KAAA,CAAA,CAAA,CAAA;EAAEtJ,cAAAA,GAAG,GAAAsJ,KAAA,CAAA,CAAA,CAAA;EAAA,YAAA,OAAMxJ,eAAe,CAACC,GAAG,EAAEC,GAAG,EAAEiH,sBAAA,CAAKhC,OAAO,EAAZ2D,MAAW,CAAC,CAAC;EAAA,WAAA,CAAC,CAC5DzJ,GAAG,CAAC,UAAAqK,KAAA,EAAA;EAAA,YAAA,IAAGlJ,CAAC,GAAAkJ,KAAA,CAADlJ,CAAC;gBAAEG,CAAC,GAAA+I,KAAA,CAAD/I,CAAC;gBAAEC,CAAC,GAAA8I,KAAA,CAAD9I,CAAC;cAAA,OAAO,IAAI+I,aAAO,CAACnJ,CAAC,EAAEG,CAAC,EAAEC,CAAC,CAAC;aAAC,CAAA;EAC/C;UAEA,IAAI,CAACoI,OAAO,EAAE;EACZA,UAAAA,OAAO,GAAG,IAAIY,aAAO,EAAE;YACvBf,MAAM,CAACgB,YAAY,EAAE;YACrBhB,MAAM,CAACiB,iBAAiB,EAAE;EAC1Bd,UAAAA,OAAO,CAACe,uBAAuB,CAAC,IAAIC,aAAO,EAAE,CAACC,gBAAgB,CAACpB,MAAM,CAACqB,gBAAgB,EAAErB,MAAM,CAACsB,kBAAkB,CAAC,CAAC;EACrH;EAEA,QAAA,OAAO9C,CAAC,CAAC4B,QAAQ,CAACmB,IAAI,CAAC,UAAAC,GAAG,EAAA;EAAA,UAAA,OACxBrB,OAAO,CAACsB,aAAa,CAACD,GAAG,CAACE,KAAK,EAAE,CAACC,YAAY,CAAC1B,MAAI,CAAC2B,WAAW,CAAC,CAAC;EAAA,SACnE,CAAC;EACH,OAvBa,CAAC;QAyBd,IAAI,IAAI,CAACvE,OAAO,EAAE;UAChB,IAAMwE,GAAG,GAAG7B,MAAM,CAAC8B,QAAQ,CAACJ,KAAK,EAAE;EACnC,QAAA,IAAMK,iBAAiB,GAAGF,GAAG,CAACG,UAAU,CAAC,IAAI,CAACC,gBAAgB,CAAC,IAAInB,aAAO,EAAE,CAAC,CAAC;EAC9E,QAAA,IAAMoB,cAAc,GAAG,CAACH,iBAAiB,GAAGzD,sBAAA,CAAKhC,OAAO,EAAZ,IAAW,CAAC,IAAIgC,sBAAA,CAAKhC,OAAO,EAAZ,IAAW,CAAC,CAAC;;UAEzE,IAAM6B,GAAG,GAAG,IAAI,CAACgE,UAAU,CAACC,SAAS,CAAC,UAAAC,CAAC,EAAA;EAAA,UAAA,OAAIA,CAAC,IAAIA,CAAC,IAAIH,cAAc;WAAC,CAAA;EACpE,QAAA,IAAI,CAACrH,KAAK,GAAGrD,IAAI,CAAC8B,GAAG,CAAC,IAAI,CAACmE,QAAQ,EAAEjG,IAAI,CAAC6B,GAAG,CAAC,IAAI,CAACkE,QAAQ,EAAEY,GAAG,GAAG,CAAC,GAAG,IAAI,CAACgE,UAAU,CAACnL,MAAM,GAAGmH,GAAG,CAAC,CAAC;UACrGuB,iBAAA,CAAA3C,0BAAA,EAAI,IAAA,EAACgD,iBAAgB,CAAC,CAAAH,IAAA,CAAtB,IAAI,CAAA;EACN;EACF;EAAC,GAAA,CAAA,CAAA;EAAA,CAAA,CA1H8C0C,WAAK;EAAA,SAAA3C,eAAAA,CA0IpC9E,KAAK,EAAE;EAAA,EAAA,IAAA0H,MAAA,GAAA,IAAA;IACrB,IAAI1H,KAAK,GAAGsB,gCAAgC,EAAE;EAC5C;MACAmC,sBAAA,CAAK3B,UAAU,EAAf,IAAc,CAAC,CAAC9B,KAAK,CAAC,GAAG,EAAE;EAC3B,IAAA;EACF;;EAEA;IACA,IAAM2H,SAAS,GAAGlE,sBAAA,CAAK3B,UAAU,EAAf,IAAc,CAAC,CAAC9B,KAAK,CAAC,GAAG4H,cAAQ,CAAC5H,KAAK,EAAEyD,sBAAA,CAAK9B,WAAW,EAAhB,IAAe,CAAC,CAAC;EAC5EgG,EAAAA,SAAS,CAACjM,OAAO,CAAC,UAAAiI,CAAC,EAAA;MAAA,OAAIA,CAAC,CAACkE,QAAQ,GAAGvL,eAAe,CAACqH,CAAC,CAACpH,GAAG,EAAEoH,CAAC,CAACnH,GAAG,EAAEiH,sBAAA,CAAKhC,OAAO,EAAZiG,MAAW,CAAC,CAAC;KAAC,CAAA;IAChFC,SAAS,CAACG,MAAM,GAAGC,MAAQ,EAAE,CAC1BjL,CAAC,CAAC,UAAA6G,CAAC,EAAA;EAAA,IAAA,OAAIA,CAAC,CAACkE,QAAQ,CAAC/K,CAAC;EAAA,GAAA,CAAC,CACpBG,CAAC,CAAC,UAAA0G,CAAC,EAAA;EAAA,IAAA,OAAIA,CAAC,CAACkE,QAAQ,CAAC5K,CAAC;EAAA,GAAA,CAAC,CACpBC,CAAC,CAAC,UAAAyG,CAAC,EAAA;EAAA,IAAA,OAAIA,CAAC,CAACkE,QAAQ,CAAC3K,CAAC;EAAA,GAAA,CAAC,CACpB8K,MAAM,CAACL,SAAS,CAAC;EACtB;EAAC,SAAAzC,oBAEkB;EAAA,EAAA,IAAA+C,MAAA,GAAA,IAAA;IACjB,IAAI,CAAC,IAAI,CAACzF,OAAO,IAAI,IAAI,CAACxC,KAAK,KAAKhB,SAAS,IAAI,CAACyE,sBAAA,CAAK3B,UAAU,EAAf,IAAc,CAAC,CAACoG,cAAc,CAAC,IAAI,CAAClI,KAAK,CAAC,EAAE;;EAE9F;EACA,EAAA,IAAI,CAACyD,sBAAA,CAAK1B,SAAS,EAAd,IAAa,CAAC,IAAI,IAAI,CAAC/B,KAAK,GAAGqB,6BAA6B,EAAE;EAEnE,EAAA,IAAIX,KAAK,GAAG+C,sBAAA,CAAK3B,UAAU,EAAf,IAAc,CAAC,CAAC,IAAI,CAAC9B,KAAK,CAAC;EACvC,EAAA,IAAIyD,sBAAA,CAAKzB,OAAO,EAAZ,IAAW,CAAC,EAAE;EAAE;EAClB,IAAA,IAAMmG,MAAM,GAAG,IAAI,CAACC,YAAY,CAAC3E,sBAAA,CAAKzB,OAAO,EAAZ,IAAW,CAAC,CAACiF,QAAQ,CAACJ,KAAK,EAAE,CAAC;MAE/D,IAAInG,KAAK,CAACoH,MAAM,EAAE;EAAA,MAAA,IAAAO,aAAA;EAAE;EAClB,MAAA,IAAMF,OAAM,GAAG,IAAI,CAACC,YAAY,CAAC3E,sBAAA,CAAKzB,OAAO,EAAZ,IAAW,CAAC,CAACiF,QAAQ,CAACJ,KAAK,EAAE,CAAC;EAC/D,MAAA,IAAMyB,YAAY,GAAG,CAACH,OAAM,CAAChM,MAAM,EAAE,GAAGsH,sBAAA,CAAKhC,OAAO,EAAZ,IAAW,CAAC,IAAIF,kCAAkC;QAC1Fb,KAAK,GAAG,CAAA2H,aAAA,GAAA3H,KAAK,CAACoH,MAAM,EAACS,mBAAmB,CAAAC,KAAA,CAAAH,aAAA,EAAAjF,kBAAA,CAAI+E,OAAM,CAAAM,CAAAA,MAAA,CAAEH,CAAAA,YAAY,CAAC,CAAA,CAAA;EACnE,KAAC,MAAM;EAAE;EACP,MAAA,IAAMI,SAAS,GAAGvL,eAAe,CAACgL,MAAM,CAAC;EACzC,MAAA,IAAMQ,eAAe,GAAG,CAACD,SAAS,CAACjM,CAAC,GAAGgH,sBAAA,CAAKhC,OAAO,EAAZ,IAAW,CAAC,GAAG,CAAC,IAAID,mCAAmC;EAC9F,MAAA,IAAMoH,eAAe,GAAGD,eAAe,GAAGhM,IAAI,CAACK,GAAG,CAACQ,OAAO,CAACkL,SAAS,CAACnM,GAAG,CAAC,CAAC,CAAC;EAC3E,MAAA,IAAMsM,QAAQ,GAAG,CAACH,SAAS,CAAClM,GAAG,GAAGoM,eAAe,EAAEF,SAAS,CAAClM,GAAG,GAAGoM,eAAe,CAAC;EACnF,MAAA,IAAME,QAAQ,GAAG,CAACJ,SAAS,CAACnM,GAAG,GAAGoM,eAAe,EAAED,SAAS,CAACnM,GAAG,GAAGoM,eAAe,CAAC;QAEnF,IAAAI,WAAA,GAAiBhJ,UAAU,CAAC,IAAI,CAACC,KAAK,EAAEyD,sBAAA,CAAK9B,WAAW,EAAhB,IAAe,CAAC,EAAEkH,QAAQ,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAAC,CAAC;UAAAE,YAAA,GAAAjD,cAAA,CAAAgD,WAAA,EAAA,CAAA,CAAA;EAA5ExI,QAAAA,EAAE,GAAAyI,YAAA,CAAA,CAAA,CAAA;EAAElK,QAAAA,EAAE,GAAAkK,YAAA,CAAA,CAAA,CAAA;QACb,IAAAC,YAAA,GAAiBlJ,UAAU,CAAC,IAAI,CAACC,KAAK,EAAEyD,sBAAA,CAAK9B,WAAW,EAAhB,IAAe,CAAC,EAAEkH,QAAQ,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAAC,CAAC;UAAAI,YAAA,GAAAnD,cAAA,CAAAkD,YAAA,EAAA,CAAA,CAAA;EAA5EpI,QAAAA,EAAE,GAAAqI,YAAA,CAAA,CAAA,CAAA;EAAEjK,QAAAA,EAAE,GAAAiK,YAAA,CAAA,CAAA,CAAA;EAEb,MAAA,CAACxI,KAAK,CAACyI,MAAM,KAAKzI,KAAK,CAACyI,MAAM,GAAG,EAAE,CAAC,CAAC;EACrC,MAAA,IAAM1M,CAAC,GAAGiE,KAAK,CAACyI,MAAM;EAEtB,MAAA,IAAI,CAAC1M,CAAC,CAACyL,cAAc,IAAAO,MAAA,CAAI9L,IAAI,CAACyM,KAAK,CAAC,CAAC7I,EAAE,GAACM,EAAE,IAAE,CAAC,CAAC,EAAA,GAAA,CAAA,CAAA4H,MAAA,CAAI9L,IAAI,CAACyM,KAAK,CAAC,CAACtK,EAAE,GAACG,EAAE,IAAE,CAAC,CAAC,CAAE,CAAC,EAAE;EAAE;UAC5EyB,KAAK,GAAGkH,cAAQ,CAAC,IAAI,CAAC5H,KAAK,EAAEyD,sBAAA,CAAK9B,WAAW,EAAhB,IAAe,CAAC,EAAEpB,EAAE,EAAEzB,EAAE,EAAE+B,EAAE,EAAE5B,EAAE,CAAC,CAC3DtD,GAAG,CAAC,UAAAgI,CAAC,EAAI;EACR,UAAA,IAAM0F,CAAC,GAAA,EAAA,CAAAZ,MAAA,CAAM9E,CAAC,CAAC7G,CAAC,EAAA,GAAA,CAAA,CAAA2L,MAAA,CAAI9E,CAAC,CAAC1G,CAAC,CAAE;YACzB,IAAIR,CAAC,CAACyL,cAAc,CAACmB,CAAC,CAAC,EAAE,OAAO5M,CAAC,CAAC4M,CAAC,CAAC;EAEpC5M,UAAAA,CAAC,CAAC4M,CAAC,CAAC,GAAG1F,CAAC;EACRjD,UAAAA,KAAK,CAACU,IAAI,CAACuC,CAAC,CAAC;EACb,UAAA,OAAOA,CAAC;EACV,SAAC,CAAC;EACN,OAAC,MAAM;EAAE;UACP,IAAM2F,QAAQ,GAAG,EAAE;UACnB,KAAK,IAAIxM,CAAC,GAAGyD,EAAE,EAAEzD,CAAC,IAAI+D,EAAE,EAAE/D,CAAC,EAAE,EAAE;YAC7B,KAAK,IAAIG,CAAC,GAAG6B,EAAE,EAAE7B,CAAC,IAAIgC,EAAE,EAAEhC,CAAC,EAAE,EAAE;cAC7B,IAAMoM,CAAC,MAAAZ,MAAA,CAAM3L,CAAC,EAAA2L,GAAAA,CAAAA,CAAAA,MAAA,CAAIxL,CAAC,CAAE;EACrB,YAAA,IAAI,CAACR,CAAC,CAACyL,cAAc,CAACmB,CAAC,CAAC,EAAE;gBACxB5M,CAAC,CAAC4M,CAAC,CAAC,GAAGzB,cAAQ,CAAC,IAAI,CAAC5H,KAAK,EAAEyD,sBAAA,CAAK9B,WAAW,EAAhB,IAAe,CAAC,EAAE7E,CAAC,EAAEG,CAAC,EAAEH,CAAC,EAAEG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5DyD,cAAAA,KAAK,CAACU,IAAI,CAAC3E,CAAC,CAAC4M,CAAC,CAAC,CAAC;EAClB;EACAC,YAAAA,QAAQ,CAAClI,IAAI,CAAC3E,CAAC,CAAC4M,CAAC,CAAC,CAAC;EACrB;EACF;EACA3I,QAAAA,KAAK,GAAG4I,QAAQ;EAClB;EACF;EACF;;EAEA;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI5I,EAAAA,KAAK,CACF6I,MAAM,CAAC,UAAA5F,CAAC,EAAA;MAAA,OAAI,CAACA,CAAC,CAAC7H,GAAG;KAAC,CAAA,CACnByN,MAAM,CAAC9F,sBAAA,CAAK1B,SAAS,EAAd,IAAa,CAAC,IAAK,YAAA;EAAA,IAAA,OAAM,IAAI;EAAA,GAAC,CAAC,CACtCrG,OAAO,CAAC,UAAAiI,CAAC,EAAI;EACZ,IAAA,IAAQ7G,CAAC,GAA0B6G,CAAC,CAA5B7G,CAAC;QAAEG,CAAC,GAAuB0G,CAAC,CAAzB1G,CAAC;QAAET,GAAG,GAAkBmH,CAAC,CAAtBnH,GAAG;QAAED,GAAG,GAAaoH,CAAC,CAAjBpH,GAAG;QAAE4E,MAAM,GAAKwC,CAAC,CAAZxC,MAAM;EAC9B,IAAA,IAAMqE,MAAM,GAAG,GAAG,GAAA7I,IAAA,CAAAwD,GAAA,CAAI,CAAC,EAAE8H,MAAI,CAACjI,KAAK,CAAC;EAEpC,IAAA,IAAI,CAAC2D,CAAC,CAAC7H,GAAG,EAAE;QACV,IAAM0N,KAAK,GAAGhE,MAAM,IAAI,CAAC,GAAGyC,MAAI,CAACwB,UAAU,CAAC;QAC5C,IAAMC,MAAM,GAAGvI,MAAM,IAAI,CAAC,GAAG8G,MAAI,CAACwB,UAAU,CAAC;EAC7C,MAAA,IAAME,MAAM,GAAGnM,OAAO,CAAChB,GAAG,CAAC;EAC3B,MAAA,IAAMoN,MAAM,GAAGpM,OAAO,CAAC,CAACjB,GAAG,CAAC;EAC5B,MAAA,IAAMsN,IAAI,GAAG,IAAI/F,UAAI,CACnB,IAAIC,oBAAc,CAChBN,sBAAA,CAAKhC,OAAO,EAAZwG,MAAW,CAAC,EACZtL,IAAI,CAACmN,IAAI,CAACN,KAAK,GAAGvB,MAAI,CAAC8B,mBAAmB,CAAC,EAC3CpN,IAAI,CAACmN,IAAI,CAACJ,MAAM,GAAGzB,MAAI,CAAC8B,mBAAmB,CAAC,EAC5CvM,OAAO,CAAC,EAAE,GAAGgM,KAAK,GAAG,CAAC,CAAC,GAAGG,MAAM,EAChCnM,OAAO,CAACgM,KAAK,CAAC,EACdhM,OAAO,CAAC,EAAE,GAAGkM,MAAM,GAAG,CAAC,CAAC,GAAGE,MAAM,EACjCpM,OAAO,CAACkM,MAAM,CAChB,CAAC,EACD,IAAIM,yBAAmB,EACzB,CAAC;EACD,MAAA,IAAIvG,sBAAA,CAAK9B,WAAW,EAAhBsG,MAAe,CAAC,EAAE;EACpB,QAAA,IAAAgC,IAAA,GAAiB,CAAC1N,GAAG,GAAG4E,MAAM,GAAG,CAAC,EAAE5E,GAAG,GAAG4E,MAAM,GAAG,CAAC,CAAC,CAACxF,GAAG,CAAC,UAAAY,GAAG,EAAA;EAAA,YAAA,OAAI,GAAG,GAAIA,GAAG,GAAG,GAAI;aAAC,CAAA;YAAA2N,KAAA,GAAAnE,cAAA,CAAAkE,IAAA,EAAA,CAAA,CAAA;EAA5EnL,UAAAA,EAAE,GAAAoL,KAAA,CAAA,CAAA,CAAA;EAAEjL,UAAAA,GAAE,GAAAiL,KAAA,CAAA,CAAA,CAAA;EACbtL,QAAAA,iBAAiB,CAACiL,IAAI,CAAC9N,QAAQ,CAACoO,UAAU,CAACC,EAAE,EAAEtL,EAAE,EAAEG,GAAE,CAAC;EACxD;QAEA0E,CAAC,CAAC7H,GAAG,GAAG+N,IAAI;EACd;EAEA,IAAA,IAAI,CAAClG,CAAC,CAAC0G,OAAO,EAAE;QACd1G,CAAC,CAAC0G,OAAO,GAAG,IAAI;;EAEhB;QACA,IAAIC,mBAAa,EAAE,CAACC,IAAI,CAACtC,MAAI,CAACzF,OAAO,CAAC1F,CAAC,EAAEG,CAAC,EAAEgL,MAAI,CAACjI,KAAK,CAAC,EAAE,UAAAhE,OAAO,EAAI;EAClE,QAAA,IAAM6N,IAAI,GAAGlG,CAAC,CAAC7H,GAAG;EAClB,QAAA,IAAI+N,IAAI,EAAE;YACR7N,OAAO,CAACwO,UAAU,GAAGC,oBAAc;EACnCZ,UAAAA,IAAI,CAACrO,QAAQ,CAACG,GAAG,GAAGK,OAAO;EAC3B6N,UAAAA,IAAI,CAACrO,QAAQ,CAACyI,KAAK,GAAG,IAAI;EAC1B4F,UAAAA,IAAI,CAACrO,QAAQ,CAACsE,WAAW,GAAG,IAAI;EAChCmI,UAAAA,MAAI,CAACpE,GAAG,CAACgG,IAAI,CAAC;EAChB;UACAlG,CAAC,CAAC0G,OAAO,GAAG,KAAK;EACnB,OAAC,CAAC;EACJ;EACF,GAAC,CAAC;EACN;;;;;;;;","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59]}