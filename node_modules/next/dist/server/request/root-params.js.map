{"version":3,"sources":["../../../src/server/request/root-params.ts"],"sourcesContent":["import { InvariantError } from '../../shared/lib/invariant-error'\nimport {\n  postponeWithTracking,\n  throwToInterruptStaticGeneration,\n} from '../app-render/dynamic-rendering'\nimport {\n  workAsyncStorage,\n  type WorkStore,\n} from '../app-render/work-async-storage.external'\nimport {\n  workUnitAsyncStorage,\n  type PrerenderStore,\n  type PrerenderStoreLegacy,\n  type PrerenderStorePPR,\n} from '../app-render/work-unit-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport type { FallbackRouteParams } from './fallback-params'\nimport type { Params } from './params'\nimport {\n  describeStringPropertyAccess,\n  wellKnownProperties,\n} from '../../shared/lib/utils/reflect-utils'\n\ninterface CacheLifetime {}\nconst CachedParams = new WeakMap<CacheLifetime, Promise<Params>>()\n\nexport async function unstable_rootParams(): Promise<Params> {\n  const workStore = workAsyncStorage.getStore()\n  if (!workStore) {\n    throw new InvariantError('Missing workStore in unstable_rootParams')\n  }\n\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (!workUnitStore) {\n    throw new Error(\n      `Route ${workStore.route} used \\`unstable_rootParams()\\` in Pages Router. This API is only available within App Router.`\n    )\n  }\n\n  switch (workUnitStore.type) {\n    case 'unstable-cache':\n    case 'cache': {\n      throw new Error(\n        `Route ${workStore.route} used \\`unstable_rootParams()\\` inside \\`\"use cache\"\\` or \\`unstable_cache\\`. Support for this API inside cache scopes is planned for a future version of Next.js.`\n      )\n    }\n    case 'prerender':\n    case 'prerender-client':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n      return createPrerenderRootParams(\n        workUnitStore.rootParams,\n        workStore,\n        workUnitStore\n      )\n    default:\n      return Promise.resolve(workUnitStore.rootParams)\n  }\n}\n\nfunction createPrerenderRootParams(\n  underlyingParams: Params,\n  workStore: WorkStore,\n  prerenderStore: PrerenderStore\n): Promise<Params> {\n  const fallbackParams = workStore.fallbackRouteParams\n  if (fallbackParams) {\n    let hasSomeFallbackParams = false\n    for (const key in underlyingParams) {\n      if (fallbackParams.has(key)) {\n        hasSomeFallbackParams = true\n        break\n      }\n    }\n\n    if (hasSomeFallbackParams) {\n      // params need to be treated as dynamic because we have at least one fallback param\n      switch (prerenderStore.type) {\n        case 'prerender':\n          // We are in a dynamicIO prerender\n          const cachedParams = CachedParams.get(underlyingParams)\n          if (cachedParams) {\n            return cachedParams\n          }\n\n          const promise = makeHangingPromise<Params>(\n            prerenderStore.renderSignal,\n            '`unstable_rootParams`'\n          )\n          CachedParams.set(underlyingParams, promise)\n\n          return promise\n        case 'prerender-client':\n          const exportName = '`unstable_rootParams`'\n          throw new InvariantError(\n            `${exportName} must not be used within a client component. Next.js should be preventing ${exportName} from being included in client components statically, but did not in this case.`\n          )\n        default:\n          // remaining cases are prerender-ppr and prerender-legacy\n          // We aren't in a dynamicIO prerender but we do have fallback params at this\n          // level so we need to make an erroring params object which will postpone\n          // if you access the fallback params\n          return makeErroringRootParams(\n            underlyingParams,\n            fallbackParams,\n            workStore,\n            prerenderStore\n          )\n      }\n    }\n  }\n\n  // We don't have any fallback params so we have an entirely static safe params object\n  return Promise.resolve(underlyingParams)\n}\n\nfunction makeErroringRootParams(\n  underlyingParams: Params,\n  fallbackParams: FallbackRouteParams,\n  workStore: WorkStore,\n  prerenderStore: PrerenderStorePPR | PrerenderStoreLegacy\n): Promise<Params> {\n  const cachedParams = CachedParams.get(underlyingParams)\n  if (cachedParams) {\n    return cachedParams\n  }\n\n  const augmentedUnderlying = { ...underlyingParams }\n\n  // We don't use makeResolvedReactPromise here because params\n  // supports copying with spread and we don't want to unnecessarily\n  // instrument the promise with spreadable properties of ReactPromise.\n  const promise = Promise.resolve(augmentedUnderlying)\n  CachedParams.set(underlyingParams, promise)\n\n  Object.keys(underlyingParams).forEach((prop) => {\n    if (wellKnownProperties.has(prop)) {\n      // These properties cannot be shadowed because they need to be the\n      // true underlying value for Promises to work correctly at runtime\n    } else {\n      if (fallbackParams.has(prop)) {\n        Object.defineProperty(augmentedUnderlying, prop, {\n          get() {\n            const expression = describeStringPropertyAccess(\n              'unstable_rootParams',\n              prop\n            )\n            // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n            // for params is only dynamic when we're generating a fallback shell\n            // and even when `dynamic = \"error\"` we still support generating dynamic\n            // fallback shells\n            // TODO remove this comment when dynamicIO is the default since there\n            // will be no `dynamic = \"error\"`\n            if (prerenderStore.type === 'prerender-ppr') {\n              // PPR Prerender (no dynamicIO)\n              postponeWithTracking(\n                workStore.route,\n                expression,\n                prerenderStore.dynamicTracking\n              )\n            } else {\n              // Legacy Prerender\n              throwToInterruptStaticGeneration(\n                expression,\n                workStore,\n                prerenderStore\n              )\n            }\n          },\n          enumerable: true,\n        })\n      } else {\n        ;(promise as any)[prop] = underlyingParams[prop]\n      }\n    }\n  })\n\n  return promise\n}\n"],"names":["unstable_rootParams","CachedParams","WeakMap","workStore","workAsyncStorage","getStore","InvariantError","workUnitStore","workUnitAsyncStorage","Error","route","type","createPrerenderRootParams","rootParams","Promise","resolve","underlyingParams","prerenderStore","fallbackParams","fallbackRouteParams","hasSomeFallbackParams","key","has","cachedParams","get","promise","makeHangingPromise","renderSignal","set","exportName","makeErroringRootParams","augmentedUnderlying","Object","keys","forEach","prop","wellKnownProperties","defineProperty","expression","describeStringPropertyAccess","postponeWithTracking","dynamicTracking","throwToInterruptStaticGeneration","enumerable"],"mappings":"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","ignoreList":[0]}