{"version":3,"file":"app-route.runtime.prod.js","sources":["webpack://next/./dist/compiled/@edge-runtime/cookies/index.js","webpack://next/./dist/compiled/cookie/index.js","webpack://next/./dist/compiled/p-queue/index.js","webpack://next/./dist/compiled/path-to-regexp/index.js","webpack://next/./dist/compiled/react/cjs/react.production.js","webpack://next/./dist/compiled/react/index.js","webpack://next/./dist/compiled/string-hash/index.js","webpack://next/./dist/src/lib/constants.ts","webpack://next/./dist/src/lib/format-dynamic-import-path.ts","webpack://next/./dist/src/server/api-utils/index.ts","webpack://next/./dist/src/server/api-utils/node/try-get-preview-data.ts","webpack://next/./dist/src/server/crypto-utils.ts","webpack://next/./dist/src/server/lib/node-fs-methods.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/headers.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/reflect.ts","webpack://next/./dist/src/shared/lib/isomorphic/path.js","webpack://next/./dist/src/shared/lib/modern-browserslist-target.js","webpack://next/./dist/compiled/superstruct/index.cjs","webpack://next/webpack/runtime/compat_get_default_export","webpack://next/webpack/runtime/create_fake_namespace_object","webpack://next/webpack/runtime/define_property_getters","webpack://next/webpack/runtime/has_own_property","webpack://next/webpack/runtime/make_namespace_object","webpack://next/./dist/src/lib/picocolors.ts","webpack://next/./dist/src/shared/lib/constants.ts","webpack://next/./dist/src/lib/url.ts","webpack://next/./dist/src/shared/lib/i18n/normalize-locale-path.ts","webpack://next/./dist/src/shared/lib/page-path/ensure-leading-slash.ts","webpack://next/./dist/src/shared/lib/router/utils/app-paths.ts","webpack://next/./dist/src/shared/lib/segment.ts","webpack://next/./dist/src/shared/lib/router/utils/interception-routes.ts","webpack://next/./dist/src/shared/lib/router/utils/is-dynamic.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-path.ts","webpack://next/./dist/src/shared/lib/router/utils/path-has-prefix.ts","webpack://next/./dist/src/shared/lib/router/utils/remove-path-prefix.ts","webpack://next/./dist/src/shared/lib/escape-regexp.ts","webpack://next/./dist/src/shared/lib/router/utils/remove-trailing-slash.ts","webpack://next/./dist/src/shared/lib/router/utils/route-regex.ts","webpack://next/./dist/src/shared/lib/utils.ts","webpack://next/./dist/src/shared/lib/router/utils/route-matcher.ts","webpack://next/./dist/src/shared/lib/router/utils/querystring.ts","webpack://next/./dist/src/shared/lib/router/utils/prepare-destination.ts","webpack://next/./dist/src/server/web/utils.ts","webpack://next/./dist/src/server/lib/decode-query-path-parameter.ts","webpack://next/./dist/src/shared/lib/router/utils/format-url.ts","webpack://next/./dist/src/server/app-render/types.ts","webpack://next/./dist/src/client/components/app-router-headers.ts","webpack://next/./dist/src/server/server-utils.ts","webpack://next/./dist/src/shared/lib/i18n/detect-domain-locale.ts","webpack://next/./dist/src/shared/lib/get-hostname.ts","webpack://next/./dist/src/shared/lib/page-path/normalize-data-path.ts","webpack://next/./dist/src/server/request-meta.ts","webpack://next/./dist/src/shared/lib/page-path/normalize-page-path.ts","webpack://next/./dist/src/lib/metadata/is-metadata-route.ts","webpack://next/./dist/src/lib/detached-promise.ts","webpack://next/./dist/src/lib/batcher.ts","webpack://next/./dist/src/lib/scheduler.ts","webpack://next/./dist/src/server/response-cache/types.ts","webpack://next/./dist/src/server/stream-utils/node-web-streams-helper.ts","webpack://next/./dist/src/server/stream-utils/encoded-tags.ts","webpack://next/./dist/src/shared/lib/router/utils/add-path-prefix.ts","webpack://next/./dist/src/shared/lib/router/utils/add-path-suffix.ts","webpack://next/./dist/src/server/web/next-url.ts","webpack://next/./dist/src/shared/lib/router/utils/get-next-pathname-info.ts","webpack://next/./dist/src/shared/lib/router/utils/format-next-pathname-info.ts","webpack://next/./dist/src/shared/lib/router/utils/add-locale.ts","webpack://next/./dist/src/server/web/spec-extension/request.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/next-request.ts","webpack://next/./dist/src/server/lib/trace/constants.ts","webpack://next/./dist/src/server/client-component-renderer-logger.ts","webpack://next/./dist/src/server/pipe-readable.ts","webpack://next/./dist/src/server/render-result.ts","webpack://next/./dist/src/server/route-kind.ts","webpack://next/./dist/src/server/response-cache/utils.ts","webpack://next/./dist/src/server/response-cache/index.ts","webpack://next/./dist/src/lib/multi-file-writer.ts","webpack://next/./dist/src/server/lib/incremental-cache/file-system-cache.ts","webpack://next/./dist/src/server/lib/to-route.ts","webpack://next/./dist/src/shared/lib/invariant-error.ts","webpack://next/./dist/src/server/lib/incremental-cache/index.ts","webpack://next/./dist/src/server/use-cache/handlers.ts","webpack://next/./dist/src/server/app-render/interop-default.ts","webpack://next/./dist/src/server/lib/router-utils/router-server-context.ts","webpack://next/./dist/src/server/route-modules/route-module.ts","webpack://next/./dist/src/lib/is-app-route-route.ts","webpack://next/./dist/src/shared/lib/page-path/normalize-path-sep.ts","webpack://next/./dist/src/shared/lib/router/utils/path-match.ts","webpack://next/./dist/src/server/api-utils/get-cookie-parser.ts","webpack://next/./dist/src/lib/generate-interception-routes-rewrites.ts","webpack://next/./dist/src/client/components/router-reducer/compute-changed-path.ts","webpack://next/./dist/src/server/app-render/parse-and-validate-flight-router-state.tsx","webpack://next/./dist/src/shared/lib/router/utils/parse-url.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-relative-url.ts","webpack://next/./dist/src/server/lib/router-utils/decode-path-params.ts","webpack://next/./dist/src/shared/lib/router/utils/escape-path-delimiters.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/request-cookies.ts","webpack://next/./dist/src/server/async-storage/draft-mode-provider.ts","webpack://next/./dist/src/server/async-storage/request-store.ts","webpack://next/./dist/src/server/revalidation-utils.ts","webpack://next/./dist/src/server/app-render/async-local-storage.ts","webpack://next/./dist/src/server/after/after-context.ts","webpack://next/./dist/src/shared/lib/is-thenable.ts","webpack://next/./dist/src/server/lib/lazy-result.ts","webpack://next/./dist/src/server/web/http.ts","webpack://next/./dist/src/server/lib/implicit-tags.ts","webpack://next/./dist/src/client/components/hooks-server-context.ts","webpack://next/./dist/src/client/components/static-generation-bailout.ts","webpack://next/./dist/src/server/dynamic-rendering-utils.ts","webpack://next/./dist/src/server/app-render/dynamic-rendering.ts","webpack://next/./dist/src/server/lib/clone-response.ts","webpack://next/./dist/src/server/lib/patch-fetch.ts","webpack://next/./dist/src/build/output/log.ts","webpack://next/./dist/src/server/lib/lru-cache.ts","webpack://next/./dist/src/server/route-modules/app-route/helpers/auto-implement-methods.ts","webpack://next/./dist/src/client/components/http-access-fallback/http-access-fallback.ts","webpack://next/./dist/src/client/components/redirect-status-code.ts","webpack://next/./dist/src/client/components/redirect-error.ts","webpack://next/./dist/src/server/app-render/prospective-render-utils.ts","webpack://next/./dist/src/server/app-render/create-error-handler.tsx","webpack://next/./dist/src/shared/lib/lazy-dynamic/bailout-to-csr.ts","webpack://next/./dist/src/client/components/is-next-router-error.ts","webpack://next/./dist/src/server/app-render/react-large-shell-error.ts","webpack://next/./dist/src/shared/lib/app-router-context.shared-runtime.ts","webpack://next/./dist/src/server/app-render/cache-signal.ts","webpack://next/./dist/src/shared/lib/utils/reflect-utils.ts","webpack://next/./dist/src/server/create-deduped-by-callsite-server-error-logger.ts","webpack://next/./dist/src/server/request/params.ts","webpack://next/./dist/src/client/components/redirect.ts","webpack://next/./dist/src/server/route-modules/app-route/module.ts","webpack://next/./dist/src/server/route-modules/app-route/helpers/is-static-gen-enabled.ts","webpack://next/./dist/src/server/lib/dedupe-fetch.ts","webpack://next/./dist/src/server/route-modules/app-route/helpers/parsed-url-query-to-params.ts","webpack://next/./dist/src/server/lib/server-action-request-meta.ts","webpack://next/./dist/src/server/async-storage/work-store.ts","webpack://next/./dist/src/server/route-modules/app-route/helpers/get-pathname-from-absolute-path.ts","webpack://next/./dist/src/server/route-modules/app-route/helpers/clean-url.ts"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","(()=>{\"use strict\";var e={993:e=>{var t=Object.prototype.hasOwnProperty,n=\"~\";function Events(){}if(Object.create){Events.prototype=Object.create(null);if(!(new Events).__proto__)n=false}function EE(e,t,n){this.fn=e;this.context=t;this.once=n||false}function addListener(e,t,r,i,s){if(typeof r!==\"function\"){throw new TypeError(\"The listener must be a function\")}var o=new EE(r,i||e,s),u=n?n+t:t;if(!e._events[u])e._events[u]=o,e._eventsCount++;else if(!e._events[u].fn)e._events[u].push(o);else e._events[u]=[e._events[u],o];return e}function clearEvent(e,t){if(--e._eventsCount===0)e._events=new Events;else delete e._events[t]}function EventEmitter(){this._events=new Events;this._eventsCount=0}EventEmitter.prototype.eventNames=function eventNames(){var e=[],r,i;if(this._eventsCount===0)return e;for(i in r=this._events){if(t.call(r,i))e.push(n?i.slice(1):i)}if(Object.getOwnPropertySymbols){return e.concat(Object.getOwnPropertySymbols(r))}return e};EventEmitter.prototype.listeners=function listeners(e){var t=n?n+e:e,r=this._events[t];if(!r)return[];if(r.fn)return[r.fn];for(var i=0,s=r.length,o=new Array(s);i<s;i++){o[i]=r[i].fn}return o};EventEmitter.prototype.listenerCount=function listenerCount(e){var t=n?n+e:e,r=this._events[t];if(!r)return 0;if(r.fn)return 1;return r.length};EventEmitter.prototype.emit=function emit(e,t,r,i,s,o){var u=n?n+e:e;if(!this._events[u])return false;var a=this._events[u],l=arguments.length,c,h;if(a.fn){if(a.once)this.removeListener(e,a.fn,undefined,true);switch(l){case 1:return a.fn.call(a.context),true;case 2:return a.fn.call(a.context,t),true;case 3:return a.fn.call(a.context,t,r),true;case 4:return a.fn.call(a.context,t,r,i),true;case 5:return a.fn.call(a.context,t,r,i,s),true;case 6:return a.fn.call(a.context,t,r,i,s,o),true}for(h=1,c=new Array(l-1);h<l;h++){c[h-1]=arguments[h]}a.fn.apply(a.context,c)}else{var _=a.length,f;for(h=0;h<_;h++){if(a[h].once)this.removeListener(e,a[h].fn,undefined,true);switch(l){case 1:a[h].fn.call(a[h].context);break;case 2:a[h].fn.call(a[h].context,t);break;case 3:a[h].fn.call(a[h].context,t,r);break;case 4:a[h].fn.call(a[h].context,t,r,i);break;default:if(!c)for(f=1,c=new Array(l-1);f<l;f++){c[f-1]=arguments[f]}a[h].fn.apply(a[h].context,c)}}}return true};EventEmitter.prototype.on=function on(e,t,n){return addListener(this,e,t,n,false)};EventEmitter.prototype.once=function once(e,t,n){return addListener(this,e,t,n,true)};EventEmitter.prototype.removeListener=function removeListener(e,t,r,i){var s=n?n+e:e;if(!this._events[s])return this;if(!t){clearEvent(this,s);return this}var o=this._events[s];if(o.fn){if(o.fn===t&&(!i||o.once)&&(!r||o.context===r)){clearEvent(this,s)}}else{for(var u=0,a=[],l=o.length;u<l;u++){if(o[u].fn!==t||i&&!o[u].once||r&&o[u].context!==r){a.push(o[u])}}if(a.length)this._events[s]=a.length===1?a[0]:a;else clearEvent(this,s)}return this};EventEmitter.prototype.removeAllListeners=function removeAllListeners(e){var t;if(e){t=n?n+e:e;if(this._events[t])clearEvent(this,t)}else{this._events=new Events;this._eventsCount=0}return this};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.addListener=EventEmitter.prototype.on;EventEmitter.prefixed=n;EventEmitter.EventEmitter=EventEmitter;if(true){e.exports=EventEmitter}},213:e=>{e.exports=(e,t)=>{t=t||(()=>{});return e.then((e=>new Promise((e=>{e(t())})).then((()=>e))),(e=>new Promise((e=>{e(t())})).then((()=>{throw e}))))}},574:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});function lowerBound(e,t,n){let r=0;let i=e.length;while(i>0){const s=i/2|0;let o=r+s;if(n(e[o],t)<=0){r=++o;i-=s+1}else{i=s}}return r}t[\"default\"]=lowerBound},821:(e,t,n)=>{Object.defineProperty(t,\"__esModule\",{value:true});const r=n(574);class PriorityQueue{constructor(){this._queue=[]}enqueue(e,t){t=Object.assign({priority:0},t);const n={priority:t.priority,run:e};if(this.size&&this._queue[this.size-1].priority>=t.priority){this._queue.push(n);return}const i=r.default(this._queue,n,((e,t)=>t.priority-e.priority));this._queue.splice(i,0,n)}dequeue(){const e=this._queue.shift();return e===null||e===void 0?void 0:e.run}filter(e){return this._queue.filter((t=>t.priority===e.priority)).map((e=>e.run))}get size(){return this._queue.length}}t[\"default\"]=PriorityQueue},816:(e,t,n)=>{const r=n(213);class TimeoutError extends Error{constructor(e){super(e);this.name=\"TimeoutError\"}}const pTimeout=(e,t,n)=>new Promise(((i,s)=>{if(typeof t!==\"number\"||t<0){throw new TypeError(\"Expected `milliseconds` to be a positive number\")}if(t===Infinity){i(e);return}const o=setTimeout((()=>{if(typeof n===\"function\"){try{i(n())}catch(e){s(e)}return}const r=typeof n===\"string\"?n:`Promise timed out after ${t} milliseconds`;const o=n instanceof Error?n:new TimeoutError(r);if(typeof e.cancel===\"function\"){e.cancel()}s(o)}),t);r(e.then(i,s),(()=>{clearTimeout(o)}))}));e.exports=pTimeout;e.exports[\"default\"]=pTimeout;e.exports.TimeoutError=TimeoutError}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var i=t[n]={exports:{}};var s=true;try{e[n](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{var e=n;Object.defineProperty(e,\"__esModule\",{value:true});const t=__nccwpck_require__(993);const r=__nccwpck_require__(816);const i=__nccwpck_require__(821);const empty=()=>{};const s=new r.TimeoutError;class PQueue extends t{constructor(e){var t,n,r,s;super();this._intervalCount=0;this._intervalEnd=0;this._pendingCount=0;this._resolveEmpty=empty;this._resolveIdle=empty;e=Object.assign({carryoverConcurrencyCount:false,intervalCap:Infinity,interval:0,concurrency:Infinity,autoStart:true,queueClass:i.default},e);if(!(typeof e.intervalCap===\"number\"&&e.intervalCap>=1)){throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:\"\"}\\` (${typeof e.intervalCap})`)}if(e.interval===undefined||!(Number.isFinite(e.interval)&&e.interval>=0)){throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(s=(r=e.interval)===null||r===void 0?void 0:r.toString())!==null&&s!==void 0?s:\"\"}\\` (${typeof e.interval})`)}this._carryoverConcurrencyCount=e.carryoverConcurrencyCount;this._isIntervalIgnored=e.intervalCap===Infinity||e.interval===0;this._intervalCap=e.intervalCap;this._interval=e.interval;this._queue=new e.queueClass;this._queueClass=e.queueClass;this.concurrency=e.concurrency;this._timeout=e.timeout;this._throwOnTimeout=e.throwOnTimeout===true;this._isPaused=e.autoStart===false}get _doesIntervalAllowAnother(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}get _doesConcurrentAllowAnother(){return this._pendingCount<this._concurrency}_next(){this._pendingCount--;this._tryToStartAnother();this.emit(\"next\")}_resolvePromises(){this._resolveEmpty();this._resolveEmpty=empty;if(this._pendingCount===0){this._resolveIdle();this._resolveIdle=empty;this.emit(\"idle\")}}_onResumeInterval(){this._onInterval();this._initializeIntervalIfNeeded();this._timeoutId=undefined}_isIntervalPaused(){const e=Date.now();if(this._intervalId===undefined){const t=this._intervalEnd-e;if(t<0){this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0}else{if(this._timeoutId===undefined){this._timeoutId=setTimeout((()=>{this._onResumeInterval()}),t)}return true}}return false}_tryToStartAnother(){if(this._queue.size===0){if(this._intervalId){clearInterval(this._intervalId)}this._intervalId=undefined;this._resolvePromises();return false}if(!this._isPaused){const e=!this._isIntervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother){const t=this._queue.dequeue();if(!t){return false}this.emit(\"active\");t();if(e){this._initializeIntervalIfNeeded()}return true}}return false}_initializeIntervalIfNeeded(){if(this._isIntervalIgnored||this._intervalId!==undefined){return}this._intervalId=setInterval((()=>{this._onInterval()}),this._interval);this._intervalEnd=Date.now()+this._interval}_onInterval(){if(this._intervalCount===0&&this._pendingCount===0&&this._intervalId){clearInterval(this._intervalId);this._intervalId=undefined}this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0;this._processQueue()}_processQueue(){while(this._tryToStartAnother()){}}get concurrency(){return this._concurrency}set concurrency(e){if(!(typeof e===\"number\"&&e>=1)){throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${e}\\` (${typeof e})`)}this._concurrency=e;this._processQueue()}async add(e,t={}){return new Promise(((n,i)=>{const run=async()=>{this._pendingCount++;this._intervalCount++;try{const o=this._timeout===undefined&&t.timeout===undefined?e():r.default(Promise.resolve(e()),t.timeout===undefined?this._timeout:t.timeout,(()=>{if(t.throwOnTimeout===undefined?this._throwOnTimeout:t.throwOnTimeout){i(s)}return undefined}));n(await o)}catch(e){i(e)}this._next()};this._queue.enqueue(run,t);this._tryToStartAnother();this.emit(\"add\")}))}async addAll(e,t){return Promise.all(e.map((async e=>this.add(e,t))))}start(){if(!this._isPaused){return this}this._isPaused=false;this._processQueue();return this}pause(){this._isPaused=true}clear(){this._queue=new this._queueClass}async onEmpty(){if(this._queue.size===0){return}return new Promise((e=>{const t=this._resolveEmpty;this._resolveEmpty=()=>{t();e()}}))}async onIdle(){if(this._pendingCount===0&&this._queue.size===0){return}return new Promise((e=>{const t=this._resolveIdle;this._resolveIdle=()=>{t();e()}}))}get size(){return this._queue.size}sizeBy(e){return this._queue.filter(e).length}get pending(){return this._pendingCount}get isPaused(){return this._isPaused}get timeout(){return this._timeout}set timeout(e){this._timeout=e}}e[\"default\"]=PQueue})();module.exports=n})();","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;Object.defineProperty(r,\"__esModule\",{value:true});function lexer(e){var r=[];var n=0;while(n<e.length){var t=e[n];if(t===\"*\"||t===\"+\"||t===\"?\"){r.push({type:\"MODIFIER\",index:n,value:e[n++]});continue}if(t===\"\\\\\"){r.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(t===\"{\"){r.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(t===\"}\"){r.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(t===\":\"){var i=\"\";var a=n+1;while(a<e.length){var o=e.charCodeAt(a);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){i+=e[a++];continue}break}if(!i)throw new TypeError(\"Missing parameter name at \"+n);r.push({type:\"NAME\",index:n,value:i});n=a;continue}if(t===\"(\"){var f=1;var u=\"\";var a=n+1;if(e[a]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '+a)}while(a<e.length){if(e[a]===\"\\\\\"){u+=e[a++]+e[a++];continue}if(e[a]===\")\"){f--;if(f===0){a++;break}}else if(e[a]===\"(\"){f++;if(e[a+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \"+a)}}u+=e[a++]}if(f)throw new TypeError(\"Unbalanced pattern at \"+n);if(!u)throw new TypeError(\"Missing pattern at \"+n);r.push({type:\"PATTERN\",index:n,value:u});n=a;continue}r.push({type:\"CHAR\",index:n,value:e[n++]})}r.push({type:\"END\",index:n,value:\"\"});return r}function parse(e,r){if(r===void 0){r={}}var n=lexer(e);var t=r.prefixes,i=t===void 0?\"./\":t;var a=\"[^\"+escapeString(r.delimiter||\"/#?\")+\"]+?\";var o=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<n.length&&n[u].type===e)return n[u++].value};var mustConsume=function(e){var r=tryConsume(e);if(r!==undefined)return r;var t=n[u],i=t.type,a=t.index;throw new TypeError(\"Unexpected \"+i+\" at \"+a+\", expected \"+e)};var consumeText=function(){var e=\"\";var r;while(r=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=r}return e};while(u<n.length){var v=tryConsume(\"CHAR\");var c=tryConsume(\"NAME\");var s=tryConsume(\"PATTERN\");if(c||s){var d=v||\"\";if(i.indexOf(d)===-1){p+=d;d=\"\"}if(p){o.push(p);p=\"\"}o.push({name:c||f++,prefix:d,suffix:\"\",pattern:s||a,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var g=v||tryConsume(\"ESCAPED_CHAR\");if(g){p+=g;continue}if(p){o.push(p);p=\"\"}var x=tryConsume(\"OPEN\");if(x){var d=consumeText();var l=tryConsume(\"NAME\")||\"\";var h=tryConsume(\"PATTERN\")||\"\";var m=consumeText();mustConsume(\"CLOSE\");o.push({name:l||(h?f++:\"\"),pattern:l&&!h?a:h,prefix:d,suffix:m,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return o}r.parse=parse;function compile(e,r){return tokensToFunction(parse(e,r),r)}r.compile=compile;function tokensToFunction(e,r){if(r===void 0){r={}}var n=flags(r);var t=r.encode,i=t===void 0?function(e){return e}:t,a=r.validate,o=a===void 0?true:a;var f=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\"+e.pattern+\")$\",n)}}));return function(r){var n=\"\";for(var t=0;t<e.length;t++){var a=e[t];if(typeof a===\"string\"){n+=a;continue}var u=r?r[a.name]:undefined;var p=a.modifier===\"?\"||a.modifier===\"*\";var v=a.modifier===\"*\"||a.modifier===\"+\";if(Array.isArray(u)){if(!v){throw new TypeError('Expected \"'+a.name+'\" to not repeat, but got an array')}if(u.length===0){if(p)continue;throw new TypeError('Expected \"'+a.name+'\" to not be empty')}for(var c=0;c<u.length;c++){var s=i(u[c],a);if(o&&!f[t].test(s)){throw new TypeError('Expected all \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix}continue}if(typeof u===\"string\"||typeof u===\"number\"){var s=i(String(u),a);if(o&&!f[t].test(s)){throw new TypeError('Expected \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix;continue}if(p)continue;var d=v?\"an array\":\"a string\";throw new TypeError('Expected \"'+a.name+'\" to be '+d)}return n}}r.tokensToFunction=tokensToFunction;function match(e,r){var n=[];var t=pathToRegexp(e,n,r);return regexpToFunction(t,n,r)}r.match=match;function regexpToFunction(e,r,n){if(n===void 0){n={}}var t=n.decode,i=t===void 0?function(e){return e}:t;return function(n){var t=e.exec(n);if(!t)return false;var a=t[0],o=t.index;var f=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var n=r[e-1];if(n.modifier===\"*\"||n.modifier===\"+\"){f[n.name]=t[e].split(n.prefix+n.suffix).map((function(e){return i(e,n)}))}else{f[n.name]=i(t[e],n)}};for(var u=1;u<t.length;u++){_loop_1(u)}return{path:a,index:o,params:f}}}r.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,r){if(!r)return e;var n=e.source.match(/\\((?!\\?)/g);if(n){for(var t=0;t<n.length;t++){r.push({name:t,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"})}}return e}function arrayToRegexp(e,r,n){var t=e.map((function(e){return pathToRegexp(e,r,n).source}));return new RegExp(\"(?:\"+t.join(\"|\")+\")\",flags(n))}function stringToRegexp(e,r,n){return tokensToRegexp(parse(e,n),r,n)}function tokensToRegexp(e,r,n){if(n===void 0){n={}}var t=n.strict,i=t===void 0?false:t,a=n.start,o=a===void 0?true:a,f=n.end,u=f===void 0?true:f,p=n.encode,v=p===void 0?function(e){return e}:p;var c=\"[\"+escapeString(n.endsWith||\"\")+\"]|$\";var s=\"[\"+escapeString(n.delimiter||\"/#?\")+\"]\";var d=o?\"^\":\"\";for(var g=0,x=e;g<x.length;g++){var l=x[g];if(typeof l===\"string\"){d+=escapeString(v(l))}else{var h=escapeString(v(l.prefix));var m=escapeString(v(l.suffix));if(l.pattern){if(r)r.push(l);if(h||m){if(l.modifier===\"+\"||l.modifier===\"*\"){var E=l.modifier===\"*\"?\"?\":\"\";d+=\"(?:\"+h+\"((?:\"+l.pattern+\")(?:\"+m+h+\"(?:\"+l.pattern+\"))*)\"+m+\")\"+E}else{d+=\"(?:\"+h+\"(\"+l.pattern+\")\"+m+\")\"+l.modifier}}else{d+=\"(\"+l.pattern+\")\"+l.modifier}}else{d+=\"(?:\"+h+m+\")\"+l.modifier}}}if(u){if(!i)d+=s+\"?\";d+=!n.endsWith?\"$\":\"(?=\"+c+\")\"}else{var T=e[e.length-1];var y=typeof T===\"string\"?s.indexOf(T[T.length-1])>-1:T===undefined;if(!i){d+=\"(?:\"+s+\"(?=\"+c+\"))?\"}if(!y){d+=\"(?=\"+s+\"|\"+c+\")\"}}return new RegExp(d,flags(n))}r.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,r,n){if(e instanceof RegExp)return regexpToRegexp(e,r);if(Array.isArray(e))return arrayToRegexp(e,r,n);return stringToRegexp(e,r,n)}r.pathToRegexp=pathToRegexp})();module.exports=e})();","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray;\nfunction noop() {}\nvar ReactSharedInternals = { H: null, A: null, T: null, S: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop, noop)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.__COMPILER_RUNTIME = {\n  __proto__: null,\n  c: function (size) {\n    return ReactSharedInternals.H.useMemoCache(size);\n  }\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cacheSignal = function () {\n  return null;\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    null !== prevTransition &&\n      null !== currentTransition.types &&\n      (prevTransition.types = currentTransition.types),\n      (ReactSharedInternals.T = prevTransition);\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, deps) {\n  return ReactSharedInternals.H.useEffect(create, deps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.2.0-canary-97cdd5d3-20250710\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","(()=>{\"use strict\";var e={328:e=>{function hash(e){var r=5381,_=e.length;while(_){r=r*33^e.charCodeAt(--_)}return r>>>0}e.exports=hash}};var r={};function __nccwpck_require__(_){var a=r[_];if(a!==undefined){return a.exports}var t=r[_]={exports:{}};var i=true;try{e[_](t,t.exports,__nccwpck_require__);i=false}finally{if(i)delete r[_]}return t.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var _=__nccwpck_require__(328);module.exports=_})();","import type { ServerRuntime } from '../types'\n\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const MATCHED_PATH_HEADER = 'x-matched-path'\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments'\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\nexport const NEXT_RESUME_HEADER = 'next-resume'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper'\nexport const RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS =\n  'private-next-rsc-track-dynamic-import'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The Node.js bundle layer for the API routes.\n   */\n  apiNode: 'api-node',\n  /**\n   * The Edge Lite bundle layer for the API routes.\n   */\n  apiEdge: 'api-edge',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n  /**\n   * The browser client bundle layer for Pages directory.\n   */\n  pagesDirBrowser: 'pages-dir-browser',\n  /**\n   * The Edge Lite bundle layer for Pages directory.\n   */\n  pagesDirEdge: 'pages-dir-edge',\n  /**\n   * The Node.js bundle layer for Pages directory.\n   */\n  pagesDirNode: 'pages-dir-node',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.apiNode,\n      WEBPACK_LAYERS_NAMES.apiEdge,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    appPages: [\n      // app router pages and layouts\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n","import path from 'path'\nimport { pathToFileURL } from 'url'\n\n/**\n * The path for a dynamic route must be URLs with a valid scheme.\n *\n * When an absolute Windows path is passed to it, it interprets the beginning of the path as a protocol (`C:`).\n * Therefore, it is important to always construct a complete path.\n * @param dir File directory\n * @param filePath Absolute or relative path\n */\nexport const formatDynamicImportPath = (dir: string, filePath: string) => {\n  const absoluteFilePath = path.isAbsolute(filePath)\n    ? filePath\n    : path.join(dir, filePath)\n  const formattedFilePath = pathToFileURL(absoluteFilePath).toString()\n\n  return formattedFilePath\n}\n","import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { CookieSerializeOptions } from 'next/dist/compiled/cookie'\nimport type { NextApiResponse } from '../../shared/lib/utils'\n\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers'\nimport {\n  PRERENDER_REVALIDATE_HEADER,\n  PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER,\n} from '../../lib/constants'\nimport { getTracer } from '../lib/trace/tracer'\nimport { NodeSpan } from '../lib/trace/constants'\n\nexport type NextApiRequestCookies = Partial<{ [key: string]: string }>\nexport type NextApiRequestQuery = Partial<{ [key: string]: string | string[] }>\n\nexport type __ApiPreviewProps = {\n  previewModeId: string\n  previewModeEncryptionKey: string\n  previewModeSigningKey: string\n}\n\nexport function wrapApiHandler<T extends (...args: any[]) => any>(\n  page: string,\n  handler: T\n): T {\n  return ((...args) => {\n    getTracer().setRootSpanAttribute('next.route', page)\n    // Call API route method\n    return getTracer().trace(\n      NodeSpan.runHandler,\n      {\n        spanName: `executing api route (pages) ${page}`,\n      },\n      () => handler(...args)\n    )\n  }) as T\n}\n\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */\nexport function sendStatusCode(\n  res: NextApiResponse,\n  statusCode: number\n): NextApiResponse<any> {\n  res.statusCode = statusCode\n  return res\n}\n\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */\nexport function redirect(\n  res: NextApiResponse,\n  statusOrUrl: string | number,\n  url?: string\n): NextApiResponse<any> {\n  if (typeof statusOrUrl === 'string') {\n    url = statusOrUrl\n    statusOrUrl = 307\n  }\n  if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n    throw new Error(\n      `Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`\n    )\n  }\n  res.writeHead(statusOrUrl, { Location: url })\n  res.write(url)\n  res.end()\n  return res\n}\n\nexport function checkIsOnDemandRevalidate(\n  req: Request | IncomingMessage | BaseNextRequest,\n  previewProps: __ApiPreviewProps\n): {\n  isOnDemandRevalidate: boolean\n  revalidateOnlyGenerated: boolean\n} {\n  const headers = HeadersAdapter.from(req.headers)\n\n  const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER)\n  const isOnDemandRevalidate = previewModeId === previewProps.previewModeId\n\n  const revalidateOnlyGenerated = headers.has(\n    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER\n  )\n\n  return { isOnDemandRevalidate, revalidateOnlyGenerated }\n}\n\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`\n\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024\n\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA)\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS)\n\nexport function clearPreviewData<T>(\n  res: NextApiResponse<T>,\n  options: {\n    path?: string\n  } = {}\n): NextApiResponse<T> {\n  if (SYMBOL_CLEARED_COOKIES in res) {\n    return res\n  }\n\n  const { serialize } =\n    require('next/dist/compiled/cookie') as typeof import('next/dist/compiled/cookie')\n  const previous = res.getHeader('Set-Cookie')\n  res.setHeader(`Set-Cookie`, [\n    ...(typeof previous === 'string'\n      ? [previous]\n      : Array.isArray(previous)\n        ? previous\n        : []),\n    serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n    serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n  ])\n\n  Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n    value: true,\n    enumerable: false,\n  })\n  return res\n}\n\n/**\n * Custom error class\n */\nexport class ApiError extends Error {\n  readonly statusCode: number\n\n  constructor(statusCode: number, message: string) {\n    super(message)\n    this.statusCode = statusCode\n  }\n}\n\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */\nexport function sendError(\n  res: NextApiResponse,\n  statusCode: number,\n  message: string\n): void {\n  res.statusCode = statusCode\n  res.statusMessage = message\n  res.end(message)\n}\n\ninterface LazyProps {\n  req: IncomingMessage\n}\n\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */\nexport function setLazyProp<T>(\n  { req }: LazyProps,\n  prop: string,\n  getter: () => T\n): void {\n  const opts = { configurable: true, enumerable: true }\n  const optsReset = { ...opts, writable: true }\n\n  Object.defineProperty(req, prop, {\n    ...opts,\n    get: () => {\n      const value = getter()\n      // we set the property on the object to avoid recalculating it\n      Object.defineProperty(req, prop, { ...optsReset, value })\n      return value\n    },\n    set: (value) => {\n      Object.defineProperty(req, prop, { ...optsReset, value })\n    },\n  })\n}\n","import type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextApiResponse } from '../../../shared/lib/utils'\nimport { checkIsOnDemandRevalidate } from '../.'\nimport type { __ApiPreviewProps } from '../.'\nimport type { BaseNextRequest, BaseNextResponse } from '../../base-http'\nimport type { PreviewData } from '../../../types'\n\nimport {\n  clearPreviewData,\n  COOKIE_NAME_PRERENDER_BYPASS,\n  COOKIE_NAME_PRERENDER_DATA,\n  SYMBOL_PREVIEW_DATA,\n} from '../index'\nimport { RequestCookies } from '../../web/spec-extension/cookies'\nimport { HeadersAdapter } from '../../web/spec-extension/adapters/headers'\n\nexport function tryGetPreviewData(\n  req: IncomingMessage | BaseNextRequest | Request,\n  res: ServerResponse | BaseNextResponse,\n  options: __ApiPreviewProps,\n  multiZoneDraftMode: boolean\n): PreviewData {\n  // if an On-Demand revalidation is being done preview mode\n  // is disabled\n  if (options && checkIsOnDemandRevalidate(req, options).isOnDemandRevalidate) {\n    return false\n  }\n\n  // Read cached preview data if present\n  // TODO: use request metadata instead of a symbol\n  if (SYMBOL_PREVIEW_DATA in req) {\n    return (req as any)[SYMBOL_PREVIEW_DATA] as any\n  }\n\n  const headers = HeadersAdapter.from(req.headers)\n  const cookies = new RequestCookies(headers)\n\n  const previewModeId = cookies.get(COOKIE_NAME_PRERENDER_BYPASS)?.value\n  const tokenPreviewData = cookies.get(COOKIE_NAME_PRERENDER_DATA)?.value\n\n  // Case: preview mode cookie set but data cookie is not set\n  if (\n    previewModeId &&\n    !tokenPreviewData &&\n    previewModeId === options.previewModeId\n  ) {\n    // This is \"Draft Mode\" which doesn't use\n    // previewData, so we return an empty object\n    // for backwards compat with \"Preview Mode\".\n    const data = {}\n    Object.defineProperty(req, SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false,\n    })\n    return data\n  }\n\n  // Case: neither cookie is set.\n  if (!previewModeId && !tokenPreviewData) {\n    return false\n  }\n\n  // Case: one cookie is set, but not the other.\n  if (!previewModeId || !tokenPreviewData) {\n    if (!multiZoneDraftMode) {\n      clearPreviewData(res as NextApiResponse)\n    }\n    return false\n  }\n\n  // Case: preview session is for an old build.\n  if (previewModeId !== options.previewModeId) {\n    if (!multiZoneDraftMode) {\n      clearPreviewData(res as NextApiResponse)\n    }\n    return false\n  }\n\n  let encryptedPreviewData: {\n    data: string\n  }\n  try {\n    const jsonwebtoken =\n      require('next/dist/compiled/jsonwebtoken') as typeof import('next/dist/compiled/jsonwebtoken')\n    encryptedPreviewData = jsonwebtoken.verify(\n      tokenPreviewData,\n      options.previewModeSigningKey\n    ) as typeof encryptedPreviewData\n  } catch {\n    // TODO: warn\n    clearPreviewData(res as NextApiResponse)\n    return false\n  }\n\n  const { decryptWithSecret } =\n    require('../../crypto-utils') as typeof import('../../crypto-utils')\n  const decryptedPreviewData = decryptWithSecret(\n    Buffer.from(options.previewModeEncryptionKey),\n    encryptedPreviewData.data\n  )\n\n  try {\n    // TODO: strict runtime type checking\n    const data = JSON.parse(decryptedPreviewData)\n    // Cache lookup\n    Object.defineProperty(req, SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false,\n    })\n    return data\n  } catch {\n    return false\n  }\n}\n","import crypto from 'crypto'\n\n// Background:\n// https://security.stackexchange.com/questions/184305/why-would-i-ever-use-aes-256-cbc-if-aes-256-gcm-is-more-secure\n\nconst CIPHER_ALGORITHM = `aes-256-gcm`,\n  CIPHER_KEY_LENGTH = 32, // https://stackoverflow.com/a/28307668/4397028\n  CIPHER_IV_LENGTH = 16, // https://stackoverflow.com/a/28307668/4397028\n  CIPHER_TAG_LENGTH = 16,\n  CIPHER_SALT_LENGTH = 64\n\nconst PBKDF2_ITERATIONS = 100_000 // https://support.1password.com/pbkdf2/\n\nexport function encryptWithSecret(secret: Buffer, data: string): string {\n  const iv = crypto.randomBytes(CIPHER_IV_LENGTH)\n  const salt = crypto.randomBytes(CIPHER_SALT_LENGTH)\n\n  // https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2sync_password_salt_iterations_keylen_digest\n  const key = crypto.pbkdf2Sync(\n    secret,\n    salt,\n    PBKDF2_ITERATIONS,\n    CIPHER_KEY_LENGTH,\n    `sha512`\n  )\n\n  const cipher = crypto.createCipheriv(CIPHER_ALGORITHM, key, iv)\n  const encrypted = Buffer.concat([cipher.update(data, `utf8`), cipher.final()])\n\n  // https://nodejs.org/api/crypto.html#crypto_cipher_getauthtag\n  const tag = cipher.getAuthTag()\n\n  return Buffer.concat([\n    // Data as required by:\n    // Salt for Key: https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2sync_password_salt_iterations_keylen_digest\n    // IV: https://nodejs.org/api/crypto.html#crypto_class_decipher\n    // Tag: https://nodejs.org/api/crypto.html#crypto_decipher_setauthtag_buffer\n    salt,\n    iv,\n    tag,\n    encrypted,\n  ]).toString(`hex`)\n}\n\nexport function decryptWithSecret(\n  secret: Buffer,\n  encryptedData: string\n): string {\n  const buffer = Buffer.from(encryptedData, `hex`)\n\n  const salt = buffer.slice(0, CIPHER_SALT_LENGTH)\n  const iv = buffer.slice(\n    CIPHER_SALT_LENGTH,\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH\n  )\n  const tag = buffer.slice(\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH,\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH + CIPHER_TAG_LENGTH\n  )\n  const encrypted = buffer.slice(\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH + CIPHER_TAG_LENGTH\n  )\n\n  // https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2sync_password_salt_iterations_keylen_digest\n  const key = crypto.pbkdf2Sync(\n    secret,\n    salt,\n    PBKDF2_ITERATIONS,\n    CIPHER_KEY_LENGTH,\n    `sha512`\n  )\n\n  const decipher = crypto.createDecipheriv(CIPHER_ALGORITHM, key, iv)\n  decipher.setAuthTag(tag)\n\n  return decipher.update(encrypted) + decipher.final(`utf8`)\n}\n","import type { CacheFs } from '../../shared/lib/utils'\n\nimport fs from 'fs'\n\nexport const nodeFs: CacheFs = {\n  existsSync: fs.existsSync,\n  readFile: fs.promises.readFile,\n  readFileSync: fs.readFileSync,\n  writeFile: (f, d) => fs.promises.writeFile(f, d),\n  mkdir: (dir) => fs.promises.mkdir(dir, { recursive: true }),\n  stat: (f) => fs.promises.stat(f),\n}\n","import type { IncomingHttpHeaders } from 'http'\n\nimport { ReflectAdapter } from './reflect'\n\n/**\n * @internal\n */\nexport class ReadonlyHeadersError extends Error {\n  constructor() {\n    super(\n      'Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyHeadersError()\n  }\n}\n\nexport type ReadonlyHeaders = Headers & {\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  append(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  set(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  delete(...args: any[]): void\n}\nexport class HeadersAdapter extends Headers {\n  private readonly headers: IncomingHttpHeaders\n\n  constructor(headers: IncomingHttpHeaders) {\n    // We've already overridden the methods that would be called, so we're just\n    // calling the super constructor to ensure that the instanceof check works.\n    super()\n\n    this.headers = new Proxy(headers, {\n      get(target, prop, receiver) {\n        // Because this is just an object, we expect that all \"get\" operations\n        // are for properties. If it's a \"get\" for a symbol, we'll just return\n        // the symbol.\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return undefined.\n        if (typeof original === 'undefined') return\n\n        // If the original casing exists, return the value.\n        return ReflectAdapter.get(target, original, receiver)\n      },\n      set(target, prop, value, receiver) {\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.set(target, prop, value, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, use the prop as the key.\n        return ReflectAdapter.set(target, original ?? prop, value, receiver)\n      },\n      has(target, prop) {\n        if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return false.\n        if (typeof original === 'undefined') return false\n\n        // If the original casing exists, return true.\n        return ReflectAdapter.has(target, original)\n      },\n      deleteProperty(target, prop) {\n        if (typeof prop === 'symbol')\n          return ReflectAdapter.deleteProperty(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return true.\n        if (typeof original === 'undefined') return true\n\n        // If the original casing exists, delete the property.\n        return ReflectAdapter.deleteProperty(target, original)\n      },\n    })\n  }\n\n  /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */\n  public static seal(headers: Headers): ReadonlyHeaders {\n    return new Proxy<ReadonlyHeaders>(headers, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'append':\n          case 'delete':\n          case 'set':\n            return ReadonlyHeadersError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n\n  /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */\n  private merge(value: string | string[]): string {\n    if (Array.isArray(value)) return value.join(', ')\n\n    return value\n  }\n\n  /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */\n  public static from(headers: IncomingHttpHeaders | Headers): Headers {\n    if (headers instanceof Headers) return headers\n\n    return new HeadersAdapter(headers)\n  }\n\n  public append(name: string, value: string): void {\n    const existing = this.headers[name]\n    if (typeof existing === 'string') {\n      this.headers[name] = [existing, value]\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      this.headers[name] = value\n    }\n  }\n\n  public delete(name: string): void {\n    delete this.headers[name]\n  }\n\n  public get(name: string): string | null {\n    const value = this.headers[name]\n    if (typeof value !== 'undefined') return this.merge(value)\n\n    return null\n  }\n\n  public has(name: string): boolean {\n    return typeof this.headers[name] !== 'undefined'\n  }\n\n  public set(name: string, value: string): void {\n    this.headers[name] = value\n  }\n\n  public forEach(\n    callbackfn: (value: string, name: string, parent: Headers) => void,\n    thisArg?: any\n  ): void {\n    for (const [name, value] of this.entries()) {\n      callbackfn.call(thisArg, value, name, this)\n    }\n  }\n\n  public *entries(): HeadersIterator<[string, string]> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(name) as string\n\n      yield [name, value] as [string, string]\n    }\n  }\n\n  public *keys(): HeadersIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      yield name\n    }\n  }\n\n  public *values(): HeadersIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(key) as string\n\n      yield value\n    }\n  }\n\n  public [Symbol.iterator](): HeadersIterator<[string, string]> {\n    return this.entries()\n  }\n}\n","export class ReflectAdapter {\n  static get<T extends object>(\n    target: T,\n    prop: string | symbol,\n    receiver: unknown\n  ): any {\n    const value = Reflect.get(target, prop, receiver)\n    if (typeof value === 'function') {\n      return value.bind(target)\n    }\n\n    return value\n  }\n\n  static set<T extends object>(\n    target: T,\n    prop: string | symbol,\n    value: any,\n    receiver: any\n  ): boolean {\n    return Reflect.set(target, prop, value, receiver)\n  }\n\n  static has<T extends object>(target: T, prop: string | symbol): boolean {\n    return Reflect.has(target, prop)\n  }\n\n  static deleteProperty<T extends object>(\n    target: T,\n    prop: string | symbol\n  ): boolean {\n    return Reflect.deleteProperty(target, prop)\n  }\n}\n","/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */\nlet path\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  path = require('next/dist/compiled/path-browserify')\n} else {\n  path = require('path')\n}\n\nmodule.exports = path\n","// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */\nconst MODERN_BROWSERSLIST_TARGET = [\n  'chrome 64',\n  'edge 79',\n  'firefox 67',\n  'opera 51',\n  'safari 12',\n]\n\nmodule.exports = MODERN_BROWSERSLIST_TARGET\n","(()=>{var e={318:function(e,t){(function(e,n){true?n(t):0})(this,(function(e){\"use strict\";class StructError extends TypeError{constructor(e,t){let n;const{message:r,explanation:i,...c}=e;const{path:o}=e;const a=o.length===0?r:`At path: ${o.join(\".\")} -- ${r}`;super(i??a);if(i!=null)this.cause=a;Object.assign(this,c);this.name=this.constructor.name;this.failures=()=>n??(n=[e,...t()])}}function isIterable(e){return isObject(e)&&typeof e[Symbol.iterator]===\"function\"}function isObject(e){return typeof e===\"object\"&&e!=null}function isPlainObject(e){if(Object.prototype.toString.call(e)!==\"[object Object]\"){return false}const t=Object.getPrototypeOf(e);return t===null||t===Object.prototype}function print(e){if(typeof e===\"symbol\"){return e.toString()}return typeof e===\"string\"?JSON.stringify(e):`${e}`}function shiftIterator(e){const{done:t,value:n}=e.next();return t?undefined:n}function toFailure(e,t,n,r){if(e===true){return}else if(e===false){e={}}else if(typeof e===\"string\"){e={message:e}}const{path:i,branch:c}=t;const{type:o}=n;const{refinement:a,message:s=`Expected a value of type \\`${o}\\`${a?` with refinement \\`${a}\\``:\"\"}, but received: \\`${print(r)}\\``}=e;return{value:r,type:o,refinement:a,key:i[i.length-1],path:i,branch:c,...e,message:s}}function*toFailures(e,t,n,r){if(!isIterable(e)){e=[e]}for(const i of e){const e=toFailure(i,t,n,r);if(e){yield e}}}function*run(e,t,n={}){const{path:r=[],branch:i=[e],coerce:c=false,mask:o=false}=n;const a={path:r,branch:i};if(c){e=t.coercer(e,a);if(o&&t.type!==\"type\"&&isObject(t.schema)&&isObject(e)&&!Array.isArray(e)){for(const n in e){if(t.schema[n]===undefined){delete e[n]}}}}let s=\"valid\";for(const r of t.validator(e,a)){r.explanation=n.message;s=\"not_valid\";yield[r,undefined]}for(let[u,f,l]of t.entries(e,a)){const t=run(f,l,{path:u===undefined?r:[...r,u],branch:u===undefined?i:[...i,f],coerce:c,mask:o,message:n.message});for(const n of t){if(n[0]){s=n[0].refinement!=null?\"not_refined\":\"not_valid\";yield[n[0],undefined]}else if(c){f=n[1];if(u===undefined){e=f}else if(e instanceof Map){e.set(u,f)}else if(e instanceof Set){e.add(f)}else if(isObject(e)){if(f!==undefined||u in e)e[u]=f}}}}if(s!==\"not_valid\"){for(const r of t.refiner(e,a)){r.explanation=n.message;s=\"not_refined\";yield[r,undefined]}}if(s===\"valid\"){yield[undefined,e]}}class Struct{constructor(e){const{type:t,schema:n,validator:r,refiner:i,coercer:c=(e=>e),entries:o=function*(){}}=e;this.type=t;this.schema=n;this.entries=o;this.coercer=c;if(r){this.validator=(e,t)=>{const n=r(e,t);return toFailures(n,t,this,e)}}else{this.validator=()=>[]}if(i){this.refiner=(e,t)=>{const n=i(e,t);return toFailures(n,t,this,e)}}else{this.refiner=()=>[]}}assert(e,t){return assert(e,this,t)}create(e,t){return create(e,this,t)}is(e){return is(e,this)}mask(e,t){return mask(e,this,t)}validate(e,t={}){return validate(e,this,t)}}function assert(e,t,n){const r=validate(e,t,{message:n});if(r[0]){throw r[0]}}function create(e,t,n){const r=validate(e,t,{coerce:true,message:n});if(r[0]){throw r[0]}else{return r[1]}}function mask(e,t,n){const r=validate(e,t,{coerce:true,mask:true,message:n});if(r[0]){throw r[0]}else{return r[1]}}function is(e,t){const n=validate(e,t);return!n[0]}function validate(e,t,n={}){const r=run(e,t,n);const i=shiftIterator(r);if(i[0]){const e=new StructError(i[0],(function*(){for(const e of r){if(e[0]){yield e[0]}}}));return[e,undefined]}else{const e=i[1];return[undefined,e]}}function assign(...e){const t=e[0].type===\"type\";const n=e.map((e=>e.schema));const r=Object.assign({},...n);return t?type(r):object(r)}function define(e,t){return new Struct({type:e,schema:null,validator:t})}function deprecated(e,t){return new Struct({...e,refiner:(t,n)=>t===undefined||e.refiner(t,n),validator(n,r){if(n===undefined){return true}else{t(n,r);return e.validator(n,r)}}})}function dynamic(e){return new Struct({type:\"dynamic\",schema:null,*entries(t,n){const r=e(t,n);yield*r.entries(t,n)},validator(t,n){const r=e(t,n);return r.validator(t,n)},coercer(t,n){const r=e(t,n);return r.coercer(t,n)},refiner(t,n){const r=e(t,n);return r.refiner(t,n)}})}function lazy(e){let t;return new Struct({type:\"lazy\",schema:null,*entries(n,r){t??(t=e());yield*t.entries(n,r)},validator(n,r){t??(t=e());return t.validator(n,r)},coercer(n,r){t??(t=e());return t.coercer(n,r)},refiner(n,r){t??(t=e());return t.refiner(n,r)}})}function omit(e,t){const{schema:n}=e;const r={...n};for(const e of t){delete r[e]}switch(e.type){case\"type\":return type(r);default:return object(r)}}function partial(e){const t=e instanceof Struct?{...e.schema}:{...e};for(const e in t){t[e]=optional(t[e])}return object(t)}function pick(e,t){const{schema:n}=e;const r={};for(const e of t){r[e]=n[e]}return object(r)}function struct(e,t){console.warn(\"superstruct@0.11 - The `struct` helper has been renamed to `define`.\");return define(e,t)}function any(){return define(\"any\",(()=>true))}function array(e){return new Struct({type:\"array\",schema:e,*entries(t){if(e&&Array.isArray(t)){for(const[n,r]of t.entries()){yield[n,r,e]}}},coercer(e){return Array.isArray(e)?e.slice():e},validator(e){return Array.isArray(e)||`Expected an array value, but received: ${print(e)}`}})}function bigint(){return define(\"bigint\",(e=>typeof e===\"bigint\"))}function boolean(){return define(\"boolean\",(e=>typeof e===\"boolean\"))}function date(){return define(\"date\",(e=>e instanceof Date&&!isNaN(e.getTime())||`Expected a valid \\`Date\\` object, but received: ${print(e)}`))}function enums(e){const t={};const n=e.map((e=>print(e))).join();for(const n of e){t[n]=n}return new Struct({type:\"enums\",schema:t,validator(t){return e.includes(t)||`Expected one of \\`${n}\\`, but received: ${print(t)}`}})}function func(){return define(\"func\",(e=>typeof e===\"function\"||`Expected a function, but received: ${print(e)}`))}function instance(e){return define(\"instance\",(t=>t instanceof e||`Expected a \\`${e.name}\\` instance, but received: ${print(t)}`))}function integer(){return define(\"integer\",(e=>typeof e===\"number\"&&!isNaN(e)&&Number.isInteger(e)||`Expected an integer, but received: ${print(e)}`))}function intersection(e){return new Struct({type:\"intersection\",schema:null,*entries(t,n){for(const r of e){yield*r.entries(t,n)}},*validator(t,n){for(const r of e){yield*r.validator(t,n)}},*refiner(t,n){for(const r of e){yield*r.refiner(t,n)}}})}function literal(e){const t=print(e);const n=typeof e;return new Struct({type:\"literal\",schema:n===\"string\"||n===\"number\"||n===\"boolean\"?e:null,validator(n){return n===e||`Expected the literal \\`${t}\\`, but received: ${print(n)}`}})}function map(e,t){return new Struct({type:\"map\",schema:null,*entries(n){if(e&&t&&n instanceof Map){for(const[r,i]of n.entries()){yield[r,r,e];yield[r,i,t]}}},coercer(e){return e instanceof Map?new Map(e):e},validator(e){return e instanceof Map||`Expected a \\`Map\\` object, but received: ${print(e)}`}})}function never(){return define(\"never\",(()=>false))}function nullable(e){return new Struct({...e,validator:(t,n)=>t===null||e.validator(t,n),refiner:(t,n)=>t===null||e.refiner(t,n)})}function number(){return define(\"number\",(e=>typeof e===\"number\"&&!isNaN(e)||`Expected a number, but received: ${print(e)}`))}function object(e){const t=e?Object.keys(e):[];const n=never();return new Struct({type:\"object\",schema:e?e:null,*entries(r){if(e&&isObject(r)){const i=new Set(Object.keys(r));for(const n of t){i.delete(n);yield[n,r[n],e[n]]}for(const e of i){yield[e,r[e],n]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isObject(e)?{...e}:e}})}function optional(e){return new Struct({...e,validator:(t,n)=>t===undefined||e.validator(t,n),refiner:(t,n)=>t===undefined||e.refiner(t,n)})}function record(e,t){return new Struct({type:\"record\",schema:null,*entries(n){if(isObject(n)){for(const r in n){const i=n[r];yield[r,r,e];yield[r,i,t]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`}})}function regexp(){return define(\"regexp\",(e=>e instanceof RegExp))}function set(e){return new Struct({type:\"set\",schema:null,*entries(t){if(e&&t instanceof Set){for(const n of t){yield[n,n,e]}}},coercer(e){return e instanceof Set?new Set(e):e},validator(e){return e instanceof Set||`Expected a \\`Set\\` object, but received: ${print(e)}`}})}function string(){return define(\"string\",(e=>typeof e===\"string\"||`Expected a string, but received: ${print(e)}`))}function tuple(e){const t=never();return new Struct({type:\"tuple\",schema:null,*entries(n){if(Array.isArray(n)){const r=Math.max(e.length,n.length);for(let i=0;i<r;i++){yield[i,n[i],e[i]||t]}}},validator(e){return Array.isArray(e)||`Expected an array, but received: ${print(e)}`}})}function type(e){const t=Object.keys(e);return new Struct({type:\"type\",schema:e,*entries(n){if(isObject(n)){for(const r of t){yield[r,n[r],e[r]]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isObject(e)?{...e}:e}})}function union(e){const t=e.map((e=>e.type)).join(\" | \");return new Struct({type:\"union\",schema:null,coercer(t){for(const n of e){const[e,r]=n.validate(t,{coerce:true});if(!e){return r}}return t},validator(n,r){const i=[];for(const t of e){const[...e]=run(n,t,r);const[c]=e;if(!c[0]){return[]}else{for(const[t]of e){if(t){i.push(t)}}}}return[`Expected the value to satisfy a union of \\`${t}\\`, but received: ${print(n)}`,...i]}})}function unknown(){return define(\"unknown\",(()=>true))}function coerce(e,t,n){return new Struct({...e,coercer:(r,i)=>is(r,t)?e.coercer(n(r,i),i):e.coercer(r,i)})}function defaulted(e,t,n={}){return coerce(e,unknown(),(e=>{const r=typeof t===\"function\"?t():t;if(e===undefined){return r}if(!n.strict&&isPlainObject(e)&&isPlainObject(r)){const t={...e};let n=false;for(const e in r){if(t[e]===undefined){t[e]=r[e];n=true}}if(n){return t}}return e}))}function trimmed(e){return coerce(e,string(),(e=>e.trim()))}function empty(e){return refine(e,\"empty\",(t=>{const n=getSize(t);return n===0||`Expected an empty ${e.type} but received one with a size of \\`${n}\\``}))}function getSize(e){if(e instanceof Map||e instanceof Set){return e.size}else{return e.length}}function max(e,t,n={}){const{exclusive:r}=n;return refine(e,\"max\",(n=>r?n<t:n<=t||`Expected a ${e.type} less than ${r?\"\":\"or equal to \"}${t} but received \\`${n}\\``))}function min(e,t,n={}){const{exclusive:r}=n;return refine(e,\"min\",(n=>r?n>t:n>=t||`Expected a ${e.type} greater than ${r?\"\":\"or equal to \"}${t} but received \\`${n}\\``))}function nonempty(e){return refine(e,\"nonempty\",(t=>{const n=getSize(t);return n>0||`Expected a nonempty ${e.type} but received an empty one`}))}function pattern(e,t){return refine(e,\"pattern\",(n=>t.test(n)||`Expected a ${e.type} matching \\`/${t.source}/\\` but received \"${n}\"`))}function size(e,t,n=t){const r=`Expected a ${e.type}`;const i=t===n?`of \\`${t}\\``:`between \\`${t}\\` and \\`${n}\\``;return refine(e,\"size\",(e=>{if(typeof e===\"number\"||e instanceof Date){return t<=e&&e<=n||`${r} ${i} but received \\`${e}\\``}else if(e instanceof Map||e instanceof Set){const{size:c}=e;return t<=c&&c<=n||`${r} with a size ${i} but received one with a size of \\`${c}\\``}else{const{length:c}=e;return t<=c&&c<=n||`${r} with a length ${i} but received one with a length of \\`${c}\\``}}))}function refine(e,t,n){return new Struct({...e,*refiner(r,i){yield*e.refiner(r,i);const c=n(r,i);const o=toFailures(c,i,e,r);for(const e of o){yield{...e,refinement:t}}}})}e.Struct=Struct;e.StructError=StructError;e.any=any;e.array=array;e.assert=assert;e.assign=assign;e.bigint=bigint;e.boolean=boolean;e.coerce=coerce;e.create=create;e.date=date;e.defaulted=defaulted;e.define=define;e.deprecated=deprecated;e.dynamic=dynamic;e.empty=empty;e.enums=enums;e.func=func;e.instance=instance;e.integer=integer;e.intersection=intersection;e.is=is;e.lazy=lazy;e.literal=literal;e.map=map;e.mask=mask;e.max=max;e.min=min;e.never=never;e.nonempty=nonempty;e.nullable=nullable;e.number=number;e.object=object;e.omit=omit;e.optional=optional;e.partial=partial;e.pattern=pattern;e.pick=pick;e.record=record;e.refine=refine;e.regexp=regexp;e.set=set;e.size=size;e.string=string;e.struct=struct;e.trimmed=trimmed;e.tuple=tuple;e.type=type;e.union=union;e.unknown=unknown;e.validate=validate}))}};if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t={};e[318](0,t);module.exports=t})();","// getDefaultExport function for compatibility with non-ESM modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n  __webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => { def[key] = () => (value[key]) });\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// ISC License\n\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\n\nconst { env, stdout } = globalThis?.process ?? {}\n\nconst enabled =\n  env &&\n  !env.NO_COLOR &&\n  (env.FORCE_COLOR || (stdout?.isTTY && !env.CI && env.TERM !== 'dumb'))\n\nconst replaceClose = (\n  str: string,\n  close: string,\n  replace: string,\n  index: number\n): string => {\n  const start = str.substring(0, index) + replace\n  const end = str.substring(index + close.length)\n  const nextIndex = end.indexOf(close)\n  return ~nextIndex\n    ? start + replaceClose(end, close, replace, nextIndex)\n    : start + end\n}\n\nconst formatter = (open: string, close: string, replace = open) => {\n  if (!enabled) return String\n  return (input: string) => {\n    const string = '' + input\n    const index = string.indexOf(close, open.length)\n    return ~index\n      ? open + replaceClose(string, close, replace, index) + close\n      : open + string + close\n  }\n}\n\nexport const reset = enabled ? (s: string) => `\\x1b[0m${s}\\x1b[0m` : String\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m')\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m')\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m')\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m')\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m')\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m')\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m')\nexport const black = formatter('\\x1b[30m', '\\x1b[39m')\nexport const red = formatter('\\x1b[31m', '\\x1b[39m')\nexport const green = formatter('\\x1b[32m', '\\x1b[39m')\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m')\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m')\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m')\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m')\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m')\nexport const white = formatter('\\x1b[37m', '\\x1b[39m')\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m')\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m')\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m')\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m')\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m')\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m')\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m')\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m')\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m')\n","import MODERN_BROWSERSLIST_TARGET from './modern-browserslist-target'\n\nexport { MODERN_BROWSERSLIST_TARGET }\n\nexport type ValueOf<T> = Required<T>[keyof T]\n\nexport const COMPILER_NAMES = {\n  client: 'client',\n  server: 'server',\n  edgeServer: 'edge-server',\n} as const\n\nexport type CompilerNameValues = ValueOf<typeof COMPILER_NAMES>\n\nexport const COMPILER_INDEXES: {\n  [compilerKey in CompilerNameValues]: number\n} = {\n  [COMPILER_NAMES.client]: 0,\n  [COMPILER_NAMES.server]: 1,\n  [COMPILER_NAMES.edgeServer]: 2,\n} as const\n\nexport const UNDERSCORE_NOT_FOUND_ROUTE = '/_not-found'\nexport const UNDERSCORE_NOT_FOUND_ROUTE_ENTRY = `${UNDERSCORE_NOT_FOUND_ROUTE}/page`\nexport const PHASE_EXPORT = 'phase-export'\nexport const PHASE_PRODUCTION_BUILD = 'phase-production-build'\nexport const PHASE_PRODUCTION_SERVER = 'phase-production-server'\nexport const PHASE_DEVELOPMENT_SERVER = 'phase-development-server'\nexport const PHASE_TEST = 'phase-test'\nexport const PHASE_INFO = 'phase-info'\nexport const PAGES_MANIFEST = 'pages-manifest.json'\nexport const WEBPACK_STATS = 'webpack-stats.json'\nexport const APP_PATHS_MANIFEST = 'app-paths-manifest.json'\nexport const APP_PATH_ROUTES_MANIFEST = 'app-path-routes-manifest.json'\nexport const BUILD_MANIFEST = 'build-manifest.json'\nexport const APP_BUILD_MANIFEST = 'app-build-manifest.json'\nexport const FUNCTIONS_CONFIG_MANIFEST = 'functions-config-manifest.json'\nexport const SUBRESOURCE_INTEGRITY_MANIFEST = 'subresource-integrity-manifest'\nexport const NEXT_FONT_MANIFEST = 'next-font-manifest'\nexport const EXPORT_MARKER = 'export-marker.json'\nexport const EXPORT_DETAIL = 'export-detail.json'\nexport const PRERENDER_MANIFEST = 'prerender-manifest.json'\nexport const ROUTES_MANIFEST = 'routes-manifest.json'\nexport const IMAGES_MANIFEST = 'images-manifest.json'\nexport const SERVER_FILES_MANIFEST = 'required-server-files.json'\nexport const DEV_CLIENT_PAGES_MANIFEST = '_devPagesManifest.json'\nexport const MIDDLEWARE_MANIFEST = 'middleware-manifest.json'\nexport const TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST =\n  '_clientMiddlewareManifest.json'\nexport const DEV_CLIENT_MIDDLEWARE_MANIFEST = '_devMiddlewareManifest.json'\nexport const REACT_LOADABLE_MANIFEST = 'react-loadable-manifest.json'\nexport const SERVER_DIRECTORY = 'server'\nexport const CONFIG_FILES = [\n  'next.config.js',\n  'next.config.mjs',\n  'next.config.ts',\n]\nexport const BUILD_ID_FILE = 'BUILD_ID'\nexport const BLOCKED_PAGES = ['/_document', '/_app', '/_error']\nexport const CLIENT_PUBLIC_FILES_PATH = 'public'\nexport const CLIENT_STATIC_FILES_PATH = 'static'\nexport const STRING_LITERAL_DROP_BUNDLE = '__NEXT_DROP_CLIENT_FILE__'\nexport const NEXT_BUILTIN_DOCUMENT = '__NEXT_BUILTIN_DOCUMENT__'\nexport const BARREL_OPTIMIZATION_PREFIX = '__barrel_optimize__'\n\n// server/[entry]/page_client-reference-manifest.js\nexport const CLIENT_REFERENCE_MANIFEST = 'client-reference-manifest'\n// server/server-reference-manifest\nexport const SERVER_REFERENCE_MANIFEST = 'server-reference-manifest'\n// server/middleware-build-manifest.js\nexport const MIDDLEWARE_BUILD_MANIFEST = 'middleware-build-manifest'\n// server/middleware-react-loadable-manifest.js\nexport const MIDDLEWARE_REACT_LOADABLE_MANIFEST =\n  'middleware-react-loadable-manifest'\n// server/interception-route-rewrite-manifest.js\nexport const INTERCEPTION_ROUTE_REWRITE_MANIFEST =\n  'interception-route-rewrite-manifest'\n// server/dynamic-css-manifest.js\nexport const DYNAMIC_CSS_MANIFEST = 'dynamic-css-manifest'\n\n// static/runtime/main.js\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN = `main`\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = `${CLIENT_STATIC_FILES_RUNTIME_MAIN}-app`\n// next internal client components chunk for layouts\nexport const APP_CLIENT_INTERNALS = 'app-pages-internals'\n// static/runtime/react-refresh.js\nexport const CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = `react-refresh`\n// static/runtime/amp.js\nexport const CLIENT_STATIC_FILES_RUNTIME_AMP = `amp`\n// static/runtime/webpack.js\nexport const CLIENT_STATIC_FILES_RUNTIME_WEBPACK = `webpack`\n// static/runtime/polyfills.js\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = 'polyfills'\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(\n  CLIENT_STATIC_FILES_RUNTIME_POLYFILLS\n)\nexport const DEFAULT_RUNTIME_WEBPACK = 'webpack-runtime'\nexport const EDGE_RUNTIME_WEBPACK = 'edge-runtime-webpack'\nexport const STATIC_PROPS_ID = '__N_SSG'\nexport const SERVER_PROPS_ID = '__N_SSP'\nexport const DEFAULT_SERIF_FONT = {\n  name: 'Times New Roman',\n  xAvgCharWidth: 821,\n  azAvgWidth: 854.3953488372093,\n  unitsPerEm: 2048,\n}\nexport const DEFAULT_SANS_SERIF_FONT = {\n  name: 'Arial',\n  xAvgCharWidth: 904,\n  azAvgWidth: 934.5116279069767,\n  unitsPerEm: 2048,\n}\nexport const STATIC_STATUS_PAGES = ['/500']\nexport const TRACE_OUTPUT_VERSION = 1\n// in `MB`\nexport const TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000\n\nexport const RSC_MODULE_TYPES = {\n  client: 'client',\n  server: 'server',\n} as const\n\n// comparing\n// https://nextjs.org/docs/api-reference/edge-runtime\n// with\n// https://nodejs.org/docs/latest/api/globals.html\nexport const EDGE_UNSUPPORTED_NODE_APIS = [\n  'clearImmediate',\n  'setImmediate',\n  'BroadcastChannel',\n  'ByteLengthQueuingStrategy',\n  'CompressionStream',\n  'CountQueuingStrategy',\n  'DecompressionStream',\n  'DomException',\n  'MessageChannel',\n  'MessageEvent',\n  'MessagePort',\n  'ReadableByteStreamController',\n  'ReadableStreamBYOBRequest',\n  'ReadableStreamDefaultController',\n  'TransformStreamDefaultController',\n  'WritableStreamDefaultController',\n]\n\nexport const SYSTEM_ENTRYPOINTS = new Set<string>([\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n])\n","import type { UrlWithParsedQuery } from 'url'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\n\nconst DUMMY_ORIGIN = 'http://n'\n\nexport function isFullStringUrl(url: string) {\n  return /https?:\\/\\//.test(url)\n}\n\nexport function parseUrl(url: string): URL | undefined {\n  let parsed: URL | undefined = undefined\n  try {\n    parsed = new URL(url, DUMMY_ORIGIN)\n  } catch {}\n  return parsed\n}\n\nexport function parseReqUrl(url: string): UrlWithParsedQuery | undefined {\n  const parsedUrl: URL | undefined = parseUrl(url)\n\n  if (!parsedUrl) {\n    return\n  }\n\n  const query: Record<string, string | string[]> = {}\n\n  for (const key of parsedUrl.searchParams.keys()) {\n    const values = parsedUrl.searchParams.getAll(key)\n    query[key] = values.length > 1 ? values : values[0]\n  }\n\n  const legacyUrl: UrlWithParsedQuery = {\n    query,\n    hash: parsedUrl.hash,\n    search: parsedUrl.search,\n    path: parsedUrl.pathname,\n    pathname: parsedUrl.pathname,\n    href: `${parsedUrl.pathname}${parsedUrl.search}${parsedUrl.hash}`,\n    host: '',\n    hostname: '',\n    auth: '',\n    protocol: '',\n    slashes: null,\n    port: '',\n  }\n  return legacyUrl\n}\n\nexport function stripNextRscUnionQuery(relativeUrl: string): string {\n  const urlInstance = new URL(relativeUrl, DUMMY_ORIGIN)\n  urlInstance.searchParams.delete(NEXT_RSC_UNION_QUERY)\n\n  return urlInstance.pathname + urlInstance.search\n}\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * A cache of lowercased locales for each list of locales. This is stored as a\n * WeakMap so if the locales are garbage collected, the cache entry will be\n * removed as well.\n */\nconst cache = new WeakMap<readonly string[], readonly string[]>()\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: readonly string[]\n): PathLocale {\n  // If locales is undefined, return the pathname as is.\n  if (!locales) return { pathname }\n\n  // Get the cached lowercased locales or create a new cache entry.\n  let lowercasedLocales = cache.get(locales)\n  if (!lowercasedLocales) {\n    lowercasedLocales = locales.map((locale) => locale.toLowerCase())\n    cache.set(locales, lowercasedLocales)\n  }\n\n  let detectedLocale: string | undefined\n\n  // The first segment will be empty, because it has a leading `/`. If\n  // there is no further segment, there is no locale (or it's the default).\n  const segments = pathname.split('/', 2)\n\n  // If there's no second segment (ie, the pathname is just `/`), there's no\n  // locale.\n  if (!segments[1]) return { pathname }\n\n  // The second segment will contain the locale part if any.\n  const segment = segments[1].toLowerCase()\n\n  // See if the segment matches one of the locales. If it doesn't, there is\n  // no locale (or it's the default).\n  const index = lowercasedLocales.indexOf(segment)\n  if (index < 0) return { pathname }\n\n  // Return the case-sensitive locale.\n  detectedLocale = locales[index]\n\n  // Remove the `/${locale}` part of the pathname.\n  pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n  return { pathname, detectedLocale }\n}\n","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function isParallelRouteSegment(segment: string) {\n  return segment.startsWith('@') && segment !== '@children'\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","import { normalizeAppPath } from './app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\n\n// Identify /.*[param].*/ in route string\nconst TEST_ROUTE = /\\/[^/]*\\[[^/]+\\][^/]*(?=\\/|$)/\n\n// Identify /[param]/ in route string\nconst TEST_STRICT_ROUTE = /\\/\\[[^/]+\\](?=\\/|$)/\n\n/**\n * Check if a route is dynamic.\n *\n * @param route - The route to check.\n * @param strict - Whether to use strict mode which prohibits segments with prefixes/suffixes (default: true).\n * @returns Whether the route is dynamic.\n */\nexport function isDynamicRoute(route: string, strict: boolean = true): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  if (strict) {\n    return TEST_STRICT_ROUTE.test(route)\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\ntype GetNamedRouteRegexOptions = {\n  /**\n   * Whether to prefix the route keys with the NEXT_INTERCEPTION_MARKER_PREFIX\n   * or NEXT_QUERY_PARAM_PREFIX. This is only relevant when creating the\n   * routes-manifest during the build.\n   */\n  prefixRouteKeys: boolean\n\n  /**\n   * Whether to include the suffix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n\n  /**\n   * Whether to backtrack duplicate keys. This is only relevant when creating\n   * the routes-manifest during the build.\n   */\n  backreferenceDuplicateKeys?: boolean\n}\n\ntype GetRouteRegexOptions = {\n  /**\n   * Whether to include extra parts in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   * of adding this option.\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nconst PARAMETER_PATTERN = /^([^[]*)\\[((?:\\[[^\\]]*\\])|[^\\]]+)\\](.*)$/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[2])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nfunction parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n\nfunction getParametrizedRoute(\n  route: string,\n  includeSuffix: boolean,\n  includePrefix: boolean\n) {\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n      segment.startsWith(m)\n    )\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (markerMatch && paramMatches && paramMatches[2]) {\n      const { key, optional, repeat } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n      segments.push(`/${escapeStringRegexp(markerMatch)}([^/]+?)`)\n    } else if (paramMatches && paramMatches[2]) {\n      const { key, repeat, optional } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    parameterizedRoute: segments.join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(\n  normalizedRoute: string,\n  {\n    includeSuffix = false,\n    includePrefix = false,\n    excludeOptionalTrailingSlash = false,\n  }: GetRouteRegexOptions = {}\n): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(\n    normalizedRoute,\n    includeSuffix,\n    includePrefix\n  )\n\n  let re = parameterizedRoute\n  if (!excludeOptionalTrailingSlash) {\n    re += '(?:/)?'\n  }\n\n  return {\n    re: new RegExp(`^${re}$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n  backreferenceDuplicateKeys,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n  backreferenceDuplicateKeys: boolean\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  const duplicateKey = cleanedKey in routeKeys\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  let pattern: string\n  if (duplicateKey && backreferenceDuplicateKeys) {\n    // Use a backreference to the key to ensure that the key is the same value\n    // in each of the placeholders.\n    pattern = `\\\\k<${cleanedKey}>`\n  } else if (repeat) {\n    pattern = `(?<${cleanedKey}>.+?)`\n  } else {\n    pattern = `(?<${cleanedKey}>[^/]+?)`\n  }\n\n  return optional\n    ? `(?:/${interceptionPrefix}${pattern})?`\n    : `/${interceptionPrefix}${pattern}`\n}\n\nfunction getNamedParametrizedRoute(\n  route: string,\n  prefixRouteKeys: boolean,\n  includeSuffix: boolean,\n  includePrefix: boolean,\n  backreferenceDuplicateKeys: boolean\n) {\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n      segment.startsWith(m)\n    )\n\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (hasInterceptionMarker && paramMatches && paramMatches[2]) {\n      // If there's an interception marker, add it to the segments.\n      segments.push(\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          interceptionMarker: paramMatches[1],\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix: prefixRouteKeys\n            ? NEXT_INTERCEPTION_MARKER_PREFIX\n            : undefined,\n          backreferenceDuplicateKeys,\n        })\n      )\n    } else if (paramMatches && paramMatches[2]) {\n      // If there's a prefix, add it to the segments if it's enabled.\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = getSafeKeyFromSegment({\n        getSafeRouteKey,\n        segment: paramMatches[2],\n        routeKeys,\n        keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n        backreferenceDuplicateKeys,\n      })\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    namedParameterizedRoute: segments.join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  options: GetNamedRouteRegexOptions\n) {\n  const result = getNamedParametrizedRoute(\n    normalizedRoute,\n    options.prefixRouteKeys,\n    options.includeSuffix ?? false,\n    options.includePrefix ?? false,\n    options.backreferenceDuplicateKeys ?? false\n  )\n\n  let namedRegex = result.namedParameterizedRoute\n  if (!options.excludeOptionalTrailingSlash) {\n    namedRegex += '(?:/)?'\n  }\n\n  return {\n    ...getRouteRegex(normalizedRoute, options),\n    namedRegex: `^${namedRegex}$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(\n    normalizedRoute,\n    false,\n    false\n  )\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false,\n    false,\n    false,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: readonly string[]\n  defaultLocale?: string\n  domainLocales?: readonly DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: readonly string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","import type { Group } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\n\nexport interface RouteMatchFn {\n  (pathname: string): false | Params\n}\n\ntype RouteMatcherOptions = {\n  // We only use the exec method of the RegExp object. This helps us avoid using\n  // type assertions that the passed in properties are of the correct type.\n  re: Pick<RegExp, 'exec'>\n  groups: Record<string, Group>\n}\n\nexport function getRouteMatcher({\n  re,\n  groups,\n}: RouteMatcherOptions): RouteMatchFn {\n  return (pathname: string) => {\n    const routeMatch = re.exec(pathname)\n    if (!routeMatch) return false\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n\n    const params: Params = {}\n    for (const [key, group] of Object.entries(groups)) {\n      const match = routeMatch[group.pos]\n      if (match !== undefined) {\n        if (group.repeat) {\n          params[key] = match.split('/').map((entry) => decode(entry))\n        } else {\n          params[key] = decode(match)\n        }\n      }\n    }\n\n    return params\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    const existing = query[key]\n    if (typeof existing === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      query[key] = [existing, value]\n    }\n  }\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (typeof param === 'string') {\n    return param\n  }\n\n  if (\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(query: ParsedUrlQuery): URLSearchParams {\n  const searchParams = new URLSearchParams()\n  for (const [key, value] of Object.entries(query)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        searchParams.append(key, stringifyUrlQueryParam(item))\n      }\n    } else {\n      searchParams.set(key, stringifyUrlQueryParam(value))\n    }\n  }\n  return searchParams\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  for (const searchParams of searchParamsList) {\n    for (const key of searchParams.keys()) {\n      target.delete(key)\n    }\n\n    for (const [key, value] of searchParams.entries()) {\n      target.append(key, value)\n    }\n  }\n\n  return target\n}\n","import type { IncomingMessage } from 'http'\nimport type { Key } from 'next/dist/compiled/path-to-regexp'\nimport type { NextParsedUrlQuery } from '../../../../server/request-meta'\nimport type { RouteHas } from '../../../../lib/load-custom-routes'\nimport type { BaseNextRequest } from '../../../../server/base-http'\n\nimport { compile, pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { parseUrl } from './parse-url'\nimport {\n  INTERCEPTION_ROUTE_MARKERS,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\nimport { getCookieParser } from '../../../../server/api-utils/get-cookie-parser'\nimport type { Params } from '../../../../server/request/params'\n\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */\nfunction getSafeParamName(paramName: string) {\n  let newParamName = ''\n\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i)\n\n    if (\n      (charCode > 64 && charCode < 91) || // A-Z\n      (charCode > 96 && charCode < 123) // a-z\n    ) {\n      newParamName += paramName[i]\n    }\n  }\n  return newParamName\n}\n\nfunction escapeSegment(str: string, segmentName: string) {\n  return str.replace(\n    new RegExp(`:${escapeStringRegexp(segmentName)}`, 'g'),\n    `__ESC_COLON_${segmentName}`\n  )\n}\n\nfunction unescapeSegments(str: string) {\n  return str.replace(/__ESC_COLON_/gi, ':')\n}\n\nexport function matchHas(\n  req: BaseNextRequest | IncomingMessage,\n  query: Params,\n  has: RouteHas[] = [],\n  missing: RouteHas[] = []\n): false | Params {\n  const params: Params = {}\n\n  const hasMatch = (hasItem: RouteHas) => {\n    let value\n    let key = hasItem.key\n\n    switch (hasItem.type) {\n      case 'header': {\n        key = key!.toLowerCase()\n        value = req.headers[key] as string\n        break\n      }\n      case 'cookie': {\n        if ('cookies' in req) {\n          value = req.cookies[hasItem.key]\n        } else {\n          const cookies = getCookieParser(req.headers)()\n          value = cookies[hasItem.key]\n        }\n\n        break\n      }\n      case 'query': {\n        value = query[key!]\n        break\n      }\n      case 'host': {\n        const { host } = req?.headers || {}\n        // remove port from host if present\n        const hostname = host?.split(':', 1)[0].toLowerCase()\n        value = hostname\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key!)] = value\n      return true\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`)\n      const matches = Array.isArray(value)\n        ? value.slice(-1)[0].match(matcher)\n        : value.match(matcher)\n\n      if (matches) {\n        if (Array.isArray(matches)) {\n          if (matches.groups) {\n            Object.keys(matches.groups).forEach((groupKey) => {\n              params[groupKey] = matches.groups![groupKey]\n            })\n          } else if (hasItem.type === 'host' && matches[0]) {\n            params.host = matches[0]\n          }\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  const allMatch =\n    has.every((item) => hasMatch(item)) &&\n    !missing.some((item) => hasMatch(item))\n\n  if (allMatch) {\n    return params\n  }\n  return false\n}\n\nexport function compileNonPath(value: string, params: Params): string {\n  if (!value.includes(':')) {\n    return value\n  }\n\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value\n        .replace(\n          new RegExp(`:${key}\\\\*`, 'g'),\n          `:${key}--ESCAPED_PARAM_ASTERISKS`\n        )\n        .replace(\n          new RegExp(`:${key}\\\\?`, 'g'),\n          `:${key}--ESCAPED_PARAM_QUESTION`\n        )\n        .replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`)\n        .replace(\n          new RegExp(`:${key}(?!\\\\w)`, 'g'),\n          `--ESCAPED_PARAM_COLON${key}`\n        )\n    }\n  }\n  value = value\n    .replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1')\n    .replace(/--ESCAPED_PARAM_PLUS/g, '+')\n    .replace(/--ESCAPED_PARAM_COLON/g, ':')\n    .replace(/--ESCAPED_PARAM_QUESTION/g, '?')\n    .replace(/--ESCAPED_PARAM_ASTERISKS/g, '*')\n\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return compile(`/${value}`, { validate: false })(params).slice(1)\n}\n\nexport function parseDestination(args: {\n  destination: string\n  params: Readonly<Params>\n  query: Readonly<NextParsedUrlQuery>\n}) {\n  let escaped = args.destination\n  for (const param of Object.keys({ ...args.params, ...args.query })) {\n    if (!param) continue\n\n    escaped = escapeSegment(escaped, param)\n  }\n\n  const parsed = parseUrl(escaped)\n\n  let pathname = parsed.pathname\n  if (pathname) {\n    pathname = unescapeSegments(pathname)\n  }\n\n  let href = parsed.href\n  if (href) {\n    href = unescapeSegments(href)\n  }\n\n  let hostname = parsed.hostname\n  if (hostname) {\n    hostname = unescapeSegments(hostname)\n  }\n\n  let hash = parsed.hash\n  if (hash) {\n    hash = unescapeSegments(hash)\n  }\n\n  return {\n    ...parsed,\n    pathname,\n    hostname,\n    href,\n    hash,\n  }\n}\n\nexport function prepareDestination(args: {\n  appendParamsToQuery: boolean\n  destination: string\n  params: Params\n  query: NextParsedUrlQuery\n}) {\n  const parsedDestination = parseDestination(args)\n\n  const { hostname: destHostname, query: destQuery } = parsedDestination\n\n  // The following code assumes that the pathname here includes the hash if it's\n  // present.\n  let destPath = parsedDestination.pathname\n  if (parsedDestination.hash) {\n    destPath = `${destPath}${parsedDestination.hash}`\n  }\n\n  const destParams: (string | number)[] = []\n\n  const destPathParamKeys: Key[] = []\n  pathToRegexp(destPath, destPathParamKeys)\n  for (const key of destPathParamKeys) {\n    destParams.push(key.name)\n  }\n\n  if (destHostname) {\n    const destHostnameParamKeys: Key[] = []\n    pathToRegexp(destHostname, destHostnameParamKeys)\n    for (const key of destHostnameParamKeys) {\n      destParams.push(key.name)\n    }\n  }\n\n  const destPathCompiler = compile(\n    destPath,\n    // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    { validate: false }\n  )\n\n  let destHostnameCompiler\n  if (destHostname) {\n    destHostnameCompiler = compile(destHostname, { validate: false })\n  }\n\n  // update any params in query values\n  for (const [key, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key] = strOrArray.map((value) =>\n        compileNonPath(unescapeSegments(value), args.params)\n      )\n    } else if (typeof strOrArray === 'string') {\n      destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params)\n    }\n  }\n\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(args.params).filter(\n    (name) => name !== 'nextInternalLocale'\n  )\n\n  if (\n    args.appendParamsToQuery &&\n    !paramKeys.some((key) => destParams.includes(key))\n  ) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = args.params[key]\n      }\n    }\n  }\n\n  let newUrl\n\n  // The compiler also that the interception route marker is an unnamed param, hence '0',\n  // so we need to add it to the params object.\n  if (isInterceptionRouteAppPath(destPath)) {\n    for (const segment of destPath.split('/')) {\n      const marker = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n        segment.startsWith(m)\n      )\n      if (marker) {\n        if (marker === '(..)(..)') {\n          args.params['0'] = '(..)'\n          args.params['1'] = '(..)'\n        } else {\n          args.params['0'] = marker\n        }\n        break\n      }\n    }\n  }\n\n  try {\n    newUrl = destPathCompiler(args.params)\n\n    const [pathname, hash] = newUrl.split('#', 2)\n    if (destHostnameCompiler) {\n      parsedDestination.hostname = destHostnameCompiler(args.params)\n    }\n    parsedDestination.pathname = pathname\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`\n    delete (parsedDestination as any).search\n  } catch (err: any) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(\n        `To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`\n      )\n    }\n    throw err\n  }\n\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = {\n    ...args.query,\n    ...parsedDestination.query,\n  }\n\n  return {\n    newUrl,\n    destQuery,\n    parsedDestination,\n  }\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../lib/constants'\n\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */\nexport function fromNodeOutgoingHttpHeaders(\n  nodeHeaders: OutgoingHttpHeaders\n): Headers {\n  const headers = new Headers()\n  for (let [key, value] of Object.entries(nodeHeaders)) {\n    const values = Array.isArray(value) ? value : [value]\n    for (let v of values) {\n      if (typeof v === 'undefined') continue\n      if (typeof v === 'number') {\n        v = v.toString()\n      }\n\n      headers.append(key, v)\n    }\n  }\n  return headers\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nexport function splitCookiesString(cookiesString: string) {\n  var cookiesStrings = []\n  var pos = 0\n  var start\n  var ch\n  var lastComma\n  var nextStart\n  var cookiesSeparatorFound\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1\n    }\n    return pos < cookiesString.length\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos)\n\n    return ch !== '=' && ch !== ';' && ch !== ','\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos\n    cookiesSeparatorFound = false\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos)\n      if (ch === ',') {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos\n        pos += 1\n\n        skipWhitespace()\n        nextStart = pos\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n          // we found cookies separator\n          cookiesSeparatorFound = true\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart\n          cookiesStrings.push(cookiesString.substring(start, lastComma))\n          start = pos\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1\n        }\n      } else {\n        pos += 1\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length))\n    }\n  }\n\n  return cookiesStrings\n}\n\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */\nexport function toNodeOutgoingHttpHeaders(\n  headers: Headers\n): OutgoingHttpHeaders {\n  const nodeHeaders: OutgoingHttpHeaders = {}\n  const cookies: string[] = []\n  if (headers) {\n    for (const [key, value] of headers.entries()) {\n      if (key.toLowerCase() === 'set-cookie') {\n        // We may have gotten a comma joined string of cookies, or multiple\n        // set-cookie headers. We need to merge them into one header array\n        // to represent all the cookies.\n        cookies.push(...splitCookiesString(value))\n        nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies\n      } else {\n        nodeHeaders[key] = value\n      }\n    }\n  }\n  return nodeHeaders\n}\n\n/**\n * Validate the correctness of a user-provided URL.\n */\nexport function validateURL(url: string | URL): string {\n  try {\n    return String(new URL(String(url)))\n  } catch (error: any) {\n    throw new Error(\n      `URL is malformed \"${String(\n        url\n      )}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`,\n      { cause: error }\n    )\n  }\n}\n\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key.\n */\nexport function normalizeNextQueryParam(key: string): null | string {\n  const prefixes = [NEXT_QUERY_PARAM_PREFIX, NEXT_INTERCEPTION_MARKER_PREFIX]\n  for (const prefix of prefixes) {\n    if (key !== prefix && key.startsWith(prefix)) {\n      return key.substring(prefix.length)\n    }\n  }\n  return null\n}\n","/**\n * Decodes a query path parameter.\n *\n * @param value - The value to decode.\n * @returns The decoded value.\n */\nexport function decodeQueryPathParameter(value: string) {\n  // When deployed to Vercel, the value may be encoded, so this attempts to\n  // decode it and returns the original value if it fails.\n  try {\n    return decodeURIComponent(value)\n  } catch {\n    return value\n  }\n}\n","// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { UrlObject } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && !protocol.endsWith(':')) protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (!urlObjectKeys.includes(key)) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n","import type { LoadComponentsReturnType } from '../load-components'\nimport type { ServerRuntime, SizeLimit } from '../../types'\nimport type {\n  ExperimentalConfig,\n  NextConfigComplete,\n} from '../../server/config-shared'\nimport type { ClientReferenceManifest } from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { NextFontManifest } from '../../build/webpack/plugins/next-font-manifest-plugin'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { AppPageModule } from '../route-modules/app-page/module'\nimport type {\n  HeadData,\n  LoadingModuleData,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport type { __ApiPreviewProps } from '../api-utils'\n\nimport s from 'next/dist/compiled/superstruct'\nimport type { RequestLifecycleOpts } from '../base-server'\nimport type { InstrumentationOnRequestError } from '../instrumentation/types'\nimport type { NextRequestHint } from '../web/adapter'\nimport type { BaseNextRequest } from '../base-http'\nimport type { IncomingMessage } from 'http'\nimport type { RenderResumeDataCache } from '../resume-data-cache/resume-data-cache'\n\nexport type DynamicParamTypes =\n  | 'catchall'\n  | 'catchall-intercepted'\n  | 'optional-catchall'\n  | 'dynamic'\n  | 'dynamic-intercepted'\n\nconst dynamicParamTypesSchema = s.enums(['c', 'ci', 'oc', 'd', 'di'])\n\nexport type DynamicParamTypesShort = s.Infer<typeof dynamicParamTypesSchema>\n\nconst segmentSchema = s.union([\n  s.string(),\n  s.tuple([s.string(), s.string(), dynamicParamTypesSchema]),\n])\n\nexport type Segment = s.Infer<typeof segmentSchema>\n\n// unfortunately the tuple is not understood well by Describe so we have to\n// use any here. This does not have any impact on the runtime type since the validation\n// does work correctly.\nexport const flightRouterStateSchema: s.Describe<any> = s.tuple([\n  segmentSchema,\n  s.record(\n    s.string(),\n    s.lazy(() => flightRouterStateSchema)\n  ),\n  s.optional(s.nullable(s.string())),\n  s.optional(\n    s.nullable(\n      s.union([\n        s.literal('refetch'),\n        s.literal('refresh'),\n        s.literal('inside-shared-layout'),\n      ])\n    )\n  ),\n  s.optional(s.boolean()),\n])\n\n/**\n * Router state\n */\nexport type FlightRouterState = [\n  segment: Segment,\n  parallelRoutes: { [parallelRouterKey: string]: FlightRouterState },\n  url?: string | null,\n  /**\n   * \"refresh\" and \"refetch\", despite being similarly named, have different\n   * semantics:\n   * - \"refetch\" is used during a request to inform the server where rendering\n   *   should start from.\n   *\n   * - \"refresh\" is used by the client to mark that a segment should re-fetch the\n   *   data from the server for the current segment. It uses the \"url\" property\n   *   above to determine where to fetch from.\n   *\n   * - \"inside-shared-layout\" is used during a prefetch request to inform the\n   *   server that even if the segment matches, it should be treated as if it's\n   *   within the \"new\" part of a navigation — inside the shared layout. If\n   *   the segment doesn't match, then it has no effect, since it would be\n   *   treated as new regardless. If it does match, though, the server does not\n   *   need to render it, because the client already has it.\n   *\n   *   A bit confusing, but that's because it has only one extremely narrow use\n   *   case — during a non-PPR prefetch, the server uses it to find the first\n   *   loading boundary beneath a shared layout.\n   *\n   *   TODO: We should rethink the protocol for dynamic requests. It might not\n   *   make sense for the client to send a FlightRouterState, since this type is\n   *   overloaded with concerns.\n   */\n  refresh?: 'refetch' | 'refresh' | 'inside-shared-layout' | null,\n  isRootLayout?: boolean,\n  /**\n   * Only present when responding to a tree prefetch request. Indicates whether\n   * there is a loading boundary somewhere in the tree. The client cache uses\n   * this to determine if it can skip the data prefetch request.\n   */\n  hasLoadingBoundary?: HasLoadingBoundary,\n]\n\nexport const enum HasLoadingBoundary {\n  // There is a loading boundary in this particular segment\n  SegmentHasLoadingBoundary = 1,\n  // There is a loading boundary somewhere in the subtree (but not in\n  // this segment)\n  SubtreeHasLoadingBoundary = 2,\n  // There is no loading boundary in this segment or any of its descendants\n  SubtreeHasNoLoadingBoundary = 3,\n}\n\n/**\n * Individual Flight response path\n */\nexport type FlightSegmentPath =\n  // Uses `any` as repeating pattern can't be typed.\n  | any[]\n  // Looks somewhat like this\n  | [\n      segment: Segment,\n      parallelRouterKey: string,\n      segment: Segment,\n      parallelRouterKey: string,\n      segment: Segment,\n      parallelRouterKey: string,\n    ]\n\n/**\n * Represents a tree of segments and the Flight data (i.e. React nodes) that\n * correspond to each one. The tree is isomorphic to the FlightRouterState;\n * however in the future we want to be able to fetch arbitrary partial segments\n * without having to fetch all its children. So this response format will\n * likely change.\n */\nexport type CacheNodeSeedData = [\n  segment: Segment,\n  node: React.ReactNode | null,\n  parallelRoutes: {\n    [parallelRouterKey: string]: CacheNodeSeedData | null\n  },\n  loading: LoadingModuleData | Promise<LoadingModuleData>,\n  isPartial: boolean,\n]\n\nexport type FlightDataSegment = [\n  /* segment of the rendered slice: */ Segment,\n  /* treePatch */ FlightRouterState,\n  /* cacheNodeSeedData */ CacheNodeSeedData | null, // Can be null during prefetch if there's no loading component\n  /* head: viewport */ HeadData,\n  /* isHeadPartial */ boolean,\n]\n\nexport type FlightDataPath =\n  // Uses `any` as repeating pattern can't be typed.\n  | any[]\n  // Looks somewhat like this\n  | [\n      // Holds full path to the segment.\n      ...FlightSegmentPath[],\n      ...FlightDataSegment,\n    ]\n\n/**\n * The Flight response data\n */\nexport type FlightData = Array<FlightDataPath> | string\n\nexport type ActionResult = Promise<any>\n\nexport type ServerOnInstrumentationRequestError = (\n  error: unknown,\n  // The request could be middleware, node server or web server request,\n  // we normalized them into an aligned format to `onRequestError` API later.\n  request: NextRequestHint | BaseNextRequest | IncomingMessage,\n  errorContext: Parameters<InstrumentationOnRequestError>[2]\n) => void | Promise<void>\n\nexport interface RenderOptsPartial {\n  dir?: string\n  previewProps: __ApiPreviewProps | undefined\n  err?: Error | null\n  dev?: boolean\n  basePath: string\n  trailingSlash: boolean\n  clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  supportsDynamicResponse: boolean\n  runtime?: ServerRuntime\n  serverComponents?: boolean\n  enableTainting?: boolean\n  assetPrefix?: string\n  crossOrigin?: '' | 'anonymous' | 'use-credentials' | undefined\n  nextFontManifest?: DeepReadonly<NextFontManifest>\n  botType?: 'dom' | 'html' | undefined\n  serveStreamingMetadata?: boolean\n  incrementalCache?: import('../lib/incremental-cache').IncrementalCache\n  cacheLifeProfiles?: {\n    [profile: string]: import('../use-cache/cache-life').CacheLife\n  }\n  isOnDemandRevalidate?: boolean\n  isPossibleServerAction?: boolean\n  setIsrStatus?: (key: string, value: boolean | null) => void\n  isRevalidate?: boolean\n  nextExport?: boolean\n  nextConfigOutput?: 'standalone' | 'export'\n  onInstrumentationRequestError?: ServerOnInstrumentationRequestError\n  isDraftMode?: boolean\n  deploymentId?: string\n  onUpdateCookies?: (cookies: string[]) => void\n  loadConfig?: (\n    phase: string,\n    dir: string,\n    customConfig?: object | null,\n    rawConfig?: boolean,\n    silent?: boolean\n  ) => Promise<NextConfigComplete>\n  serverActions?: {\n    bodySizeLimit?: SizeLimit\n    allowedOrigins?: string[]\n  }\n  params?: ParsedUrlQuery\n  isPrefetch?: boolean\n  htmlLimitedBots: string | undefined\n  experimental: {\n    /**\n     * When true, it indicates that the current page supports partial\n     * prerendering.\n     */\n    isRoutePPREnabled?: boolean\n    expireTime: number | undefined\n    staleTimes: ExperimentalConfig['staleTimes'] | undefined\n    clientTraceMetadata: string[] | undefined\n    dynamicIO: boolean\n    clientSegmentCache: boolean | 'client-only'\n    dynamicOnHover: boolean\n    inlineCss: boolean\n    authInterrupts: boolean\n  }\n  postponed?: string\n\n  /**\n   * Should wait for react stream allReady to resolve all suspense boundaries,\n   * in order to perform a full page render.\n   */\n  shouldWaitOnAllReady?: boolean\n\n  /**\n   * A prefilled resume data cache. This was either generated for this page\n   * during dev warmup, or when a page with defined params was previously\n   * prerendered, and now its matching optional fallback shell is prerendered.\n   */\n  renderResumeDataCache?: RenderResumeDataCache\n\n  /**\n   * When true, the page will be rendered using the static rendering to detect\n   * any dynamic API's that would have stopped the page from being fully\n   * statically generated.\n   */\n  isDebugDynamicAccesses?: boolean\n\n  /**\n   * This is true when:\n   * - source maps are generated\n   * - source maps are applied\n   * - minification is disabled\n   */\n  hasReadableErrorStacks?: boolean\n\n  /**\n   * The maximum length of the headers that are emitted by React and added to\n   * the response.\n   */\n  reactMaxHeadersLength: number | undefined\n\n  isStaticGeneration?: boolean\n\n  /**\n   * When true, the page is prerendered as a fallback shell, while allowing any\n   * dynamic accesses to result in an empty shell. This is the case when there\n   * are also routes prerendered with a more complete set of params.\n   * Prerendering those routes would catch any invalid dynamic accesses.\n   */\n  allowEmptyStaticShell?: boolean\n\n  /**\n   * next config experimental.devtoolSegmentExplorer\n   */\n  devtoolSegmentExplorer?: boolean\n}\n\nexport type RenderOpts = LoadComponentsReturnType<AppPageModule> &\n  RenderOptsPartial &\n  RequestLifecycleOpts\n\nexport type PreloadCallbacks = (() => void)[]\n\nexport type InitialRSCPayload = {\n  /** buildId */\n  b: string\n  /** assetPrefix */\n  p: string\n  /** initialCanonicalUrlParts */\n  c: string[]\n  /** couldBeIntercepted */\n  i: boolean\n  /** initialFlightData */\n  f: FlightDataPath[]\n  /** missingSlots */\n  m: Set<string> | undefined\n  /** GlobalError */\n  G: [React.ComponentType<any>, React.ReactNode | undefined]\n  /** postponed */\n  s: boolean\n  /** prerendered */\n  S: boolean\n}\n\n// Response from `createFromFetch` for normal rendering\nexport type NavigationFlightResponse = {\n  /** buildId */\n  b: string\n  /** flightData */\n  f: FlightData\n  /** prerendered */\n  S: boolean\n}\n\n// Response from `createFromFetch` for server actions. Action's flight data can be null\nexport type ActionFlightResponse = {\n  /** actionResult */\n  a: ActionResult\n  /** buildId */\n  b: string\n  /** flightData */\n  f: FlightData\n}\n\nexport type RSCPayload =\n  | InitialRSCPayload\n  | NavigationFlightResponse\n  | ActionFlightResponse\n","export const RSC_HEADER = 'RSC' as const\nexport const ACTION_HEADER = 'Next-Action' as const\n// TODO: Instead of sending the full router state, we only need to send the\n// segment path. Saves bytes. Then we could also use this field for segment\n// prefetches, which also need to specify a particular segment.\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'Next-Router-State-Tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'Next-Router-Prefetch' as const\n// This contains the path to the segment being prefetched.\n// TODO: If we change Next-Router-State-Tree to be a segment path, we can use\n// that instead. Then Next-Router-Prefetch and Next-Router-Segment-Prefetch can\n// be merged into a single enum.\nexport const NEXT_ROUTER_SEGMENT_PREFETCH_HEADER =\n  'Next-Router-Segment-Prefetch' as const\nexport const NEXT_HMR_REFRESH_HEADER = 'Next-HMR-Refresh' as const\nexport const NEXT_HMR_REFRESH_HASH_COOKIE = '__next_hmr_refresh_hash__' as const\nexport const NEXT_URL = 'Next-Url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_HEADERS = [\n  RSC_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time' as const\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\nexport const NEXT_REWRITTEN_PATH_HEADER = 'x-nextjs-rewritten-path' as const\nexport const NEXT_REWRITTEN_QUERY_HEADER = 'x-nextjs-rewritten-query' as const\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender' as const\nexport const NEXT_ACTION_NOT_FOUND_HEADER = 'x-nextjs-action-not-found' as const\n","import type { Rewrite } from '../lib/load-custom-routes'\nimport type { RouteMatchFn } from '../shared/lib/router/utils/route-matcher'\nimport type { NextConfig } from './config'\nimport type { BaseNextRequest } from './base-http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\n\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { getPathMatch } from '../shared/lib/router/utils/path-match'\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport {\n  matchHas,\n  prepareDestination,\n} from '../shared/lib/router/utils/prepare-destination'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths'\nimport {\n  NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER,\n  NEXT_CACHE_REVALIDATED_TAGS_HEADER,\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../lib/constants'\nimport { normalizeNextQueryParam } from './web/utils'\nimport type { IncomingHttpHeaders, IncomingMessage } from 'http'\nimport { decodeQueryPathParameter } from './lib/decode-query-path-parameter'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { parseReqUrl } from '../lib/url'\nimport { formatUrl } from '../shared/lib/router/utils/format-url'\nimport { parseAndValidateFlightRouterState } from './app-render/parse-and-validate-flight-router-state'\nimport { isInterceptionRouteRewrite } from '../lib/generate-interception-routes-rewrites'\nimport { NEXT_ROUTER_STATE_TREE_HEADER } from '../client/components/app-router-headers'\nimport { getSelectedParams } from '../client/components/router-reducer/compute-changed-path'\n\nfunction filterInternalQuery(\n  query: Record<string, undefined | string | string[]>,\n  paramKeys: string[]\n) {\n  // this is used to pass query information in rewrites\n  // but should not be exposed in final query\n  delete query['nextInternalLocale']\n\n  for (const key in query) {\n    const isNextQueryPrefix =\n      key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX)\n\n    const isNextInterceptionMarkerPrefix =\n      key !== NEXT_INTERCEPTION_MARKER_PREFIX &&\n      key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX)\n\n    if (\n      isNextQueryPrefix ||\n      isNextInterceptionMarkerPrefix ||\n      paramKeys.includes(key)\n    ) {\n      delete query[key]\n    }\n  }\n}\n\nexport function normalizeCdnUrl(\n  req: BaseNextRequest | IncomingMessage,\n  paramKeys: string[]\n) {\n  // make sure to normalize req.url from CDNs to strip dynamic and rewrite\n  // params from the query which are added during routing\n  const _parsedUrl = parseReqUrl(req.url!)\n\n  // we can't normalize if we can't parse\n  if (!_parsedUrl) {\n    return req.url\n  }\n  delete (_parsedUrl as any).search\n  filterInternalQuery(_parsedUrl.query, paramKeys)\n\n  req.url = formatUrl(_parsedUrl)\n}\n\nexport function interpolateDynamicPath(\n  pathname: string,\n  params: ParsedUrlQuery,\n  defaultRouteRegex?: ReturnType<typeof getNamedRouteRegex> | undefined\n) {\n  if (!defaultRouteRegex) return pathname\n\n  for (const param of Object.keys(defaultRouteRegex.groups)) {\n    const { optional, repeat } = defaultRouteRegex.groups[param]\n    let builtParam = `[${repeat ? '...' : ''}${param}]`\n\n    if (optional) {\n      builtParam = `[${builtParam}]`\n    }\n\n    let paramValue: string\n    const value = params[param]\n\n    if (Array.isArray(value)) {\n      paramValue = value.map((v) => v && encodeURIComponent(v)).join('/')\n    } else if (value) {\n      paramValue = encodeURIComponent(value)\n    } else {\n      paramValue = ''\n    }\n\n    if (paramValue || optional) {\n      pathname = pathname.replaceAll(builtParam, paramValue)\n    }\n  }\n\n  return pathname\n}\n\nexport function normalizeDynamicRouteParams(\n  query: ParsedUrlQuery,\n  defaultRouteRegex: ReturnType<typeof getNamedRouteRegex>,\n  defaultRouteMatches: ParsedUrlQuery,\n  ignoreMissingOptional: boolean\n) {\n  let hasValidParams = true\n  let params: ParsedUrlQuery = {}\n\n  for (const key of Object.keys(defaultRouteRegex.groups)) {\n    let value: string | string[] | undefined = query[key]\n\n    if (typeof value === 'string') {\n      value = normalizeRscURL(value)\n    } else if (Array.isArray(value)) {\n      value = value.map(normalizeRscURL)\n    }\n\n    // if the value matches the default value we can't rely\n    // on the parsed params, this is used to signal if we need\n    // to parse x-now-route-matches or not\n    const defaultValue = defaultRouteMatches![key]\n    const isOptional = defaultRouteRegex!.groups[key].optional\n\n    const isDefaultValue = Array.isArray(defaultValue)\n      ? defaultValue.some((defaultVal) => {\n          return Array.isArray(value)\n            ? value.some((val) => val.includes(defaultVal))\n            : value?.includes(defaultVal)\n        })\n      : value?.includes(defaultValue as string)\n\n    if (\n      isDefaultValue ||\n      (typeof value === 'undefined' && !(isOptional && ignoreMissingOptional))\n    ) {\n      return { params: {}, hasValidParams: false }\n    }\n\n    // non-provided optional values should be undefined so normalize\n    // them to undefined\n    if (\n      isOptional &&\n      (!value ||\n        (Array.isArray(value) &&\n          value.length === 1 &&\n          // fallback optional catch-all SSG pages have\n          // [[...paramName]] for the root path on Vercel\n          (value[0] === 'index' || value[0] === `[[...${key}]]`)))\n    ) {\n      value = undefined\n      delete query[key]\n    }\n\n    // query values from the proxy aren't already split into arrays\n    // so make sure to normalize catch-all values\n    if (\n      value &&\n      typeof value === 'string' &&\n      defaultRouteRegex!.groups[key].repeat\n    ) {\n      value = value.split('/')\n    }\n\n    if (value) {\n      params[key] = value\n    }\n  }\n\n  return {\n    params,\n    hasValidParams,\n  }\n}\n\nexport function getServerUtils({\n  page,\n  i18n,\n  basePath,\n  rewrites,\n  pageIsDynamic,\n  trailingSlash,\n  caseSensitive,\n}: {\n  page: string\n  i18n?: NextConfig['i18n']\n  basePath: string\n  rewrites: DeepReadonly<{\n    fallback?: ReadonlyArray<Rewrite>\n    afterFiles?: ReadonlyArray<Rewrite>\n    beforeFiles?: ReadonlyArray<Rewrite>\n  }>\n  pageIsDynamic: boolean\n  trailingSlash?: boolean\n  caseSensitive: boolean\n}) {\n  let defaultRouteRegex: ReturnType<typeof getNamedRouteRegex> | undefined\n  let dynamicRouteMatcher: RouteMatchFn | undefined\n  let defaultRouteMatches: ParsedUrlQuery | undefined\n\n  if (pageIsDynamic) {\n    defaultRouteRegex = getNamedRouteRegex(page, {\n      prefixRouteKeys: false,\n    })\n    dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex)\n    defaultRouteMatches = dynamicRouteMatcher(page) as ParsedUrlQuery\n  }\n\n  function handleRewrites(\n    req: BaseNextRequest | IncomingMessage,\n    parsedUrl: UrlWithParsedQuery\n  ) {\n    const rewriteParams: Record<string, string> = {}\n    let fsPathname = parsedUrl.pathname\n\n    const matchesPage = () => {\n      const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '')\n      return (\n        fsPathnameNoSlash === removeTrailingSlash(page) ||\n        dynamicRouteMatcher?.(fsPathnameNoSlash)\n      )\n    }\n\n    const checkRewrite = (rewrite: DeepReadonly<Rewrite>): boolean => {\n      const matcher = getPathMatch(\n        rewrite.source + (trailingSlash ? '(/)?' : ''),\n        {\n          removeUnnamedParams: true,\n          strict: true,\n          sensitive: !!caseSensitive,\n        }\n      )\n\n      if (!parsedUrl.pathname) return false\n\n      let params = matcher(parsedUrl.pathname)\n\n      if ((rewrite.has || rewrite.missing) && params) {\n        const hasParams = matchHas(\n          req,\n          parsedUrl.query,\n          rewrite.has as Rewrite['has'],\n          rewrite.missing as Rewrite['missing']\n        )\n\n        if (hasParams) {\n          Object.assign(params, hasParams)\n        } else {\n          params = false\n        }\n      }\n\n      if (params) {\n        try {\n          // An interception rewrite might reference a dynamic param for a route the user\n          // is currently on, which wouldn't be extractable from the matched route params.\n          // This attempts to extract the dynamic params from the provided router state.\n          if (isInterceptionRouteRewrite(rewrite as Rewrite)) {\n            const stateHeader =\n              req.headers[NEXT_ROUTER_STATE_TREE_HEADER.toLowerCase()]\n\n            if (stateHeader) {\n              params = {\n                ...getSelectedParams(\n                  parseAndValidateFlightRouterState(stateHeader)\n                ),\n                ...params,\n              }\n            }\n          }\n        } catch (err) {\n          // this is a no-op -- we couldn't extract dynamic params from the provided router state,\n          // so we'll just use the params from the route matcher\n        }\n\n        const { parsedDestination, destQuery } = prepareDestination({\n          appendParamsToQuery: true,\n          destination: rewrite.destination,\n          params: params,\n          query: parsedUrl.query,\n        })\n\n        // if the rewrite destination is external break rewrite chain\n        if (parsedDestination.protocol) {\n          return true\n        }\n\n        Object.assign(rewriteParams, destQuery, params)\n        Object.assign(parsedUrl.query, parsedDestination.query)\n        delete (parsedDestination as any).query\n\n        // for each property in parsedUrl.query, if the value is parametrized (eg :foo), look up the value\n        // in rewriteParams and replace the parametrized value with the actual value\n        // this is used when the rewrite destination does not contain the original source param\n        // and so the value is still parametrized and needs to be replaced with the actual rewrite param\n        Object.entries(parsedUrl.query).forEach(([key, value]) => {\n          if (value && typeof value === 'string' && value.startsWith(':')) {\n            const paramName = value.slice(1)\n            const actualValue = rewriteParams[paramName]\n            if (actualValue) {\n              parsedUrl.query[key] = actualValue\n            }\n          }\n        })\n\n        Object.assign(parsedUrl, parsedDestination)\n\n        fsPathname = parsedUrl.pathname\n        if (!fsPathname) return false\n\n        if (basePath) {\n          fsPathname = fsPathname.replace(new RegExp(`^${basePath}`), '') || '/'\n        }\n\n        if (i18n) {\n          const result = normalizeLocalePath(fsPathname, i18n.locales)\n          fsPathname = result.pathname\n          parsedUrl.query.nextInternalLocale =\n            result.detectedLocale || params.nextInternalLocale\n        }\n\n        if (fsPathname === page) {\n          return true\n        }\n\n        if (pageIsDynamic && dynamicRouteMatcher) {\n          const dynamicParams = dynamicRouteMatcher(fsPathname)\n          if (dynamicParams) {\n            parsedUrl.query = {\n              ...parsedUrl.query,\n              ...dynamicParams,\n            }\n            return true\n          }\n        }\n      }\n      return false\n    }\n\n    for (const rewrite of rewrites.beforeFiles || []) {\n      checkRewrite(rewrite)\n    }\n\n    if (fsPathname !== page) {\n      let finished = false\n\n      for (const rewrite of rewrites.afterFiles || []) {\n        finished = checkRewrite(rewrite)\n        if (finished) break\n      }\n\n      if (!finished && !matchesPage()) {\n        for (const rewrite of rewrites.fallback || []) {\n          finished = checkRewrite(rewrite)\n          if (finished) break\n        }\n      }\n    }\n    return rewriteParams\n  }\n\n  function getParamsFromRouteMatches(routeMatchesHeader: string) {\n    // If we don't have a default route regex, we can't get params from route\n    // matches\n    if (!defaultRouteRegex) return null\n\n    const { groups, routeKeys } = defaultRouteRegex\n\n    const matcher = getRouteMatcher({\n      re: {\n        // Simulate a RegExp match from the \\`req.url\\` input\n        exec: (str: string) => {\n          // Normalize all the prefixed query params.\n          const obj: Record<string, string> = Object.fromEntries(\n            new URLSearchParams(str)\n          )\n          for (const [key, value] of Object.entries(obj)) {\n            const normalizedKey = normalizeNextQueryParam(key)\n            if (!normalizedKey) continue\n\n            obj[normalizedKey] = value\n            delete obj[key]\n          }\n\n          // Use all the named route keys.\n          const result = {} as RegExpExecArray\n          for (const keyName of Object.keys(routeKeys)) {\n            const paramName = routeKeys[keyName]\n\n            // If this param name is not a valid parameter name, then skip it.\n            if (!paramName) continue\n\n            const group = groups[paramName]\n            const value = obj[keyName]\n\n            // When we're missing a required param, we can't match the route.\n            if (!group.optional && !value) return null\n\n            result[group.pos] = value\n          }\n\n          return result\n        },\n      },\n      groups,\n    })\n\n    const routeMatches = matcher(routeMatchesHeader)\n    if (!routeMatches) return null\n\n    return routeMatches\n  }\n\n  function normalizeQueryParams(\n    query: Record<string, string | string[] | undefined>,\n    routeParamKeys: Set<string>\n  ) {\n    // this is used to pass query information in rewrites\n    // but should not be exposed in final query\n    delete query['nextInternalLocale']\n\n    for (const [key, value] of Object.entries(query)) {\n      const normalizedKey = normalizeNextQueryParam(key)\n      if (!normalizedKey) continue\n\n      // Remove the prefixed key from the query params because we want\n      // to consume it for the dynamic route matcher.\n      delete query[key]\n      routeParamKeys.add(normalizedKey)\n\n      if (typeof value === 'undefined') continue\n\n      query[normalizedKey] = Array.isArray(value)\n        ? value.map((v) => decodeQueryPathParameter(v))\n        : decodeQueryPathParameter(value)\n    }\n  }\n\n  return {\n    handleRewrites,\n    defaultRouteRegex,\n    dynamicRouteMatcher,\n    defaultRouteMatches,\n    normalizeQueryParams,\n    getParamsFromRouteMatches,\n    /**\n     * Normalize dynamic route params.\n     *\n     * @param query - The query params to normalize.\n     * @param ignoreMissingOptional - Whether to ignore missing optional params.\n     * @returns The normalized params and whether they are valid.\n     */\n    normalizeDynamicRouteParams: (\n      query: ParsedUrlQuery,\n      ignoreMissingOptional: boolean\n    ) => {\n      if (!defaultRouteRegex || !defaultRouteMatches) {\n        return { params: {}, hasValidParams: false }\n      }\n\n      return normalizeDynamicRouteParams(\n        query,\n        defaultRouteRegex,\n        defaultRouteMatches,\n        ignoreMissingOptional\n      )\n    },\n\n    normalizeCdnUrl: (\n      req: BaseNextRequest | IncomingMessage,\n      paramKeys: string[]\n    ) => normalizeCdnUrl(req, paramKeys),\n\n    interpolateDynamicPath: (\n      pathname: string,\n      params: Record<string, undefined | string | string[]>\n    ) => interpolateDynamicPath(pathname, params, defaultRouteRegex),\n\n    filterInternalQuery: (query: ParsedUrlQuery, paramKeys: string[]) =>\n      filterInternalQuery(query, paramKeys),\n  }\n}\n\nexport function getPreviouslyRevalidatedTags(\n  headers: IncomingHttpHeaders,\n  previewModeId: string | undefined\n): string[] {\n  return typeof headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' &&\n    headers[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] === previewModeId\n    ? headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',')\n    : []\n}\n","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: readonly DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","/**\n * strip _next/data/<build-id>/ prefix and .json suffix\n */\nexport function normalizeDataPath(pathname: string) {\n  pathname = pathname\n    .replace(/\\/_next\\/data\\/[^/]{1,}/, '')\n    .replace(/\\.json$/, '')\n\n  if (pathname === '/index') {\n    return '/'\n  }\n  return pathname\n}\n","/* eslint-disable no-redeclare */\nimport type { IncomingMessage } from 'http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { BaseNextRequest } from './base-http'\nimport type { CloneableBody } from './body-streams'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport type { ServerComponentsHmrCache } from './response-cache'\nimport type { PagesDevOverlayBridgeType } from '../next-devtools/userspace/pages/pages-dev-overlay-setup'\n\n// FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta')\n\nexport type NextIncomingMessage = (BaseNextRequest | IncomingMessage) & {\n  [NEXT_REQUEST_META]?: RequestMeta\n}\n\nexport interface RequestMeta {\n  /**\n   * The query that was used to make the request.\n   */\n  initQuery?: ParsedUrlQuery\n\n  /**\n   * The URL that was used to make the request.\n   */\n  initURL?: string\n\n  /**\n   * The protocol that was used to make the request.\n   */\n  initProtocol?: string\n\n  /**\n   * The body that was read from the request. This is used to allow the body to\n   * be read multiple times.\n   */\n  clonableBody?: CloneableBody\n\n  /**\n   * True when the request matched a locale domain that was configured in the\n   * next.config.js file.\n   */\n  isLocaleDomain?: boolean\n\n  /**\n   * True when the request had locale information stripped from the pathname\n   * part of the URL.\n   */\n  didStripLocale?: boolean\n\n  /**\n   * If the request had it's URL rewritten, this is the URL it was rewritten to.\n   */\n  rewroteURL?: string\n\n  /**\n   * The cookies that were added by middleware and were added to the response.\n   */\n  middlewareCookie?: string[]\n\n  /**\n   * The match on the request for a given route.\n   */\n  match?: RouteMatch\n\n  /**\n   * The incremental cache to use for the request.\n   */\n  incrementalCache?: any\n\n  /**\n   * The server components HMR cache, only for dev.\n   */\n  serverComponentsHmrCache?: ServerComponentsHmrCache\n\n  /**\n   * Equals the segment path that was used for the prefetch RSC request.\n   */\n  segmentPrefetchRSCRequest?: string\n\n  /**\n   * True when the request is for the prefetch flight data.\n   */\n  isPrefetchRSCRequest?: true\n\n  /**\n   * True when the request is for the flight data.\n   */\n  isRSCRequest?: true\n\n  /**\n   * A search param set by the Next.js client when performing RSC requests.\n   * Because some CDNs do not vary their cache entries on our custom headers,\n   * this search param represents a hash of the header values. For any cached\n   * RSC request, we should verify that the hash matches before responding.\n   * Otherwise this can lead to cache poisoning.\n   * TODO: Consider not using custom request headers at all, and instead encode\n   * everything into the search param.\n   */\n  cacheBustingSearchParam?: string\n\n  /**\n   * True when the request is for the `/_next/data` route using the pages\n   * router.\n   */\n  isNextDataReq?: true\n\n  /**\n   * Postponed state to use for resumption. If present it's assumed that the\n   * request is for a page that has postponed (there are no guarantees that the\n   * page actually has postponed though as it would incur an additional cache\n   * lookup).\n   */\n  postponed?: string\n\n  /**\n   * If provided, this will be called when a response cache entry was generated\n   * or looked up in the cache.\n   */\n  onCacheEntry?: (\n    cacheEntry: any,\n    requestMeta: any\n  ) => Promise<boolean | void> | boolean | void\n\n  /**\n   * The previous revalidate before rendering 404 page for notFound: true\n   */\n  notFoundRevalidate?: number | false\n\n  /**\n   * In development, the original source page that returned a 404.\n   */\n  developmentNotFoundSourcePage?: string\n\n  /**\n   * The path we routed to and should be invoked\n   */\n  invokePath?: string\n\n  /**\n   * The specific page output we should be matching\n   */\n  invokeOutput?: string\n\n  /**\n   * The status we are invoking the request with from routing\n   */\n  invokeStatus?: number\n\n  /**\n   * The routing error we are invoking with\n   */\n  invokeError?: Error\n\n  /**\n   * The query parsed for the invocation\n   */\n  invokeQuery?: Record<string, undefined | string | string[]>\n\n  /**\n   * Whether the request is a middleware invocation\n   */\n  middlewareInvoke?: boolean\n\n  /**\n   * Whether the request should render the fallback shell or not.\n   */\n  renderFallbackShell?: boolean\n\n  /**\n   * Whether the request is for the custom error page.\n   */\n  customErrorRender?: true\n\n  /**\n   * Whether to bubble up the NoFallbackError to the caller when a 404 is\n   * returned.\n   */\n  bubbleNoFallback?: true\n\n  /**\n   * True when the request had locale information inferred from the default\n   * locale.\n   */\n  localeInferredFromDefault?: true\n\n  /**\n   * The locale that was inferred or explicitly set for the request.\n   */\n  locale?: string\n\n  /**\n   * The default locale that was inferred or explicitly set for the request.\n   */\n  defaultLocale?: string\n\n  /**\n   * The project dir the server is running in\n   */\n  projectDir?: string\n\n  /**\n   * The dist directory the server is currently using\n   */\n  distDir?: string\n\n  /**\n   * Whether we are generating the fallback version of the page in dev mode\n   */\n  isIsrFallback?: boolean\n\n  /**\n   * The query after resolving routes\n   */\n  query?: ParsedUrlQuery\n\n  /**\n   * The params after resolving routes\n   */\n  params?: ParsedUrlQuery\n\n  /**\n   * The AMP validator to use in development\n   */\n  ampValidator?: (html: string, pathname: string) => Promise<void>\n\n  /**\n   * ErrorOverlay component to use in development for pages router\n   */\n  PagesErrorDebug?: PagesDevOverlayBridgeType\n\n  /**\n   * Whether server is in minimal mode (this will be replaced with more\n   * specific flags in future)\n   */\n  minimalMode?: boolean\n}\n\n/**\n * Gets the request metadata. If no key is provided, the entire metadata object\n * is returned.\n *\n * @param req the request to get the metadata from\n * @param key the key to get from the metadata (optional)\n * @returns the value for the key or the entire metadata object\n */\nexport function getRequestMeta(\n  req: NextIncomingMessage,\n  key?: undefined\n): RequestMeta\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key: K\n): RequestMeta[K]\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key?: K\n): RequestMeta | RequestMeta[K] {\n  const meta = req[NEXT_REQUEST_META] || {}\n  return typeof key === 'string' ? meta[key] : meta\n}\n\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */\nexport function setRequestMeta(req: NextIncomingMessage, meta: RequestMeta) {\n  req[NEXT_REQUEST_META] = meta\n  return meta\n}\n\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */\nexport function addRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K,\n  value: RequestMeta[K]\n) {\n  const meta = getRequestMeta(request)\n  meta[key] = value\n  return setRequestMeta(request, meta)\n}\n\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */\nexport function removeRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K\n) {\n  const meta = getRequestMeta(request)\n  delete meta[key]\n  return setRequestMeta(request, meta)\n}\n\ntype NextQueryMetadata = {\n  /**\n   * The `_rsc` query parameter used for cache busting to ensure that the RSC\n   * requests do not get cached by the browser explicitly.\n   */\n  [NEXT_RSC_UNION_QUERY]?: string\n}\n\nexport type NextParsedUrlQuery = ParsedUrlQuery &\n  NextQueryMetadata & {\n    amp?: '1'\n  }\n\nexport interface NextUrlWithParsedQuery extends UrlWithParsedQuery {\n  query: NextParsedUrlQuery\n}\n","import { ensureLeadingSlash } from './ensure-leading-slash'\nimport { isDynamicRoute } from '../router/utils'\nimport { NormalizeError } from '../utils'\n\n/**\n * Takes a page and transforms it into its file counterpart ensuring that the\n * output is normalized. Note this function is not idempotent because a page\n * `/index` can be referencing `/index/index.js` and `/index/index` could be\n * referencing `/index/index/index.js`. Examples:\n *  - `/` -> `/index`\n *  - `/index/foo` -> `/index/index/foo`\n *  - `/index` -> `/index/index`\n */\nexport function normalizePagePath(page: string): string {\n  const normalized =\n    /^\\/index(\\/|$)/.test(page) && !isDynamicRoute(page)\n      ? `/index${page}`\n      : page === '/'\n        ? '/index'\n        : ensureLeadingSlash(page)\n\n  if (process.env.NEXT_RUNTIME !== 'edge') {\n    const { posix } = require('path') as typeof import('path')\n    const resolvedPage = posix.normalize(normalized)\n    if (resolvedPage !== normalized) {\n      throw new NormalizeError(\n        `Requested and resolved page mismatch: ${normalized} ${resolvedPage}`\n      )\n    }\n  }\n\n  return normalized\n}\n","import type { PageExtensions } from '../../build/page-extensions-type'\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { isAppRouteRoute } from '../is-app-route-route'\n\nexport const STATIC_METADATA_IMAGES = {\n  icon: {\n    filename: 'icon',\n    extensions: ['ico', 'jpg', 'jpeg', 'png', 'svg'],\n  },\n  apple: {\n    filename: 'apple-icon',\n    extensions: ['jpg', 'jpeg', 'png'],\n  },\n  favicon: {\n    filename: 'favicon',\n    extensions: ['ico'],\n  },\n  openGraph: {\n    filename: 'opengraph-image',\n    extensions: ['jpg', 'jpeg', 'png', 'gif'],\n  },\n  twitter: {\n    filename: 'twitter-image',\n    extensions: ['jpg', 'jpeg', 'png', 'gif'],\n  },\n} as const\n\n// Match routes that are metadata routes, e.g. /sitemap.xml, /favicon.<ext>, /<icon>.<ext>, etc.\n// TODO-METADATA: support more metadata routes with more extensions\nexport const DEFAULT_METADATA_ROUTE_EXTENSIONS = ['js', 'jsx', 'ts', 'tsx']\n\n// Match the file extension with the dynamic multi-routes extensions\n// e.g. ([xml, js], null) -> can match `/sitemap.xml/route`, `sitemap.js/route`\n// e.g. ([png], [ts]) -> can match `/opengrapg-image.png`, `/opengraph-image.ts`\nexport const getExtensionRegexString = (\n  staticExtensions: readonly string[],\n  dynamicExtensions: readonly string[] | null\n) => {\n  // If there's no possible multi dynamic routes, will not match any <name>[].<ext> files\n  if (!dynamicExtensions || dynamicExtensions.length === 0) {\n    return `(\\\\.(?:${staticExtensions.join('|')}))`\n  }\n  return `(?:\\\\.(${staticExtensions.join('|')})|(\\\\.(${dynamicExtensions.join('|')})))`\n}\n\n/**\n * Determine if the file is a metadata route file entry\n * @param appDirRelativePath the relative file path to app/\n * @param pageExtensions the js extensions, such as ['js', 'jsx', 'ts', 'tsx']\n * @param strictlyMatchExtensions if it's true, match the file with page extension, otherwise match the file with default corresponding extension\n * @returns if the file is a metadata route file\n */\nexport function isMetadataRouteFile(\n  appDirRelativePath: string,\n  pageExtensions: PageExtensions,\n  strictlyMatchExtensions: boolean\n) {\n  // End with the extension or optional to have the extension\n  // When strictlyMatchExtensions is true, it's used for match file path;\n  // When strictlyMatchExtensions, the dynamic extension is skipped but\n  // static extension is kept, which is usually used for matching route path.\n  const trailingMatcher = (strictlyMatchExtensions ? '' : '?') + '$'\n  // Match the optional variants like /opengraph-image2, /icon-a102f4.png, etc.\n  const variantsMatcher = '\\\\d?'\n  // The -\\w{6} is the suffix that normalized from group routes;\n  const groupSuffix = strictlyMatchExtensions ? '' : '(-\\\\w{6})?'\n\n  const suffixMatcher = `${variantsMatcher}${groupSuffix}`\n\n  const metadataRouteFilesRegex = [\n    new RegExp(\n      `^[\\\\\\\\/]robots${getExtensionRegexString(\n        pageExtensions.concat('txt'),\n        null\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `^[\\\\\\\\/]manifest${getExtensionRegexString(\n        pageExtensions.concat('webmanifest', 'json'),\n        null\n      )}${trailingMatcher}`\n    ),\n    new RegExp(`^[\\\\\\\\/]favicon\\\\.ico$`),\n    new RegExp(\n      `[\\\\\\\\/]sitemap${getExtensionRegexString(['xml'], pageExtensions)}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.icon.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.icon.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.apple.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.apple.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.openGraph.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.openGraph.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.twitter.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.twitter.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n  ]\n\n  const normalizedAppDirRelativePath = normalizePathSep(appDirRelativePath)\n  const matched = metadataRouteFilesRegex.some((r) =>\n    r.test(normalizedAppDirRelativePath)\n  )\n\n  return matched\n}\n\n// Check if the route is a static metadata route, with /route suffix\n// e.g. /favicon.ico/route, /icon.png/route, etc.\n// But skip the text routes like robots.txt since they might also be dynamic.\n// Checking route path is not enough to determine if text routes is dynamic.\nexport function isStaticMetadataRoute(route: string) {\n  // extract ext with regex\n  const pathname = route.replace(/\\/route$/, '')\n\n  const matched =\n    isAppRouteRoute(route) &&\n    isMetadataRouteFile(pathname, [], true) &&\n    // These routes can either be built by static or dynamic entrypoints,\n    // so we assume they're dynamic\n    pathname !== '/robots.txt' &&\n    pathname !== '/manifest.webmanifest' &&\n    !pathname.endsWith('/sitemap.xml')\n\n  return matched\n}\n\n/**\n * Determine if a page or pathname is a metadata page.\n *\n * The input is a page or pathname, which can be with or without page suffix /foo/page or /foo.\n * But it will not contain the /route suffix.\n *\n * .e.g\n * /robots -> true\n * /sitemap -> true\n * /foo -> false\n */\nexport function isMetadataPage(page: string) {\n  const matched = !isAppRouteRoute(page) && isMetadataRouteFile(page, [], false)\n\n  return matched\n}\n\n/*\n * Determine if a Next.js route is a metadata route.\n * `route` will has a route suffix.\n *\n * e.g.\n * /app/robots/route -> true\n * /robots/route -> true\n * /sitemap/[__metadata_id__]/route -> true\n * /app/sitemap/page -> false\n * /icon-a102f4/route -> true\n */\nexport function isMetadataRoute(route: string): boolean {\n  let page = normalizeAppPath(route)\n    .replace(/^\\/?app\\//, '')\n    // Remove the dynamic route id\n    .replace('/[__metadata_id__]', '')\n    // Remove the /route suffix\n    .replace(/\\/route$/, '')\n\n  if (page[0] !== '/') page = '/' + page\n\n  const matched = isAppRouteRoute(route) && isMetadataRouteFile(page, [], false)\n\n  return matched\n}\n","/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */\nexport class DetachedPromise<T = any> {\n  public readonly resolve: (value: T | PromiseLike<T>) => void\n  public readonly reject: (reason: any) => void\n  public readonly promise: Promise<T>\n\n  constructor() {\n    let resolve: (value: T | PromiseLike<T>) => void\n    let reject: (reason: any) => void\n\n    // Create the promise and assign the resolvers to the object.\n    this.promise = new Promise<T>((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n\n    // We know that resolvers is defined because the Promise constructor runs\n    // synchronously.\n    this.resolve = resolve!\n    this.reject = reject!\n  }\n}\n","import type { SchedulerFn } from './scheduler'\n\nimport { DetachedPromise } from './detached-promise'\n\ntype CacheKeyFn<K, C extends string | number | null> = (\n  key: K\n) => PromiseLike<C> | C\n\ntype BatcherOptions<K, C extends string | number | null> = {\n  cacheKeyFn?: CacheKeyFn<K, C>\n  schedulerFn?: SchedulerFn<void>\n}\n\ntype WorkFn<V, C> = (\n  key: C,\n  resolve: (value: V | PromiseLike<V>) => void\n) => Promise<V>\n\n/**\n * A wrapper for a function that will only allow one call to the function to\n * execute at a time.\n */\nexport class Batcher<K, V, C extends string | number | null> {\n  private readonly pending = new Map<C, Promise<V>>()\n\n  protected constructor(\n    private readonly cacheKeyFn?: CacheKeyFn<K, C>,\n    /**\n     * A function that will be called to schedule the wrapped function to be\n     * executed. This defaults to a function that will execute the function\n     * immediately.\n     */\n    private readonly schedulerFn: SchedulerFn<void> = (fn) => fn()\n  ) {}\n\n  /**\n   * Creates a new instance of PendingWrapper. If the key extends a string or\n   * number, the key will be used as the cache key. If the key is an object, a\n   * cache key function must be provided.\n   */\n  public static create<K extends string | number | null, V>(\n    options?: BatcherOptions<K, K>\n  ): Batcher<K, V, K>\n  public static create<K, V, C extends string | number | null>(\n    options: BatcherOptions<K, C> &\n      Required<Pick<BatcherOptions<K, C>, 'cacheKeyFn'>>\n  ): Batcher<K, V, C>\n  public static create<K, V, C extends string | number | null>(\n    options?: BatcherOptions<K, C>\n  ): Batcher<K, V, C> {\n    return new Batcher<K, V, C>(options?.cacheKeyFn, options?.schedulerFn)\n  }\n\n  /**\n   * Wraps a function in a promise that will be resolved or rejected only once\n   * for a given key. This will allow multiple calls to the function to be\n   * made, but only one will be executed at a time. The result of the first\n   * call will be returned to all callers.\n   *\n   * @param key the key to use for the cache\n   * @param fn the function to wrap\n   * @returns a promise that resolves to the result of the function\n   */\n  public async batch(key: K, fn: WorkFn<V, C>): Promise<V> {\n    const cacheKey = (this.cacheKeyFn ? await this.cacheKeyFn(key) : key) as C\n    if (cacheKey === null) {\n      return fn(cacheKey, Promise.resolve)\n    }\n\n    const pending = this.pending.get(cacheKey)\n    if (pending) return pending\n\n    const { promise, resolve, reject } = new DetachedPromise<V>()\n    this.pending.set(cacheKey, promise)\n\n    this.schedulerFn(async () => {\n      try {\n        const result = await fn(cacheKey, resolve)\n\n        // Resolving a promise multiple times is a no-op, so we can safely\n        // resolve all pending promises with the same result.\n        resolve(result)\n      } catch (err) {\n        reject(err)\n      } finally {\n        this.pending.delete(cacheKey)\n      }\n    })\n\n    return promise\n  }\n}\n","export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = (cb: ScheduledFn<void>) => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = (cb: ScheduledFn<void>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type RenderResult from '../render-result'\nimport type { CacheControl, Revalidate } from '../lib/cache-control'\nimport type { RouteKind } from '../route-kind'\n\nexport interface ResponseCacheBase {\n  get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalCache\n      /**\n       * This is a hint to the cache to help it determine what kind of route\n       * this is so it knows where to look up the cache entry from. If not\n       * provided it will test the filesystem to check.\n       */\n      routeKind: RouteKind\n\n      /**\n       * True if this is a fallback request.\n       */\n      isFallback?: boolean\n\n      /**\n       * True if the route is enabled for PPR.\n       */\n      isRoutePPREnabled?: boolean\n    }\n  ): Promise<ResponseCacheEntry | null>\n}\n\n// The server components HMR cache might store other data as well in the future,\n// at which point this should be refactored to a discriminated union type.\nexport interface ServerComponentsHmrCache {\n  get(key: string): CachedFetchData | undefined\n  set(key: string, data: CachedFetchData): void\n}\n\nexport type CachedFetchData = {\n  headers: Record<string, string>\n  body: string\n  url: string\n  status?: number\n}\n\nexport const enum CachedRouteKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  REDIRECT = 'REDIRECT',\n  IMAGE = 'IMAGE',\n}\n\nexport interface CachedFetchValue {\n  kind: CachedRouteKind.FETCH\n  data: CachedFetchData\n  // tags are only present with file-system-cache\n  // fetch cache stores tags outside of cache entry\n  tags?: string[]\n  revalidate: number\n}\n\nexport interface CachedRedirectValue {\n  kind: CachedRouteKind.REDIRECT\n  props: Object\n}\n\nexport interface CachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  rscData: Buffer | undefined\n  status: number | undefined\n  postponed: string | undefined\n  headers: OutgoingHttpHeaders | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface CachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  pageData: Object\n  status: number | undefined\n  headers: OutgoingHttpHeaders | undefined\n}\n\nexport interface CachedRouteValue {\n  kind: CachedRouteKind.APP_ROUTE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  body: Buffer\n  status: number\n  headers: OutgoingHttpHeaders\n}\n\nexport interface CachedImageValue {\n  kind: CachedRouteKind.IMAGE\n  etag: string\n  upstreamEtag: string\n  buffer: Buffer\n  extension: string\n  isMiss?: boolean\n  isStale?: boolean\n}\n\nexport interface IncrementalCachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  rscData: Buffer | undefined\n  headers: OutgoingHttpHeaders | undefined\n  postponed: string | undefined\n  status: number | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface IncrementalCachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  pageData: Object\n  headers: OutgoingHttpHeaders | undefined\n  status: number | undefined\n}\n\nexport interface IncrementalResponseCacheEntry {\n  cacheControl?: CacheControl\n  /**\n   * timestamp in milliseconds to revalidate after\n   */\n  revalidateAfter?: Revalidate\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  isMiss?: boolean\n  value: Exclude<IncrementalCacheValue, CachedFetchValue> | null\n}\n\nexport interface IncrementalFetchCacheEntry {\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  value: CachedFetchValue\n}\n\nexport type IncrementalCacheEntry =\n  | IncrementalResponseCacheEntry\n  | IncrementalFetchCacheEntry\n\nexport type IncrementalCacheValue =\n  | CachedRedirectValue\n  | IncrementalCachedPageValue\n  | IncrementalCachedAppPageValue\n  | CachedImageValue\n  | CachedFetchValue\n  | CachedRouteValue\n\nexport type ResponseCacheValue =\n  | CachedRedirectValue\n  | CachedPageValue\n  | CachedAppPageValue\n  | CachedImageValue\n  | CachedRouteValue\n\nexport type ResponseCacheEntry = {\n  cacheControl?: CacheControl\n  value: ResponseCacheValue | null\n  isStale?: boolean | -1\n  isMiss?: boolean\n}\n\n/**\n * @param hasResolved whether the responseGenerator has resolved it's promise\n * @param previousCacheEntry the previous cache entry if it exists or the current\n */\nexport type ResponseGenerator = (state: {\n  hasResolved: boolean\n  previousCacheEntry?: IncrementalResponseCacheEntry | null\n  isRevalidating?: boolean\n  span?: any\n}) => Promise<ResponseCacheEntry | null>\n\nexport const enum IncrementalCacheKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  IMAGE = 'IMAGE',\n}\n\nexport interface GetIncrementalFetchCacheContext {\n  kind: IncrementalCacheKind.FETCH\n  revalidate?: Revalidate\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n  softTags?: string[]\n}\n\nexport interface GetIncrementalResponseCacheContext {\n  kind: Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH>\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback: boolean\n}\n\nexport interface SetIncrementalFetchCacheContext {\n  fetchCache: true\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n  isImplicitBuildTimeCache?: boolean\n}\n\nexport interface SetIncrementalResponseCacheContext {\n  fetchCache?: false\n  cacheControl?: CacheControl\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback?: boolean\n}\n\nexport interface IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n}\n\nexport interface IncrementalCache extends IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext\n  ): Promise<IncrementalFetchCacheEntry | null>\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: CachedFetchValue | null,\n    ctx: SetIncrementalFetchCacheContext\n  ): Promise<void>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n}\n","import { getTracer } from '../lib/trace/tracer'\nimport { AppRenderSpan } from '../lib/trace/constants'\nimport { DetachedPromise } from '../../lib/detached-promise'\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler'\nimport { ENCODED_TAGS } from './encoded-tags'\nimport {\n  indexOfUint8Array,\n  isEquivalentUint8Arrays,\n  removeFromUint8Array,\n} from './uint8array-helpers'\nimport { MISSING_ROOT_TAGS_ERROR } from '../../shared/lib/errors/constants'\nimport { insertBuildIdComment } from '../../shared/lib/segment-cache/output-export-prefetch-encoding'\n\nfunction voidCatch() {\n  // this catcher is designed to be used with pipeTo where we expect the underlying\n  // pipe implementation to forward errors but we don't want the pipeTo promise to reject\n  // and be unhandled\n}\n\nexport type ReactReadableStream = ReadableStream<Uint8Array> & {\n  allReady?: Promise<void> | undefined\n}\n\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder()\n\nexport function chainStreams<T>(\n  ...streams: ReadableStream<T>[]\n): ReadableStream<T> {\n  // We could encode this invariant in the arguments but current uses of this function pass\n  // use spread so it would be missed by\n  if (streams.length === 0) {\n    throw new Error('Invariant: chainStreams requires at least one stream')\n  }\n\n  // If we only have 1 stream we fast path it by returning just this stream\n  if (streams.length === 1) {\n    return streams[0]\n  }\n\n  const { readable, writable } = new TransformStream()\n\n  // We always initiate pipeTo immediately. We know we have at least 2 streams\n  // so we need to avoid closing the writable when this one finishes.\n  let promise = streams[0].pipeTo(writable, { preventClose: true })\n\n  let i = 1\n  for (; i < streams.length - 1; i++) {\n    const nextStream = streams[i]\n    promise = promise.then(() =>\n      nextStream.pipeTo(writable, { preventClose: true })\n    )\n  }\n\n  // We can omit the length check because we halted before the last stream and there\n  // is at least two streams so the lastStream here will always be defined\n  const lastStream = streams[i]\n  promise = promise.then(() => lastStream.pipeTo(writable))\n\n  // Catch any errors from the streams and ignore them, they will be handled\n  // by whatever is consuming the readable stream.\n  promise.catch(voidCatch)\n\n  return readable\n}\n\nexport function streamFromString(str: string): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(encoder.encode(str))\n      controller.close()\n    },\n  })\n}\n\nexport function streamFromBuffer(chunk: Buffer): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(chunk)\n      controller.close()\n    },\n  })\n}\n\nexport async function streamToBuffer(\n  stream: ReadableStream<Uint8Array>\n): Promise<Buffer> {\n  const reader = stream.getReader()\n  const chunks: Uint8Array[] = []\n\n  while (true) {\n    const { done, value } = await reader.read()\n    if (done) {\n      break\n    }\n\n    chunks.push(value)\n  }\n\n  return Buffer.concat(chunks)\n}\n\nexport async function streamToString(\n  stream: ReadableStream<Uint8Array>,\n  signal?: AbortSignal\n): Promise<string> {\n  const decoder = new TextDecoder('utf-8', { fatal: true })\n  let string = ''\n\n  for await (const chunk of stream) {\n    if (signal?.aborted) {\n      return string\n    }\n\n    string += decoder.decode(chunk, { stream: true })\n  }\n\n  string += decoder.decode()\n\n  return string\n}\n\nexport function createBufferedTransformStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let bufferedChunks: Array<Uint8Array> = []\n  let bufferByteLength: number = 0\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    // If we already have a pending flush, then return early.\n    if (pending) return\n\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        const chunk = new Uint8Array(bufferByteLength)\n        let copiedBytes = 0\n\n        for (let i = 0; i < bufferedChunks.length; i++) {\n          const bufferedChunk = bufferedChunks[i]\n          chunk.set(bufferedChunk, copiedBytes)\n          copiedBytes += bufferedChunk.byteLength\n        }\n        // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n        // and our bufferByteLength to prepare for the next round of buffered chunks\n        bufferedChunks.length = 0\n        bufferByteLength = 0\n        controller.enqueue(chunk)\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      // Combine the previous buffer with the new chunk.\n      bufferedChunks.push(chunk)\n      bufferByteLength += chunk.byteLength\n\n      // Flush the buffer to the controller.\n      flush(controller)\n    },\n    flush() {\n      if (!pending) return\n\n      return pending.promise\n    },\n  })\n}\n\nfunction createPrefetchCommentStream(\n  isBuildTimePrerendering: boolean,\n  buildId: string\n): TransformStream<Uint8Array, Uint8Array> {\n  // Insert an extra comment at the beginning of the HTML document. This must\n  // come after the DOCTYPE, which is inserted by React.\n  //\n  // The first chunk sent by React will contain the doctype. After that, we can\n  // pass through the rest of the chunks as-is.\n  let didTransformFirstChunk = false\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (isBuildTimePrerendering && !didTransformFirstChunk) {\n        didTransformFirstChunk = true\n        const decoder = new TextDecoder('utf-8', { fatal: true })\n        const chunkStr = decoder.decode(chunk, {\n          stream: true,\n        })\n        const updatedChunkStr = insertBuildIdComment(chunkStr, buildId)\n        controller.enqueue(encoder.encode(updatedChunkStr))\n        return\n      }\n      controller.enqueue(chunk)\n    },\n  })\n}\n\nexport function renderToInitialFizzStream({\n  ReactDOMServer,\n  element,\n  streamOptions,\n}: {\n  ReactDOMServer: {\n    renderToReadableStream: typeof import('react-dom/server').renderToReadableStream\n  }\n  element: React.ReactElement\n  streamOptions?: Parameters<typeof ReactDOMServer.renderToReadableStream>[1]\n}): Promise<ReactReadableStream> {\n  return getTracer().trace(AppRenderSpan.renderToReadableStream, async () =>\n    ReactDOMServer.renderToReadableStream(element, streamOptions)\n  )\n}\n\nfunction createMetadataTransformStream(\n  insert: () => Promise<string> | string\n): TransformStream<Uint8Array, Uint8Array> {\n  let chunkIndex = -1\n  let isMarkRemoved = false\n\n  return new TransformStream({\n    async transform(chunk, controller) {\n      let iconMarkIndex = -1\n      let closedHeadIndex = -1\n      chunkIndex++\n\n      if (isMarkRemoved) {\n        controller.enqueue(chunk)\n        return\n      }\n      let iconMarkLength = 0\n      // Only search for the closed head tag once\n      if (iconMarkIndex === -1) {\n        iconMarkIndex = indexOfUint8Array(chunk, ENCODED_TAGS.META.ICON_MARK)\n        if (iconMarkIndex === -1) {\n          controller.enqueue(chunk)\n          return\n        } else {\n          // When we found the `<meta name=\"«nxt-icon»\"` tag prefix, we will remove it from the chunk.\n          // Its close tag could either be `/>` or `>`, checking the next char to ensure we cover both cases.\n          iconMarkLength = ENCODED_TAGS.META.ICON_MARK.length\n          // Check if next char is /, this is for xml mode.\n          if (chunk[iconMarkIndex + iconMarkLength] === 47) {\n            iconMarkLength += 2\n          } else {\n            // The last char is `>`\n            iconMarkLength++\n          }\n        }\n      }\n\n      // Check if icon mark is inside <head> tag in the first chunk.\n      if (chunkIndex === 0) {\n        closedHeadIndex = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD)\n        if (iconMarkIndex !== -1) {\n          // The mark icon is located in the 1st chunk before the head tag.\n          // We do not need to insert the script tag in this case because it's in the head.\n          // Just remove the icon mark from the chunk.\n          if (iconMarkIndex < closedHeadIndex) {\n            const replaced = new Uint8Array(chunk.length - iconMarkLength)\n\n            // Remove the icon mark from the chunk.\n            replaced.set(chunk.subarray(0, iconMarkIndex))\n            replaced.set(\n              chunk.subarray(iconMarkIndex + iconMarkLength),\n              iconMarkIndex\n            )\n            chunk = replaced\n          } else {\n            // The icon mark is after the head tag, replace and insert the script tag at that position.\n            const insertion = await insert()\n            const encodedInsertion = encoder.encode(insertion)\n            const insertionLength = encodedInsertion.length\n            const replaced = new Uint8Array(\n              chunk.length - iconMarkLength + insertionLength\n            )\n            replaced.set(chunk.subarray(0, iconMarkIndex))\n            replaced.set(encodedInsertion, iconMarkIndex)\n            replaced.set(\n              chunk.subarray(iconMarkIndex + iconMarkLength),\n              iconMarkIndex + insertionLength\n            )\n            chunk = replaced\n          }\n          isMarkRemoved = true\n        }\n        // If there's no icon mark located, it will be handled later when if present in the following chunks.\n      } else {\n        // When it's appeared in the following chunks, we'll need to\n        // remove the mark and then insert the script tag at that position.\n        const insertion = await insert()\n        const encodedInsertion = encoder.encode(insertion)\n        const insertionLength = encodedInsertion.length\n        // Replace the icon mark with the hoist script or empty string.\n        const replaced = new Uint8Array(\n          chunk.length - iconMarkLength + insertionLength\n        )\n        // Set the first part of the chunk, before the icon mark.\n        replaced.set(chunk.subarray(0, iconMarkIndex))\n        // Set the insertion after the icon mark.\n        replaced.set(encodedInsertion, iconMarkIndex)\n\n        // Set the rest of the chunk after the icon mark.\n        replaced.set(\n          chunk.subarray(iconMarkIndex + iconMarkLength),\n          iconMarkIndex + insertionLength\n        )\n        chunk = replaced\n        isMarkRemoved = true\n      }\n      controller.enqueue(chunk)\n    },\n  })\n}\n\nfunction createHeadInsertionTransformStream(\n  insert: () => Promise<string>\n): TransformStream<Uint8Array, Uint8Array> {\n  let inserted = false\n\n  // We need to track if this transform saw any bytes because if it didn't\n  // we won't want to insert any server HTML at all\n  let hasBytes = false\n\n  return new TransformStream({\n    async transform(chunk, controller) {\n      hasBytes = true\n\n      const insertion = await insert()\n      if (inserted) {\n        if (insertion) {\n          const encodedInsertion = encoder.encode(insertion)\n          controller.enqueue(encodedInsertion)\n        }\n        controller.enqueue(chunk)\n      } else {\n        // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n        const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD)\n        // In fully static rendering or non PPR rendering cases:\n        // `/head>` will always be found in the chunk in first chunk rendering.\n        if (index !== -1) {\n          if (insertion) {\n            const encodedInsertion = encoder.encode(insertion)\n            // Get the total count of the bytes in the chunk and the insertion\n            // e.g.\n            // chunk = <head><meta charset=\"utf-8\"></head>\n            // insertion = <script>...</script>\n            // output = <head><meta charset=\"utf-8\"> [ <script>...</script> ] </head>\n            const insertedHeadContent = new Uint8Array(\n              chunk.length + encodedInsertion.length\n            )\n            // Append the first part of the chunk, before the head tag\n            insertedHeadContent.set(chunk.slice(0, index))\n            // Append the server inserted content\n            insertedHeadContent.set(encodedInsertion, index)\n            // Append the rest of the chunk\n            insertedHeadContent.set(\n              chunk.slice(index),\n              index + encodedInsertion.length\n            )\n            controller.enqueue(insertedHeadContent)\n          } else {\n            controller.enqueue(chunk)\n          }\n          inserted = true\n        } else {\n          // This will happens in PPR rendering during next start, when the page is partially rendered.\n          // When the page resumes, the head tag will be found in the middle of the chunk.\n          // Where we just need to append the insertion and chunk to the current stream.\n          // e.g.\n          // PPR-static: <head>...</head><body> [ resume content ] </body>\n          // PPR-resume: [ insertion ] [ rest content ]\n          if (insertion) {\n            controller.enqueue(encoder.encode(insertion))\n          }\n          controller.enqueue(chunk)\n          inserted = true\n        }\n      }\n    },\n    async flush(controller) {\n      // Check before closing if there's anything remaining to insert.\n      if (hasBytes) {\n        const insertion = await insert()\n        if (insertion) {\n          controller.enqueue(encoder.encode(insertion))\n        }\n      }\n    },\n  })\n}\n\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(\n  suffix: string\n): TransformStream<Uint8Array, Uint8Array> {\n  let flushed = false\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        controller.enqueue(encoder.encode(suffix))\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // If we've already flushed, we're done.\n      if (flushed) return\n\n      // Schedule the flush to happen.\n      flushed = true\n      flush(controller)\n    },\n    flush(controller) {\n      if (pending) return pending.promise\n      if (flushed) return\n\n      // Flush now.\n      controller.enqueue(encoder.encode(suffix))\n    },\n  })\n}\n\n// Merge two streams into one. Ensure the final transform stream is closed\n// when both are finished.\nfunction createMergedTransformStream(\n  stream: ReadableStream<Uint8Array>\n): TransformStream<Uint8Array, Uint8Array> {\n  let pull: Promise<void> | null = null\n  let donePulling = false\n\n  async function startPulling(controller: TransformStreamDefaultController) {\n    if (pull) {\n      return\n    }\n\n    const reader = stream.getReader()\n\n    // NOTE: streaming flush\n    // We are buffering here for the inlined data stream because the\n    // \"shell\" stream might be chunkenized again by the underlying stream\n    // implementation, e.g. with a specific high-water mark. To ensure it's\n    // the safe timing to pipe the data stream, this extra tick is\n    // necessary.\n\n    // We don't start reading until we've left the current Task to ensure\n    // that it's inserted after flushing the shell. Note that this implementation\n    // might get stale if impl details of Fizz change in the future.\n    await atLeastOneTask()\n\n    try {\n      while (true) {\n        const { done, value } = await reader.read()\n        if (done) {\n          donePulling = true\n          return\n        }\n\n        controller.enqueue(value)\n      }\n    } catch (err) {\n      controller.error(err)\n    }\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // Start the streaming if it hasn't already been started yet.\n      if (!pull) {\n        pull = startPulling(controller)\n      }\n    },\n    flush(controller) {\n      if (donePulling) {\n        return\n      }\n      return pull || startPulling(controller)\n    },\n  })\n}\n\nconst CLOSE_TAG = '</body></html>'\n\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */\nfunction createMoveSuffixStream(): TransformStream<Uint8Array, Uint8Array> {\n  let foundSuffix = false\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (foundSuffix) {\n        return controller.enqueue(chunk)\n      }\n\n      const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n      if (index > -1) {\n        foundSuffix = true\n\n        // If the whole chunk is the suffix, then don't write anything, it will\n        // be written in the flush.\n        if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n          return\n        }\n\n        // Write out the part before the suffix.\n        const before = chunk.slice(0, index)\n        controller.enqueue(before)\n\n        // In the case where the suffix is in the middle of the chunk, we need\n        // to split the chunk into two parts.\n        if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n          // Write out the part after the suffix.\n          const after = chunk.slice(\n            index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length\n          )\n          controller.enqueue(after)\n        }\n      } else {\n        controller.enqueue(chunk)\n      }\n    },\n    flush(controller) {\n      // Even if we didn't find the suffix, the HTML is not valid if we don't\n      // add it, so insert it at the end.\n      controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n    },\n  })\n}\n\nfunction createStripDocumentClosingTagsTransform(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  return new TransformStream({\n    transform(chunk, controller) {\n      // We rely on the assumption that chunks will never break across a code unit.\n      // This is reasonable because we currently concat all of React's output from a single\n      // flush into one chunk before streaming it forward which means the chunk will represent\n      // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n      // longer do this large buffered chunk\n      if (\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)\n      ) {\n        // the entire chunk is the closing tags; return without enqueueing anything.\n        return\n      }\n\n      // We assume these tags will go at together at the end of the document and that\n      // they won't appear anywhere else in the document. This is not really a safe assumption\n      // but until we revamp our streaming infra this is a performant way to string the tags\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY)\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML)\n\n      controller.enqueue(chunk)\n    },\n  })\n}\n\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */\nexport function createRootLayoutValidatorStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let foundHtml = false\n  let foundBody = false\n  return new TransformStream({\n    async transform(chunk, controller) {\n      // Peek into the streamed chunk to see if the tags are present.\n      if (\n        !foundHtml &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1\n      ) {\n        foundHtml = true\n      }\n\n      if (\n        !foundBody &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1\n      ) {\n        foundBody = true\n      }\n\n      controller.enqueue(chunk)\n    },\n    flush(controller) {\n      const missingTags: ('html' | 'body')[] = []\n      if (!foundHtml) missingTags.push('html')\n      if (!foundBody) missingTags.push('body')\n\n      if (!missingTags.length) return\n\n      controller.enqueue(\n        encoder.encode(\n          `<html id=\"__next_error__\">\n            <template\n              data-next-error-message=\"Missing ${missingTags\n                .map((c) => `<${c}>`)\n                .join(\n                  missingTags.length > 1 ? ' and ' : ''\n                )} tags in the root layout.\\nRead more at https://nextjs.org/docs/messages/missing-root-layout-tags\"\"\n              data-next-error-digest=\"${MISSING_ROOT_TAGS_ERROR}\"\n              data-next-error-stack=\"\"\n            ></template>\n          `\n        )\n      )\n    },\n  })\n}\n\nfunction chainTransformers<T>(\n  readable: ReadableStream<T>,\n  transformers: ReadonlyArray<TransformStream<T, T> | null>\n): ReadableStream<T> {\n  let stream = readable\n  for (const transformer of transformers) {\n    if (!transformer) continue\n\n    stream = stream.pipeThrough(transformer)\n  }\n  return stream\n}\n\nexport type ContinueStreamOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array> | undefined\n  isStaticGeneration: boolean\n  isBuildTimePrerendering: boolean\n  buildId: string\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n  validateRootLayout?: boolean\n  /**\n   * Suffix to inject after the buffered data, but before the close tags.\n   */\n  suffix?: string | undefined\n}\n\nexport async function continueFizzStream(\n  renderStream: ReactReadableStream,\n  {\n    suffix,\n    inlinedDataStream,\n    isStaticGeneration,\n    isBuildTimePrerendering,\n    buildId,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n    validateRootLayout,\n  }: ContinueStreamOptions\n): Promise<ReadableStream<Uint8Array>> {\n  // Suffix itself might contain close tags at the end, so we need to split it.\n  const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null\n\n  // If we're generating static HTML and there's an `allReady` promise on the\n  // stream, we need to wait for it to resolve before continuing.\n  if (isStaticGeneration && 'allReady' in renderStream) {\n    await renderStream.allReady\n  }\n\n  return chainTransformers(renderStream, [\n    // Buffer everything to avoid flushing too frequently\n    createBufferedTransformStream(),\n\n    // Add build id comment to start of the HTML document (in export mode)\n    createPrefetchCommentStream(isBuildTimePrerendering, buildId),\n\n    // Transform metadata\n    createMetadataTransformStream(getServerInsertedMetadata),\n\n    // Insert suffix content\n    suffixUnclosed != null && suffixUnclosed.length > 0\n      ? createDeferredSuffixStream(suffixUnclosed)\n      : null,\n\n    // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    inlinedDataStream ? createMergedTransformStream(inlinedDataStream) : null,\n\n    // Validate the root layout for missing html or body tags\n    validateRootLayout ? createRootLayoutValidatorStream() : null,\n\n    // Close tags should always be deferred to the end\n    createMoveSuffixStream(),\n\n    // Special head insertions\n    // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n    // hydration errors. Remove this once it's ready to be handled by react itself.\n    createHeadInsertionTransformStream(getServerInsertedHTML),\n  ])\n}\n\ntype ContinueDynamicPrerenderOptions = {\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n}\n\nexport async function continueDynamicPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  {\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueDynamicPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      .pipeThrough(createStripDocumentClosingTagsTransform())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n  )\n}\n\ntype ContinueStaticPrerenderOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n  isBuildTimePrerendering: boolean\n  buildId: string\n}\n\nexport async function continueStaticPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  {\n    inlinedDataStream,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n    isBuildTimePrerendering,\n    buildId,\n  }: ContinueStaticPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Add build id comment to start of the HTML document (in export mode)\n      .pipeThrough(\n        createPrefetchCommentStream(isBuildTimePrerendering, buildId)\n      )\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(createMergedTransformStream(inlinedDataStream))\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\ntype ContinueResumeOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n}\n\nexport async function continueDynamicHTMLResume(\n  renderStream: ReadableStream<Uint8Array>,\n  {\n    inlinedDataStream,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueResumeOptions\n) {\n  return (\n    renderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(createMergedTransformStream(inlinedDataStream))\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\nexport function createDocumentClosingStream(): ReadableStream<Uint8Array> {\n  return streamFromString(CLOSE_TAG)\n}\n","export const ENCODED_TAGS = {\n  // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n  OPENING: {\n    // <html\n    HTML: new Uint8Array([60, 104, 116, 109, 108]),\n    // <body\n    BODY: new Uint8Array([60, 98, 111, 100, 121]),\n  },\n  CLOSED: {\n    // </head>\n    HEAD: new Uint8Array([60, 47, 104, 101, 97, 100, 62]),\n    // </body>\n    BODY: new Uint8Array([60, 47, 98, 111, 100, 121, 62]),\n    // </html>\n    HTML: new Uint8Array([60, 47, 104, 116, 109, 108, 62]),\n    // </body></html>\n    BODY_AND_HTML: new Uint8Array([\n      60, 47, 98, 111, 100, 121, 62, 60, 47, 104, 116, 109, 108, 62,\n    ]),\n  },\n  META: {\n    // Only the match the prefix cause the suffix can be different wether it's xml compatible or not \">\" or \"/>\"\n    // <meta name=\"«nxt-icon»\"\n    // This is a special mark that will be replaced by the icon insertion script tag.\n    ICON_MARK: new Uint8Array([\n      60, 109, 101, 116, 97, 32, 110, 97, 109, 101, 61, 34, 194, 171, 110, 120,\n      116, 45, 105, 99, 111, 110, 194, 187, 34,\n    ]),\n  },\n} as const\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type { DomainLocale, I18NConfig } from '../config-shared'\nimport type { I18NProvider } from '../lib/i18n-provider'\n\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale'\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info'\nimport { getHostname } from '../../shared/lib/get-hostname'\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info'\n\ninterface Options {\n  base?: string | URL\n  headers?: OutgoingHttpHeaders\n  forceLocale?: boolean\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  i18nProvider?: I18NProvider\n}\n\nconst REGEX_LOCALHOST_HOSTNAME =\n  /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/\n\nfunction parseURL(url: string | URL, base?: string | URL) {\n  return new URL(\n    String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'),\n    base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost')\n  )\n}\n\nconst Internal = Symbol('NextURLInternal')\n\nexport class NextURL {\n  private [Internal]: {\n    basePath: string\n    buildId?: string\n    flightSearchParameters?: Record<string, string>\n    defaultLocale?: string\n    domainLocale?: DomainLocale\n    locale?: string\n    options: Options\n    trailingSlash?: boolean\n    url: URL\n  }\n\n  constructor(input: string | URL, base?: string | URL, opts?: Options)\n  constructor(input: string | URL, opts?: Options)\n  constructor(\n    input: string | URL,\n    baseOrOpts?: string | URL | Options,\n    opts?: Options\n  ) {\n    let base: undefined | string | URL\n    let options: Options\n\n    if (\n      (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts) ||\n      typeof baseOrOpts === 'string'\n    ) {\n      base = baseOrOpts\n      options = opts || {}\n    } else {\n      options = opts || baseOrOpts || {}\n    }\n\n    this[Internal] = {\n      url: parseURL(input, base ?? options.base),\n      options: options,\n      basePath: '',\n    }\n\n    this.analyze()\n  }\n\n  private analyze() {\n    const info = getNextPathnameInfo(this[Internal].url.pathname, {\n      nextConfig: this[Internal].options.nextConfig,\n      parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n      i18nProvider: this[Internal].options.i18nProvider,\n    })\n\n    const hostname = getHostname(\n      this[Internal].url,\n      this[Internal].options.headers\n    )\n    this[Internal].domainLocale = this[Internal].options.i18nProvider\n      ? this[Internal].options.i18nProvider.detectDomainLocale(hostname)\n      : detectDomainLocale(\n          this[Internal].options.nextConfig?.i18n?.domains,\n          hostname\n        )\n\n    const defaultLocale =\n      this[Internal].domainLocale?.defaultLocale ||\n      this[Internal].options.nextConfig?.i18n?.defaultLocale\n\n    this[Internal].url.pathname = info.pathname\n    this[Internal].defaultLocale = defaultLocale\n    this[Internal].basePath = info.basePath ?? ''\n    this[Internal].buildId = info.buildId\n    this[Internal].locale = info.locale ?? defaultLocale\n    this[Internal].trailingSlash = info.trailingSlash\n  }\n\n  private formatPathname() {\n    return formatNextPathnameInfo({\n      basePath: this[Internal].basePath,\n      buildId: this[Internal].buildId,\n      defaultLocale: !this[Internal].options.forceLocale\n        ? this[Internal].defaultLocale\n        : undefined,\n      locale: this[Internal].locale,\n      pathname: this[Internal].url.pathname,\n      trailingSlash: this[Internal].trailingSlash,\n    })\n  }\n\n  private formatSearch() {\n    return this[Internal].url.search\n  }\n\n  public get buildId() {\n    return this[Internal].buildId\n  }\n\n  public set buildId(buildId: string | undefined) {\n    this[Internal].buildId = buildId\n  }\n\n  public get locale() {\n    return this[Internal].locale ?? ''\n  }\n\n  public set locale(locale: string) {\n    if (\n      !this[Internal].locale ||\n      !this[Internal].options.nextConfig?.i18n?.locales.includes(locale)\n    ) {\n      throw new TypeError(\n        `The NextURL configuration includes no locale \"${locale}\"`\n      )\n    }\n\n    this[Internal].locale = locale\n  }\n\n  get defaultLocale() {\n    return this[Internal].defaultLocale\n  }\n\n  get domainLocale() {\n    return this[Internal].domainLocale\n  }\n\n  get searchParams() {\n    return this[Internal].url.searchParams\n  }\n\n  get host() {\n    return this[Internal].url.host\n  }\n\n  set host(value: string) {\n    this[Internal].url.host = value\n  }\n\n  get hostname() {\n    return this[Internal].url.hostname\n  }\n\n  set hostname(value: string) {\n    this[Internal].url.hostname = value\n  }\n\n  get port() {\n    return this[Internal].url.port\n  }\n\n  set port(value: string) {\n    this[Internal].url.port = value\n  }\n\n  get protocol() {\n    return this[Internal].url.protocol\n  }\n\n  set protocol(value: string) {\n    this[Internal].url.protocol = value\n  }\n\n  get href() {\n    const pathname = this.formatPathname()\n    const search = this.formatSearch()\n    return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`\n  }\n\n  set href(url: string) {\n    this[Internal].url = parseURL(url)\n    this.analyze()\n  }\n\n  get origin() {\n    return this[Internal].url.origin\n  }\n\n  get pathname() {\n    return this[Internal].url.pathname\n  }\n\n  set pathname(value: string) {\n    this[Internal].url.pathname = value\n  }\n\n  get hash() {\n    return this[Internal].url.hash\n  }\n\n  set hash(value: string) {\n    this[Internal].url.hash = value\n  }\n\n  get search() {\n    return this[Internal].url.search\n  }\n\n  set search(value: string) {\n    this[Internal].url.search = value\n  }\n\n  get password() {\n    return this[Internal].url.password\n  }\n\n  set password(value: string) {\n    this[Internal].url.password = value\n  }\n\n  get username() {\n    return this[Internal].url.username\n  }\n\n  set username(value: string) {\n    this[Internal].url.username = value\n  }\n\n  get basePath() {\n    return this[Internal].basePath\n  }\n\n  set basePath(value: string) {\n    this[Internal].basePath = value.startsWith('/') ? value : `/${value}`\n  }\n\n  toString() {\n    return this.href\n  }\n\n  toJSON() {\n    return this.href\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      href: this.href,\n      origin: this.origin,\n      protocol: this.protocol,\n      username: this.username,\n      password: this.password,\n      host: this.host,\n      hostname: this.hostname,\n      port: this.port,\n      pathname: this.pathname,\n      search: this.search,\n      searchParams: this.searchParams,\n      hash: this.hash,\n    }\n  }\n\n  clone() {\n    return new NextURL(String(this), this[Internal].options)\n  }\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: readonly string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","import type { I18NConfig } from '../../config-shared'\nimport { NextURL } from '../next-url'\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils'\nimport { RemovedUAError, RemovedPageError } from '../error'\nimport { RequestCookies } from './cookies'\n\nexport const INTERNALS = Symbol('internal request')\n\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */\nexport class NextRequest extends Request {\n  [INTERNALS]: {\n    cookies: RequestCookies\n    url: string\n    nextUrl: NextURL\n  }\n\n  constructor(input: URL | RequestInfo, init: RequestInit = {}) {\n    const url =\n      typeof input !== 'string' && 'url' in input ? input.url : String(input)\n\n    validateURL(url)\n\n    // node Request instance requires duplex option when a body\n    // is present or it errors, we don't handle this for\n    // Request being passed in since it would have already\n    // errored if this wasn't configured\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      if (init.body && init.duplex !== 'half') {\n        init.duplex = 'half'\n      }\n    }\n\n    if (input instanceof Request) super(input, init)\n    else super(url, init)\n\n    const nextUrl = new NextURL(url, {\n      headers: toNodeOutgoingHttpHeaders(this.headers),\n      nextConfig: init.nextConfig,\n    })\n    this[INTERNALS] = {\n      cookies: new RequestCookies(this.headers),\n      nextUrl,\n      url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        ? url\n        : nextUrl.toString(),\n    }\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      cookies: this.cookies,\n      nextUrl: this.nextUrl,\n      url: this.url,\n      // rest of props come from Request\n      bodyUsed: this.bodyUsed,\n      cache: this.cache,\n      credentials: this.credentials,\n      destination: this.destination,\n      headers: Object.fromEntries(this.headers),\n      integrity: this.integrity,\n      keepalive: this.keepalive,\n      method: this.method,\n      mode: this.mode,\n      redirect: this.redirect,\n      referrer: this.referrer,\n      referrerPolicy: this.referrerPolicy,\n      signal: this.signal,\n    }\n  }\n\n  public get cookies() {\n    return this[INTERNALS].cookies\n  }\n\n  public get nextUrl() {\n    return this[INTERNALS].nextUrl\n  }\n\n  /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */\n  public get page() {\n    throw new RemovedPageError()\n  }\n\n  /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */\n  public get ua() {\n    throw new RemovedUAError()\n  }\n\n  public get url() {\n    return this[INTERNALS].url\n  }\n}\n\nexport interface RequestInit extends globalThis.RequestInit {\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  signal?: AbortSignal\n  // see https://github.com/whatwg/fetch/pull/1457\n  duplex?: 'half'\n}\n","import type { BaseNextRequest } from '../../../base-http'\nimport type { NodeNextRequest } from '../../../base-http/node'\nimport type { WebNextRequest } from '../../../base-http/web'\nimport type { Writable } from 'node:stream'\n\nimport { getRequestMeta } from '../../../request-meta'\nimport { fromNodeOutgoingHttpHeaders } from '../../utils'\nimport { NextRequest } from '../request'\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers'\n\nexport const ResponseAbortedName = 'ResponseAborted'\nexport class ResponseAborted extends Error {\n  public readonly name = ResponseAbortedName\n}\n\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */\nexport function createAbortController(response: Writable): AbortController {\n  const controller = new AbortController()\n\n  // If `finish` fires first, then `res.end()` has been called and the close is\n  // just us finishing the stream on our side. If `close` fires first, then we\n  // know the client disconnected before we finished.\n  response.once('close', () => {\n    if (response.writableFinished) return\n\n    controller.abort(new ResponseAborted())\n  })\n\n  return controller\n}\n\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */\nexport function signalFromNodeResponse(response: Writable): AbortSignal {\n  const { errored, destroyed } = response\n  if (errored || destroyed) {\n    return AbortSignal.abort(errored ?? new ResponseAborted())\n  }\n\n  const { signal } = createAbortController(response)\n  return signal\n}\n\nexport class NextRequestAdapter {\n  public static fromBaseNextRequest(\n    request: BaseNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME === 'edge' &&\n      isWebNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromWebNextRequest(request)\n    } else if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME !== 'edge' &&\n      isNodeNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromNodeNextRequest(request, signal)\n    } else {\n      throw new Error('Invariant: Unsupported NextRequest type')\n    }\n  }\n\n  public static fromNodeNextRequest(\n    request: NodeNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: BodyInit | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n      // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n      body = request.body\n    }\n\n    let url: URL\n    if (request.url.startsWith('http')) {\n      url = new URL(request.url)\n    } else {\n      // Grab the full URL from the request metadata.\n      const base = getRequestMeta(request, 'initURL')\n      if (!base || !base.startsWith('http')) {\n        // Because the URL construction relies on the fact that the URL provided\n        // is absolute, we need to provide a base URL. We can't use the request\n        // URL because it's relative, so we use a dummy URL instead.\n        url = new URL(request.url, 'http://n')\n      } else {\n        url = new URL(request.url, base)\n      }\n    }\n\n    return new NextRequest(url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n\n  public static fromWebNextRequest(request: WebNextRequest): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: ReadableStream | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD') {\n      body = request.body\n    }\n\n    return new NextRequest(request.url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal: request.request.signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(request.request.signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n}\n","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/\n\n// eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */\n\nenum BaseServerSpan {\n  handleRequest = 'BaseServer.handleRequest',\n  run = 'BaseServer.run',\n  pipe = 'BaseServer.pipe',\n  getStaticHTML = 'BaseServer.getStaticHTML',\n  render = 'BaseServer.render',\n  renderToResponseWithComponents = 'BaseServer.renderToResponseWithComponents',\n  renderToResponse = 'BaseServer.renderToResponse',\n  renderToHTML = 'BaseServer.renderToHTML',\n  renderError = 'BaseServer.renderError',\n  renderErrorToResponse = 'BaseServer.renderErrorToResponse',\n  renderErrorToHTML = 'BaseServer.renderErrorToHTML',\n  render404 = 'BaseServer.render404',\n}\n\nenum LoadComponentsSpan {\n  loadDefaultErrorComponents = 'LoadComponents.loadDefaultErrorComponents',\n  loadComponents = 'LoadComponents.loadComponents',\n}\n\nenum NextServerSpan {\n  getRequestHandler = 'NextServer.getRequestHandler',\n  getServer = 'NextServer.getServer',\n  getServerRequestHandler = 'NextServer.getServerRequestHandler',\n  createServer = 'createServer.createServer',\n}\n\nenum NextNodeServerSpan {\n  compression = 'NextNodeServer.compression',\n  getBuildId = 'NextNodeServer.getBuildId',\n  createComponentTree = 'NextNodeServer.createComponentTree',\n  clientComponentLoading = 'NextNodeServer.clientComponentLoading',\n  getLayoutOrPageModule = 'NextNodeServer.getLayoutOrPageModule',\n  generateStaticRoutes = 'NextNodeServer.generateStaticRoutes',\n  generateFsStaticRoutes = 'NextNodeServer.generateFsStaticRoutes',\n  generatePublicRoutes = 'NextNodeServer.generatePublicRoutes',\n  generateImageRoutes = 'NextNodeServer.generateImageRoutes.route',\n  sendRenderResult = 'NextNodeServer.sendRenderResult',\n  proxyRequest = 'NextNodeServer.proxyRequest',\n  runApi = 'NextNodeServer.runApi',\n  render = 'NextNodeServer.render',\n  renderHTML = 'NextNodeServer.renderHTML',\n  imageOptimizer = 'NextNodeServer.imageOptimizer',\n  getPagePath = 'NextNodeServer.getPagePath',\n  getRoutesManifest = 'NextNodeServer.getRoutesManifest',\n  findPageComponents = 'NextNodeServer.findPageComponents',\n  getFontManifest = 'NextNodeServer.getFontManifest',\n  getServerComponentManifest = 'NextNodeServer.getServerComponentManifest',\n  getRequestHandler = 'NextNodeServer.getRequestHandler',\n  renderToHTML = 'NextNodeServer.renderToHTML',\n  renderError = 'NextNodeServer.renderError',\n  renderErrorToHTML = 'NextNodeServer.renderErrorToHTML',\n  render404 = 'NextNodeServer.render404',\n  startResponse = 'NextNodeServer.startResponse',\n\n  // nested inner span, does not require parent scope name\n  route = 'route',\n  onProxyReq = 'onProxyReq',\n  apiResolver = 'apiResolver',\n  internalFetch = 'internalFetch',\n}\n\nenum StartServerSpan {\n  startServer = 'startServer.startServer',\n}\n\nenum RenderSpan {\n  getServerSideProps = 'Render.getServerSideProps',\n  getStaticProps = 'Render.getStaticProps',\n  renderToString = 'Render.renderToString',\n  renderDocument = 'Render.renderDocument',\n  createBodyResult = 'Render.createBodyResult',\n}\n\nenum AppRenderSpan {\n  renderToString = 'AppRender.renderToString',\n  renderToReadableStream = 'AppRender.renderToReadableStream',\n  getBodyResult = 'AppRender.getBodyResult',\n  fetch = 'AppRender.fetch',\n}\n\nenum RouterSpan {\n  executeRoute = 'Router.executeRoute',\n}\n\nenum NodeSpan {\n  runHandler = 'Node.runHandler',\n}\n\nenum AppRouteRouteHandlersSpan {\n  runHandler = 'AppRouteRouteHandlers.runHandler',\n}\n\nenum ResolveMetadataSpan {\n  generateMetadata = 'ResolveMetadata.generateMetadata',\n  generateViewport = 'ResolveMetadata.generateViewport',\n}\n\nenum MiddlewareSpan {\n  execute = 'Middleware.execute',\n}\n\ntype SpanTypes =\n  | `${BaseServerSpan}`\n  | `${LoadComponentsSpan}`\n  | `${NextServerSpan}`\n  | `${StartServerSpan}`\n  | `${NextNodeServerSpan}`\n  | `${RenderSpan}`\n  | `${RouterSpan}`\n  | `${AppRenderSpan}`\n  | `${NodeSpan}`\n  | `${AppRouteRouteHandlersSpan}`\n  | `${ResolveMetadataSpan}`\n  | `${MiddlewareSpan}`\n\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n  MiddlewareSpan.execute,\n  BaseServerSpan.handleRequest,\n  RenderSpan.getServerSideProps,\n  RenderSpan.getStaticProps,\n  AppRenderSpan.fetch,\n  AppRenderSpan.getBodyResult,\n  RenderSpan.renderDocument,\n  NodeSpan.runHandler,\n  AppRouteRouteHandlersSpan.runHandler,\n  ResolveMetadataSpan.generateMetadata,\n  ResolveMetadataSpan.generateViewport,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.getLayoutOrPageModule,\n  NextNodeServerSpan.startResponse,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\nexport {\n  BaseServerSpan,\n  LoadComponentsSpan,\n  NextServerSpan,\n  NextNodeServerSpan,\n  StartServerSpan,\n  RenderSpan,\n  RouterSpan,\n  AppRenderSpan,\n  NodeSpan,\n  AppRouteRouteHandlersSpan,\n  ResolveMetadataSpan,\n  MiddlewareSpan,\n}\n\nexport type { SpanTypes }\n","import type { AppPageModule } from './route-modules/app-page/module'\n\n// Combined load times for loading client components\nlet clientComponentLoadStart = 0\nlet clientComponentLoadTimes = 0\nlet clientComponentLoadCount = 0\n\nexport function wrapClientComponentLoader(\n  ComponentMod: AppPageModule\n): AppPageModule['__next_app__'] {\n  if (!('performance' in globalThis)) {\n    return ComponentMod.__next_app__\n  }\n\n  return {\n    require: (...args) => {\n      const startTime = performance.now()\n\n      if (clientComponentLoadStart === 0) {\n        clientComponentLoadStart = startTime\n      }\n\n      try {\n        clientComponentLoadCount += 1\n        return ComponentMod.__next_app__.require(...args)\n      } finally {\n        clientComponentLoadTimes += performance.now() - startTime\n      }\n    },\n    loadChunk: (...args) => {\n      const startTime = performance.now()\n      const result = ComponentMod.__next_app__.loadChunk(...args)\n      // Avoid wrapping `loadChunk`'s result in an extra promise in case something like React depends on its identity.\n      // We only need to know when it's settled.\n      result.finally(() => {\n        clientComponentLoadTimes += performance.now() - startTime\n      })\n      return result\n    },\n  }\n}\n\nexport function getClientComponentLoaderMetrics(\n  options: { reset?: boolean } = {}\n) {\n  const metrics =\n    clientComponentLoadStart === 0\n      ? undefined\n      : {\n          clientComponentLoadStart,\n          clientComponentLoadTimes,\n          clientComponentLoadCount,\n        }\n\n  if (options.reset) {\n    clientComponentLoadStart = 0\n    clientComponentLoadTimes = 0\n    clientComponentLoadCount = 0\n  }\n\n  return metrics\n}\n","import type { ServerResponse } from 'node:http'\n\nimport {\n  ResponseAbortedName,\n  createAbortController,\n} from './web/spec-extension/adapters/next-request'\nimport { DetachedPromise } from '../lib/detached-promise'\nimport { getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger'\n\nexport function isAbortError(e: any): e is Error & { name: 'AbortError' } {\n  return e?.name === 'AbortError' || e?.name === ResponseAbortedName\n}\n\nfunction createWriterFromResponse(\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n): WritableStream<Uint8Array> {\n  let started = false\n\n  // Create a promise that will resolve once the response has drained. See\n  // https://nodejs.org/api/stream.html#stream_event_drain\n  let drained = new DetachedPromise<void>()\n  function onDrain() {\n    drained.resolve()\n  }\n  res.on('drain', onDrain)\n\n  // If the finish event fires, it means we shouldn't block and wait for the\n  // drain event.\n  res.once('close', () => {\n    res.off('drain', onDrain)\n    drained.resolve()\n  })\n\n  // Create a promise that will resolve once the response has finished. See\n  // https://nodejs.org/api/http.html#event-finish_1\n  const finished = new DetachedPromise<void>()\n  res.once('finish', () => {\n    finished.resolve()\n  })\n\n  // Create a writable stream that will write to the response.\n  return new WritableStream<Uint8Array>({\n    write: async (chunk) => {\n      // You'd think we'd want to use `start` instead of placing this in `write`\n      // but this ensures that we don't actually flush the headers until we've\n      // started writing chunks.\n      if (!started) {\n        started = true\n\n        if (\n          'performance' in globalThis &&\n          process.env.NEXT_OTEL_PERFORMANCE_PREFIX\n        ) {\n          const metrics = getClientComponentLoaderMetrics()\n          if (metrics) {\n            performance.measure(\n              `${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`,\n              {\n                start: metrics.clientComponentLoadStart,\n                end:\n                  metrics.clientComponentLoadStart +\n                  metrics.clientComponentLoadTimes,\n              }\n            )\n          }\n        }\n\n        res.flushHeaders()\n        getTracer().trace(\n          NextNodeServerSpan.startResponse,\n          {\n            spanName: 'start response',\n          },\n          () => undefined\n        )\n      }\n\n      try {\n        const ok = res.write(chunk)\n\n        // Added by the `compression` middleware, this is a function that will\n        // flush the partially-compressed response to the client.\n        if ('flush' in res && typeof res.flush === 'function') {\n          res.flush()\n        }\n\n        // If the write returns false, it means there's some backpressure, so\n        // wait until it's streamed before continuing.\n        if (!ok) {\n          await drained.promise\n\n          // Reset the drained promise so that we can wait for the next drain event.\n          drained = new DetachedPromise<void>()\n        }\n      } catch (err) {\n        res.end()\n        throw new Error('failed to write chunk to response', { cause: err })\n      }\n    },\n    abort: (err) => {\n      if (res.writableFinished) return\n\n      res.destroy(err)\n    },\n    close: async () => {\n      // if a waitUntil promise was passed, wait for it to resolve before\n      // ending the response.\n      if (waitUntilForEnd) {\n        await waitUntilForEnd\n      }\n\n      if (res.writableFinished) return\n\n      res.end()\n      return finished.promise\n    },\n  })\n}\n\nexport async function pipeToNodeResponse(\n  readable: ReadableStream<Uint8Array>,\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n) {\n  try {\n    // If the response has already errored, then just return now.\n    const { errored, destroyed } = res\n    if (errored || destroyed) return\n\n    // Create a new AbortController so that we can abort the readable if the\n    // client disconnects.\n    const controller = createAbortController(res)\n\n    const writer = createWriterFromResponse(res, waitUntilForEnd)\n\n    await readable.pipeTo(writer, { signal: controller.signal })\n  } catch (err: any) {\n    // If this isn't related to an abort error, re-throw it.\n    if (isAbortError(err)) return\n\n    throw new Error('failed to pipe response', { cause: err })\n  }\n}\n","import type { OutgoingHttpHeaders, ServerResponse } from 'http'\nimport type { CacheControl } from './lib/cache-control'\nimport type { FetchMetrics } from './base-http'\n\nimport {\n  chainStreams,\n  streamFromBuffer,\n  streamFromString,\n  streamToBuffer,\n  streamToString,\n} from './stream-utils/node-web-streams-helper'\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable'\nimport type { RenderResumeDataCache } from './resume-data-cache/resume-data-cache'\n\ntype ContentTypeOption = string | undefined\n\nexport type AppPageRenderResultMetadata = {\n  flightData?: Buffer\n  cacheControl?: CacheControl\n  staticBailoutInfo?: {\n    stack?: string\n    description?: string\n  }\n\n  /**\n   * The postponed state if the render had postponed and needs to be resumed.\n   */\n  postponed?: string\n\n  /**\n   * The headers to set on the response that were added by the render.\n   */\n  headers?: OutgoingHttpHeaders\n  statusCode?: number\n  fetchTags?: string\n  fetchMetrics?: FetchMetrics\n\n  segmentData?: Map<string, Buffer>\n\n  /**\n   * In development, the resume data cache is warmed up before the render. This\n   * is attached to the metadata so that it can be used during the render. When\n   * prerendering, the filled resume data cache is also attached to the metadata\n   * so that it can be used when prerendering matching fallback shells.\n   */\n  renderResumeDataCache?: RenderResumeDataCache\n}\n\nexport type PagesRenderResultMetadata = {\n  pageData?: any\n  cacheControl?: CacheControl\n  assetQueryString?: string\n  isNotFound?: boolean\n  isRedirect?: boolean\n}\n\nexport type StaticRenderResultMetadata = {}\n\nexport type RenderResultMetadata = AppPageRenderResultMetadata &\n  PagesRenderResultMetadata &\n  StaticRenderResultMetadata\n\nexport type RenderResultResponse =\n  | ReadableStream<Uint8Array>[]\n  | ReadableStream<Uint8Array>\n  | string\n  | Buffer\n  | null\n\nexport type RenderResultOptions<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> = {\n  contentType?: ContentTypeOption\n  waitUntil?: Promise<unknown>\n  metadata: Metadata\n}\n\nexport default class RenderResult<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> {\n  /**\n   * The detected content type for the response. This is used to set the\n   * `Content-Type` header.\n   */\n  public readonly contentType: ContentTypeOption\n\n  /**\n   * The metadata for the response. This is used to set the revalidation times\n   * and other metadata.\n   */\n  public readonly metadata: Readonly<Metadata>\n\n  /**\n   * The response itself. This can be a string, a stream, or null. If it's a\n   * string, then it's a static response. If it's a stream, then it's a\n   * dynamic response. If it's null, then the response was not found or was\n   * already sent.\n   */\n  private response: RenderResultResponse\n\n  /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @returns a new RenderResult instance\n   */\n  public static fromStatic(value: string | Buffer) {\n    return new RenderResult<StaticRenderResultMetadata>(value, { metadata: {} })\n  }\n\n  private readonly waitUntil?: Promise<unknown>\n\n  constructor(\n    response: RenderResultResponse,\n    { contentType, waitUntil, metadata }: RenderResultOptions<Metadata>\n  ) {\n    this.response = response\n    this.contentType = contentType\n    this.metadata = metadata\n    this.waitUntil = waitUntil\n  }\n\n  public assignMetadata(metadata: Metadata) {\n    Object.assign(this.metadata, metadata)\n  }\n\n  /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */\n  public get isNull(): boolean {\n    return this.response === null\n  }\n\n  /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */\n  public get isDynamic(): boolean {\n    return typeof this.response !== 'string'\n  }\n\n  public toUnchunkedBuffer(stream?: false): Buffer\n  public toUnchunkedBuffer(stream: true): Promise<Buffer>\n  public toUnchunkedBuffer(stream = false): Promise<Buffer> | Buffer {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be unchunked')\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new Error(\n          'Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToBuffer(this.readable)\n    }\n\n    return Buffer.from(this.response)\n  }\n\n  /**\n   * Returns the response if it is a string. If the page was dynamic, this will\n   * return a promise if the `stream` option is true, or it will throw an error.\n   *\n   * @param stream Whether or not to return a promise if the response is dynamic\n   * @returns The response as a string\n   */\n  public toUnchunkedString(stream?: false): string\n  public toUnchunkedString(stream: true): Promise<string>\n  public toUnchunkedString(stream = false): Promise<string> | string {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be unchunked')\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new Error(\n          'Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToString(this.readable)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Returns the response if it is a stream, or throws an error if it is a\n   * string.\n   */\n  private get readable(): ReadableStream<Uint8Array> {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be streamed')\n    }\n    if (typeof this.response === 'string') {\n      throw new Error('Invariant: static responses cannot be streamed')\n    }\n\n    if (Buffer.isBuffer(this.response)) {\n      return streamFromBuffer(this.response)\n    }\n\n    // If the response is an array of streams, then chain them together.\n    if (Array.isArray(this.response)) {\n      return chainStreams(...this.response)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */\n  public chain(readable: ReadableStream<Uint8Array>) {\n    if (this.response === null) {\n      throw new Error('Invariant: response is null. This is a bug in Next.js')\n    }\n\n    // If the response is not an array of streams already, make it one.\n    let responses: ReadableStream<Uint8Array>[]\n    if (typeof this.response === 'string') {\n      responses = [streamFromString(this.response)]\n    } else if (Array.isArray(this.response)) {\n      responses = this.response\n    } else if (Buffer.isBuffer(this.response)) {\n      responses = [streamFromBuffer(this.response)]\n    } else {\n      responses = [this.response]\n    }\n\n    // Add the new stream to the array.\n    responses.push(readable)\n\n    // Update the response.\n    this.response = responses\n  }\n\n  /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */\n  public async pipeTo(writable: WritableStream<Uint8Array>): Promise<void> {\n    try {\n      await this.readable.pipeTo(writable, {\n        // We want to close the writable stream ourselves so that we can wait\n        // for the waitUntil promise to resolve before closing it. If an error\n        // is encountered, we'll abort the writable stream if we swallowed the\n        // error.\n        preventClose: true,\n      })\n\n      // If there is a waitUntil promise, wait for it to resolve before\n      // closing the writable stream.\n      if (this.waitUntil) await this.waitUntil\n\n      // Close the writable stream.\n      await writable.close()\n    } catch (err) {\n      // If this is an abort error, we should abort the writable stream (as we\n      // took ownership of it when we started piping). We don't need to re-throw\n      // because we handled the error.\n      if (isAbortError(err)) {\n        // Abort the writable stream if an error is encountered.\n        await writable.abort(err)\n\n        return\n      }\n\n      // We're not aborting the writer here as when this method throws it's not\n      // clear as to how so the caller should assume it's their responsibility\n      // to clean up the writer.\n      throw err\n    }\n  }\n\n  /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */\n  public async pipeToNodeResponse(res: ServerResponse) {\n    await pipeToNodeResponse(this.readable, res, this.waitUntil)\n  }\n}\n","export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n","import {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedAppPageValue,\n  type CachedPageValue,\n  type IncrementalResponseCacheEntry,\n  type ResponseCacheEntry,\n} from './types'\n\nimport RenderResult from '../render-result'\nimport { RouteKind } from '../route-kind'\n\nexport async function fromResponseCacheEntry(\n  cacheEntry: ResponseCacheEntry\n): Promise<IncrementalResponseCacheEntry> {\n  return {\n    ...cacheEntry,\n    value:\n      cacheEntry.value?.kind === CachedRouteKind.PAGES\n        ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n          }\n        : cacheEntry.value?.kind === CachedRouteKind.APP_PAGE\n          ? {\n              kind: CachedRouteKind.APP_PAGE,\n              html: await cacheEntry.value.html.toUnchunkedString(true),\n              postponed: cacheEntry.value.postponed,\n              rscData: cacheEntry.value.rscData,\n              headers: cacheEntry.value.headers,\n              status: cacheEntry.value.status,\n              segmentData: cacheEntry.value.segmentData,\n            }\n          : cacheEntry.value,\n  }\n}\n\nexport async function toResponseCacheEntry(\n  response: IncrementalResponseCacheEntry | null\n): Promise<ResponseCacheEntry | null> {\n  if (!response) return null\n\n  return {\n    isMiss: response.isMiss,\n    isStale: response.isStale,\n    cacheControl: response.cacheControl,\n    value:\n      response.value?.kind === CachedRouteKind.PAGES\n        ? ({\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(response.value.html),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status,\n          } satisfies CachedPageValue)\n        : response.value?.kind === CachedRouteKind.APP_PAGE\n          ? ({\n              kind: CachedRouteKind.APP_PAGE,\n              html: RenderResult.fromStatic(response.value.html),\n              rscData: response.value.rscData,\n              headers: response.value.headers,\n              status: response.value.status,\n              postponed: response.value.postponed,\n              segmentData: response.value.segmentData,\n            } satisfies CachedAppPageValue)\n          : response.value,\n  }\n}\n\nexport function routeKindToIncrementalCacheKind(\n  routeKind: RouteKind\n): Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH> {\n  switch (routeKind) {\n    case RouteKind.PAGES:\n      return IncrementalCacheKind.PAGES\n    case RouteKind.APP_PAGE:\n      return IncrementalCacheKind.APP_PAGE\n    case RouteKind.IMAGE:\n      return IncrementalCacheKind.IMAGE\n    case RouteKind.APP_ROUTE:\n      return IncrementalCacheKind.APP_ROUTE\n    default:\n      throw new Error(`Unexpected route kind ${routeKind}`)\n  }\n}\n","import type {\n  ResponseCacheEntry,\n  ResponseGenerator,\n  ResponseCacheBase,\n  IncrementalResponseCacheEntry,\n  IncrementalResponseCache,\n} from './types'\n\nimport { Batcher } from '../../lib/batcher'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport {\n  fromResponseCacheEntry,\n  routeKindToIncrementalCacheKind,\n  toResponseCacheEntry,\n} from './utils'\nimport type { RouteKind } from '../route-kind'\n\nexport * from './types'\n\nexport default class ResponseCache implements ResponseCacheBase {\n  private readonly batcher = Batcher.create<\n    { key: string; isOnDemandRevalidate: boolean },\n    IncrementalResponseCacheEntry | null,\n    string\n  >({\n    // Ensure on-demand revalidate doesn't block normal requests, it should be\n    // safe to run an on-demand revalidate for the same key as a normal request.\n    cacheKeyFn: ({ key, isOnDemandRevalidate }) =>\n      `${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n    // We wait to do any async work until after we've added our promise to\n    // `pendingResponses` to ensure that any any other calls will reuse the\n    // same promise until we've fully finished our work.\n    schedulerFn: scheduleOnNextTick,\n  })\n\n  private previousCacheItem?: {\n    key: string\n    entry: IncrementalResponseCacheEntry | null\n    expiresAt: number\n  }\n\n  // we don't use minimal_mode name here as this.minimal_mode is\n  // statically replace for server runtimes but we need it to\n  // be dynamic here\n  private minimal_mode?: boolean\n\n  constructor(minimal_mode: boolean) {\n    this.minimal_mode = minimal_mode\n  }\n\n  public async get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      routeKind: RouteKind\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalResponseCache\n      isRoutePPREnabled?: boolean\n      isFallback?: boolean\n      waitUntil?: (prom: Promise<any>) => void\n    }\n  ): Promise<ResponseCacheEntry | null> {\n    // If there is no key for the cache, we can't possibly look this up in the\n    // cache so just return the result of the response generator.\n    if (!key) {\n      return responseGenerator({ hasResolved: false, previousCacheEntry: null })\n    }\n\n    const {\n      incrementalCache,\n      isOnDemandRevalidate = false,\n      isFallback = false,\n      isRoutePPREnabled = false,\n      waitUntil,\n    } = context\n\n    const response = await this.batcher.batch(\n      { key, isOnDemandRevalidate },\n      (cacheKey, resolve) => {\n        const prom = (async () => {\n          // We keep the previous cache entry around to leverage when the\n          // incremental cache is disabled in minimal mode.\n          if (\n            this.minimal_mode &&\n            this.previousCacheItem?.key === cacheKey &&\n            this.previousCacheItem.expiresAt > Date.now()\n          ) {\n            return this.previousCacheItem.entry\n          }\n\n          // Coerce the kindHint into a given kind for the incremental cache.\n          const kind = routeKindToIncrementalCacheKind(context.routeKind)\n\n          let resolved = false\n          let cachedResponse: IncrementalResponseCacheEntry | null = null\n          try {\n            cachedResponse = !this.minimal_mode\n              ? await incrementalCache.get(key, {\n                  kind,\n                  isRoutePPREnabled: context.isRoutePPREnabled,\n                  isFallback,\n                })\n              : null\n\n            if (cachedResponse && !isOnDemandRevalidate) {\n              resolve(cachedResponse)\n              resolved = true\n\n              if (!cachedResponse.isStale || context.isPrefetch) {\n                // The cached value is still valid, so we don't need\n                // to update it yet.\n                return null\n              }\n            }\n\n            const cacheEntry = await responseGenerator({\n              hasResolved: resolved,\n              previousCacheEntry: cachedResponse,\n              isRevalidating: true,\n            })\n\n            // If the cache entry couldn't be generated, we don't want to cache\n            // the result.\n            if (!cacheEntry) {\n              // Unset the previous cache item if it was set.\n              if (this.minimal_mode) this.previousCacheItem = undefined\n              return null\n            }\n\n            const resolveValue = await fromResponseCacheEntry({\n              ...cacheEntry,\n              isMiss: !cachedResponse,\n            })\n            if (!resolveValue) {\n              // Unset the previous cache item if it was set.\n              if (this.minimal_mode) this.previousCacheItem = undefined\n              return null\n            }\n\n            // For on-demand revalidate wait to resolve until cache is set.\n            // Otherwise resolve now.\n            if (!isOnDemandRevalidate && !resolved) {\n              resolve(resolveValue)\n              resolved = true\n            }\n\n            // We want to persist the result only if it has a cache control value\n            // defined.\n            if (resolveValue.cacheControl) {\n              if (this.minimal_mode) {\n                this.previousCacheItem = {\n                  key: cacheKey,\n                  entry: resolveValue,\n                  expiresAt: Date.now() + 1000,\n                }\n              } else {\n                await incrementalCache.set(key, resolveValue.value, {\n                  cacheControl: resolveValue.cacheControl,\n                  isRoutePPREnabled,\n                  isFallback,\n                })\n              }\n            }\n\n            return resolveValue\n          } catch (err) {\n            // When a path is erroring we automatically re-set the existing cache\n            // with new revalidate and expire times to prevent non-stop retrying.\n            if (cachedResponse?.cacheControl) {\n              const newRevalidate = Math.min(\n                Math.max(cachedResponse.cacheControl.revalidate || 3, 3),\n                30\n              )\n\n              const newExpire =\n                cachedResponse.cacheControl.expire === undefined\n                  ? undefined\n                  : Math.max(\n                      newRevalidate + 3,\n                      cachedResponse.cacheControl.expire\n                    )\n\n              await incrementalCache.set(key, cachedResponse.value, {\n                cacheControl: { revalidate: newRevalidate, expire: newExpire },\n                isRoutePPREnabled,\n                isFallback,\n              })\n            }\n\n            // While revalidating in the background we can't reject as we already\n            // resolved the cache entry so log the error here.\n            if (resolved) {\n              console.error(err)\n              return null\n            }\n\n            // We haven't resolved yet, so let's throw to indicate an error.\n            throw err\n          }\n        })()\n\n        // we need to ensure background revalidates are\n        // passed to waitUntil\n        if (waitUntil) {\n          waitUntil(prom)\n        }\n        return prom\n      }\n    )\n\n    return toResponseCacheEntry(response)\n  }\n}\n","import path from '../shared/lib/isomorphic/path'\nimport type { CacheFs } from '../shared/lib/utils'\n\n/**\n * A task to be written.\n */\ntype Task = [\n  /**\n   * The directory to create.\n   */\n  directory: string,\n\n  /**\n   * The promise to create the directory.\n   */\n  mkdir: Promise<unknown>,\n\n  /**\n   * The promises to write the files that are dependent on the directory being\n   * created.\n   */\n  writeFile: Promise<unknown>[],\n]\n/**\n * MultiFileWriter is a utility for writing multiple files in parallel that\n * guarantees that all files will be written after their containing directory\n * is created, and that the directory will only be created once.\n */\nexport class MultiFileWriter {\n  /**\n   * The tasks to be written.\n   */\n  private readonly tasks: Task[] = []\n\n  constructor(\n    /**\n     * The file system methods to use.\n     */\n    private readonly fs: Pick<CacheFs, 'mkdir' | 'writeFile'>\n  ) {}\n\n  /**\n   * Finds or creates a task for a directory.\n   *\n   * @param directory - The directory to find or create a task for.\n   * @returns The task for the directory.\n   */\n  private findOrCreateTask(directory: string): Task {\n    // See if this directory already has a task to create it.\n    for (const task of this.tasks) {\n      if (task[0] === directory) {\n        return task\n      }\n    }\n\n    const promise = this.fs.mkdir(directory)\n\n    // Attach a catch handler so that it doesn't throw an unhandled promise\n    // rejection warning.\n    promise.catch(() => {})\n\n    // Otherwise, create a new task for this directory.\n    const task: Task = [directory, promise, []]\n    this.tasks.push(task)\n\n    return task\n  }\n\n  /**\n   * Appends a file to the writer to be written after its containing directory\n   * is created. The file writer should be awaited after all the files have been\n   * appended. Any async operation that occurs between appending and awaiting\n   * may cause an unhandled promise rejection warning and potentially crash the\n   * process.\n   *\n   * @param filePath - The path to the file to write.\n   * @param data - The data to write to the file.\n   */\n  public append(filePath: string, data: Buffer | string): void {\n    // Find or create a task for the directory that contains the file.\n    const task = this.findOrCreateTask(path.dirname(filePath))\n\n    const promise = task[1].then(() => this.fs.writeFile(filePath, data))\n\n    // Attach a catch handler so that it doesn't throw an unhandled promise\n    // rejection warning.\n    promise.catch(() => {})\n\n    // Add the file write to the task AFTER the directory promise has resolved.\n    task[2].push(promise)\n  }\n\n  /**\n   * Returns a promise that resolves when all the files have been written.\n   */\n  public wait(): Promise<unknown> {\n    return Promise.all(this.tasks.flatMap((task) => task[2]))\n  }\n}\n","import type { RouteMetadata } from '../../../export/routes/types'\nimport type { CacheHandler, CacheHandlerContext, CacheHandlerValue } from '.'\nimport type { CacheFs } from '../../../shared/lib/utils'\nimport {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedFetchValue,\n  type IncrementalCacheValue,\n  type SetIncrementalFetchCacheContext,\n  type SetIncrementalResponseCacheContext,\n} from '../../response-cache'\n\nimport type { LRUCache } from '../lru-cache'\nimport path from '../../../shared/lib/isomorphic/path'\nimport {\n  NEXT_CACHE_TAGS_HEADER,\n  NEXT_DATA_SUFFIX,\n  NEXT_META_SUFFIX,\n  RSC_PREFETCH_SUFFIX,\n  RSC_SEGMENT_SUFFIX,\n  RSC_SEGMENTS_DIR_SUFFIX,\n  RSC_SUFFIX,\n} from '../../../lib/constants'\nimport { isStale, tagsManifest } from './tags-manifest.external'\nimport { MultiFileWriter } from '../../../lib/multi-file-writer'\nimport { getMemoryCache } from './memory-cache.external'\n\ntype FileSystemCacheContext = Omit<\n  CacheHandlerContext,\n  'fs' | 'serverDistDir'\n> & {\n  fs: CacheFs\n  serverDistDir: string\n}\n\nexport default class FileSystemCache implements CacheHandler {\n  private fs: FileSystemCacheContext['fs']\n  private flushToDisk?: FileSystemCacheContext['flushToDisk']\n  private serverDistDir: FileSystemCacheContext['serverDistDir']\n  private revalidatedTags: string[]\n  private static debug: boolean = !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n  private static memoryCache: LRUCache<CacheHandlerValue> | undefined\n\n  constructor(ctx: FileSystemCacheContext) {\n    this.fs = ctx.fs\n    this.flushToDisk = ctx.flushToDisk\n    this.serverDistDir = ctx.serverDistDir\n    this.revalidatedTags = ctx.revalidatedTags\n\n    if (ctx.maxMemoryCacheSize) {\n      if (!FileSystemCache.memoryCache) {\n        if (FileSystemCache.debug) {\n          console.log('using memory store for fetch cache')\n        }\n\n        FileSystemCache.memoryCache = getMemoryCache(ctx.maxMemoryCacheSize)\n      } else if (FileSystemCache.debug) {\n        console.log('memory store already initialized')\n      }\n    } else if (FileSystemCache.debug) {\n      console.log('not using memory store for fetch cache')\n    }\n  }\n\n  public resetRequestCache(): void {}\n\n  public async revalidateTag(\n    ...args: Parameters<CacheHandler['revalidateTag']>\n  ) {\n    let [tags] = args\n    tags = typeof tags === 'string' ? [tags] : tags\n\n    if (FileSystemCache.debug) {\n      console.log('revalidateTag', tags)\n    }\n\n    if (tags.length === 0) {\n      return\n    }\n\n    for (const tag of tags) {\n      if (!tagsManifest.has(tag)) {\n        tagsManifest.set(tag, Date.now())\n      }\n    }\n  }\n\n  public async get(...args: Parameters<CacheHandler['get']>) {\n    const [key, ctx] = args\n    const { kind } = ctx\n\n    let data = FileSystemCache.memoryCache?.get(key)\n\n    if (FileSystemCache.debug) {\n      if (kind === IncrementalCacheKind.FETCH) {\n        console.log('get', key, ctx.tags, kind, !!data)\n      } else {\n        console.log('get', key, kind, !!data)\n      }\n    }\n\n    // let's check the disk for seed data\n    if (!data && process.env.NEXT_RUNTIME !== 'edge') {\n      if (kind === IncrementalCacheKind.APP_ROUTE) {\n        try {\n          const filePath = this.getFilePath(\n            `${key}.body`,\n            IncrementalCacheKind.APP_ROUTE\n          )\n          const fileData = await this.fs.readFile(filePath)\n          const { mtime } = await this.fs.stat(filePath)\n\n          const meta = JSON.parse(\n            await this.fs.readFile(\n              filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n              'utf8'\n            )\n          )\n\n          const cacheEntry: CacheHandlerValue = {\n            lastModified: mtime.getTime(),\n            value: {\n              kind: CachedRouteKind.APP_ROUTE,\n              body: fileData,\n              headers: meta.headers,\n              status: meta.status,\n            },\n          }\n          return cacheEntry\n        } catch {\n          return null\n        }\n      }\n\n      try {\n        const filePath = this.getFilePath(\n          kind === IncrementalCacheKind.FETCH ? key : `${key}.html`,\n          kind\n        )\n\n        const fileData = await this.fs.readFile(filePath, 'utf8')\n        const { mtime } = await this.fs.stat(filePath)\n\n        if (kind === IncrementalCacheKind.FETCH) {\n          const { tags, fetchIdx, fetchUrl } = ctx\n\n          if (!this.flushToDisk) return null\n\n          const lastModified = mtime.getTime()\n          const parsedData: CachedFetchValue = JSON.parse(fileData)\n          data = {\n            lastModified,\n            value: parsedData,\n          }\n\n          if (data.value?.kind === CachedRouteKind.FETCH) {\n            const storedTags = data.value?.tags\n\n            // update stored tags if a new one is being added\n            // TODO: remove this when we can send the tags\n            // via header on GET same as SET\n            if (!tags?.every((tag) => storedTags?.includes(tag))) {\n              if (FileSystemCache.debug) {\n                console.log('tags vs storedTags mismatch', tags, storedTags)\n              }\n              await this.set(key, data.value, {\n                fetchCache: true,\n                tags,\n                fetchIdx,\n                fetchUrl,\n              })\n            }\n          }\n        } else if (kind === IncrementalCacheKind.APP_PAGE) {\n          // We try to load the metadata file, but if it fails, we don't\n          // error. We also don't load it if this is a fallback.\n          let meta: RouteMetadata | undefined\n          try {\n            meta = JSON.parse(\n              await this.fs.readFile(\n                filePath.replace(/\\.html$/, NEXT_META_SUFFIX),\n                'utf8'\n              )\n            )\n          } catch {}\n\n          let maybeSegmentData: Map<string, Buffer> | undefined\n          if (meta?.segmentPaths) {\n            // Collect all the segment data for this page.\n            // TODO: To optimize file system reads, we should consider creating\n            // separate cache entries for each segment, rather than storing them\n            // all on the page's entry. Though the behavior is\n            // identical regardless.\n            const segmentData: Map<string, Buffer> = new Map()\n            maybeSegmentData = segmentData\n            const segmentsDir = key + RSC_SEGMENTS_DIR_SUFFIX\n            await Promise.all(\n              meta.segmentPaths.map(async (segmentPath: string) => {\n                const segmentDataFilePath = this.getFilePath(\n                  segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX,\n                  IncrementalCacheKind.APP_PAGE\n                )\n                try {\n                  segmentData.set(\n                    segmentPath,\n                    await this.fs.readFile(segmentDataFilePath)\n                  )\n                } catch {\n                  // This shouldn't happen, but if for some reason we fail to\n                  // load a segment from the filesystem, treat it the same as if\n                  // the segment is dynamic and does not have a prefetch.\n                }\n              })\n            )\n          }\n\n          let rscData: Buffer | undefined\n          if (!ctx.isFallback) {\n            rscData = await this.fs.readFile(\n              this.getFilePath(\n                `${key}${ctx.isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX}`,\n                IncrementalCacheKind.APP_PAGE\n              )\n            )\n          }\n\n          data = {\n            lastModified: mtime.getTime(),\n            value: {\n              kind: CachedRouteKind.APP_PAGE,\n              html: fileData,\n              rscData,\n              postponed: meta?.postponed,\n              headers: meta?.headers,\n              status: meta?.status,\n              segmentData: maybeSegmentData,\n            },\n          }\n        } else if (kind === IncrementalCacheKind.PAGES) {\n          let meta: RouteMetadata | undefined\n          let pageData: string | object = {}\n\n          if (!ctx.isFallback) {\n            pageData = JSON.parse(\n              await this.fs.readFile(\n                this.getFilePath(\n                  `${key}${NEXT_DATA_SUFFIX}`,\n                  IncrementalCacheKind.PAGES\n                ),\n                'utf8'\n              )\n            )\n          }\n\n          data = {\n            lastModified: mtime.getTime(),\n            value: {\n              kind: CachedRouteKind.PAGES,\n              html: fileData,\n              pageData,\n              headers: meta?.headers,\n              status: meta?.status,\n            },\n          }\n        } else {\n          throw new Error(\n            `Invariant: Unexpected route kind ${kind} in file system cache.`\n          )\n        }\n\n        if (data) {\n          FileSystemCache.memoryCache?.set(key, data)\n        }\n      } catch {\n        return null\n      }\n    }\n\n    if (\n      data?.value?.kind === CachedRouteKind.APP_PAGE ||\n      data?.value?.kind === CachedRouteKind.PAGES\n    ) {\n      let cacheTags: undefined | string[]\n      const tagsHeader = data.value.headers?.[NEXT_CACHE_TAGS_HEADER]\n\n      if (typeof tagsHeader === 'string') {\n        cacheTags = tagsHeader.split(',')\n      }\n\n      if (cacheTags?.length) {\n        // we trigger a blocking validation if an ISR page\n        // had a tag revalidated, if we want to be a background\n        // revalidation instead we return data.lastModified = -1\n        if (isStale(cacheTags, data?.lastModified || Date.now())) {\n          return null\n        }\n      }\n    } else if (data?.value?.kind === CachedRouteKind.FETCH) {\n      const combinedTags =\n        ctx.kind === IncrementalCacheKind.FETCH\n          ? [...(ctx.tags || []), ...(ctx.softTags || [])]\n          : []\n\n      const wasRevalidated = combinedTags.some((tag) => {\n        if (this.revalidatedTags.includes(tag)) {\n          return true\n        }\n\n        return isStale([tag], data?.lastModified || Date.now())\n      })\n      // When revalidate tag is called we don't return\n      // stale data so it's updated right away\n      if (wasRevalidated) {\n        data = undefined\n      }\n    }\n\n    return data ?? null\n  }\n\n  public async set(\n    key: string,\n    data: IncrementalCacheValue | null,\n    ctx: SetIncrementalFetchCacheContext | SetIncrementalResponseCacheContext\n  ) {\n    FileSystemCache.memoryCache?.set(key, {\n      value: data,\n      lastModified: Date.now(),\n    })\n\n    if (FileSystemCache.debug) {\n      console.log('set', key)\n    }\n\n    if (!this.flushToDisk || !data) return\n\n    // Create a new writer that will prepare to write all the files to disk\n    // after their containing directory is created.\n    const writer = new MultiFileWriter(this.fs)\n\n    if (data.kind === CachedRouteKind.APP_ROUTE) {\n      const filePath = this.getFilePath(\n        `${key}.body`,\n        IncrementalCacheKind.APP_ROUTE\n      )\n\n      writer.append(filePath, data.body)\n\n      const meta: RouteMetadata = {\n        headers: data.headers,\n        status: data.status,\n        postponed: undefined,\n        segmentPaths: undefined,\n      }\n\n      writer.append(\n        filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n        JSON.stringify(meta, null, 2)\n      )\n    } else if (\n      data.kind === CachedRouteKind.PAGES ||\n      data.kind === CachedRouteKind.APP_PAGE\n    ) {\n      const isAppPath = data.kind === CachedRouteKind.APP_PAGE\n      const htmlPath = this.getFilePath(\n        `${key}.html`,\n        isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES\n      )\n\n      writer.append(htmlPath, data.html)\n\n      // Fallbacks don't generate a data file.\n      if (!ctx.fetchCache && !ctx.isFallback) {\n        writer.append(\n          this.getFilePath(\n            `${key}${\n              isAppPath\n                ? ctx.isRoutePPREnabled\n                  ? RSC_PREFETCH_SUFFIX\n                  : RSC_SUFFIX\n                : NEXT_DATA_SUFFIX\n            }`,\n            isAppPath\n              ? IncrementalCacheKind.APP_PAGE\n              : IncrementalCacheKind.PAGES\n          ),\n          isAppPath ? data.rscData! : JSON.stringify(data.pageData)\n        )\n      }\n\n      if (data?.kind === CachedRouteKind.APP_PAGE) {\n        let segmentPaths: string[] | undefined\n        if (data.segmentData) {\n          segmentPaths = []\n          const segmentsDir = htmlPath.replace(\n            /\\.html$/,\n            RSC_SEGMENTS_DIR_SUFFIX\n          )\n\n          for (const [segmentPath, buffer] of data.segmentData) {\n            segmentPaths.push(segmentPath)\n            const segmentDataFilePath =\n              segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX\n            writer.append(segmentDataFilePath, buffer)\n          }\n        }\n\n        const meta: RouteMetadata = {\n          headers: data.headers,\n          status: data.status,\n          postponed: data.postponed,\n          segmentPaths,\n        }\n\n        writer.append(\n          htmlPath.replace(/\\.html$/, NEXT_META_SUFFIX),\n          JSON.stringify(meta)\n        )\n      }\n    } else if (data.kind === CachedRouteKind.FETCH) {\n      const filePath = this.getFilePath(key, IncrementalCacheKind.FETCH)\n      writer.append(\n        filePath,\n        JSON.stringify({\n          ...data,\n          tags: ctx.fetchCache ? ctx.tags : [],\n        })\n      )\n    }\n\n    // Wait for all FS operations to complete.\n    await writer.wait()\n  }\n\n  private getFilePath(pathname: string, kind: IncrementalCacheKind): string {\n    switch (kind) {\n      case IncrementalCacheKind.FETCH:\n        // we store in .next/cache/fetch-cache so it can be persisted\n        // across deploys\n        return path.join(\n          this.serverDistDir,\n          '..',\n          'cache',\n          'fetch-cache',\n          pathname\n        )\n      case IncrementalCacheKind.PAGES:\n        return path.join(this.serverDistDir, 'pages', pathname)\n      case IncrementalCacheKind.IMAGE:\n      case IncrementalCacheKind.APP_PAGE:\n      case IncrementalCacheKind.APP_ROUTE:\n        return path.join(this.serverDistDir, 'app', pathname)\n      default:\n        throw new Error(`Unexpected file path kind: ${kind}`)\n    }\n  }\n}\n","/**\n * This transforms a URL pathname into a route. It removes any trailing slashes\n * and the `/index` suffix.\n *\n * @param pathname - The URL path that needs to be optimized.\n * @returns - The route\n *\n * @example\n * // returns '/example'\n * toRoute('/example/index/');\n *\n * @example\n * // returns '/example'\n * toRoute('/example/');\n *\n * @example\n * // returns '/'\n * toRoute('/index/');\n *\n * @example\n * // returns '/'\n * toRoute('/');\n */\nexport function toRoute(pathname: string): string {\n  return pathname.replace(/(?:\\/index)?\\/?$/, '') || '/'\n}\n","export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n","import type { CacheFs } from '../../../shared/lib/utils'\nimport type { PrerenderManifest } from '../../../build'\nimport {\n  type IncrementalCacheValue,\n  type IncrementalCacheEntry,\n  type IncrementalCache as IncrementalCacheType,\n  IncrementalCacheKind,\n  CachedRouteKind,\n  type IncrementalResponseCacheEntry,\n  type IncrementalFetchCacheEntry,\n  type GetIncrementalFetchCacheContext,\n  type GetIncrementalResponseCacheContext,\n  type CachedFetchValue,\n  type SetIncrementalFetchCacheContext,\n  type SetIncrementalResponseCacheContext,\n} from '../../response-cache'\nimport type { DeepReadonly } from '../../../shared/lib/deep-readonly'\n\nimport FileSystemCache from './file-system-cache'\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path'\n\nimport {\n  CACHE_ONE_YEAR,\n  PRERENDER_REVALIDATE_HEADER,\n} from '../../../lib/constants'\nimport { toRoute } from '../to-route'\nimport { SharedCacheControls } from './shared-cache-controls.external'\nimport {\n  getPrerenderResumeDataCache,\n  getRenderResumeDataCache,\n  workUnitAsyncStorage,\n} from '../../app-render/work-unit-async-storage.external'\nimport { InvariantError } from '../../../shared/lib/invariant-error'\nimport type { Revalidate } from '../cache-control'\nimport { getPreviouslyRevalidatedTags } from '../../server-utils'\nimport { workAsyncStorage } from '../../app-render/work-async-storage.external'\nimport { DetachedPromise } from '../../../lib/detached-promise'\n\nexport interface CacheHandlerContext {\n  fs?: CacheFs\n  dev?: boolean\n  flushToDisk?: boolean\n  serverDistDir?: string\n  maxMemoryCacheSize?: number\n  fetchCacheKeyPrefix?: string\n  prerenderManifest?: PrerenderManifest\n  revalidatedTags: string[]\n  _requestHeaders: IncrementalCache['requestHeaders']\n}\n\nexport interface CacheHandlerValue {\n  lastModified?: number\n  age?: number\n  cacheState?: string\n  value: IncrementalCacheValue | null\n}\n\nexport class CacheHandler {\n  // eslint-disable-next-line\n  constructor(_ctx: CacheHandlerContext) {}\n\n  public async get(\n    _cacheKey: string,\n    _ctx: GetIncrementalFetchCacheContext | GetIncrementalResponseCacheContext\n  ): Promise<CacheHandlerValue | null> {\n    return {} as any\n  }\n\n  public async set(\n    _cacheKey: string,\n    _data: IncrementalCacheValue | null,\n    _ctx: SetIncrementalFetchCacheContext | SetIncrementalResponseCacheContext\n  ): Promise<void> {}\n\n  public async revalidateTag(\n    ..._args: Parameters<IncrementalCache['revalidateTag']>\n  ): Promise<void> {}\n\n  public resetRequestCache(): void {}\n}\n\nexport class IncrementalCache implements IncrementalCacheType {\n  readonly dev?: boolean\n  readonly disableForTestmode?: boolean\n  readonly cacheHandler?: CacheHandler\n  readonly hasCustomCacheHandler: boolean\n  readonly prerenderManifest: DeepReadonly<PrerenderManifest>\n  readonly requestHeaders: Record<string, undefined | string | string[]>\n  readonly allowedRevalidateHeaderKeys?: string[]\n  readonly minimalMode?: boolean\n  readonly fetchCacheKeyPrefix?: string\n  readonly revalidatedTags?: string[]\n  readonly isOnDemandRevalidate?: boolean\n\n  private static readonly debug: boolean =\n    !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n  private readonly locks = new Map<string, Promise<void>>()\n\n  /**\n   * The cache controls for routes. This will source the values from the\n   * prerender manifest until the in-memory cache is updated with new values.\n   */\n  private readonly cacheControls: SharedCacheControls\n\n  constructor({\n    fs,\n    dev,\n    flushToDisk,\n    minimalMode,\n    serverDistDir,\n    requestHeaders,\n    maxMemoryCacheSize,\n    getPrerenderManifest,\n    fetchCacheKeyPrefix,\n    CurCacheHandler,\n    allowedRevalidateHeaderKeys,\n  }: {\n    fs?: CacheFs\n    dev: boolean\n    minimalMode?: boolean\n    serverDistDir?: string\n    flushToDisk?: boolean\n    allowedRevalidateHeaderKeys?: string[]\n    requestHeaders: IncrementalCache['requestHeaders']\n    maxMemoryCacheSize?: number\n    getPrerenderManifest: () => DeepReadonly<PrerenderManifest>\n    fetchCacheKeyPrefix?: string\n    CurCacheHandler?: typeof CacheHandler\n  }) {\n    this.hasCustomCacheHandler = Boolean(CurCacheHandler)\n\n    const cacheHandlersSymbol = Symbol.for('@next/cache-handlers')\n    const _globalThis: typeof globalThis & {\n      [cacheHandlersSymbol]?: {\n        FetchCache?: typeof CacheHandler\n      }\n    } = globalThis\n\n    if (!CurCacheHandler) {\n      // if we have a global cache handler available leverage it\n      const globalCacheHandler = _globalThis[cacheHandlersSymbol]\n\n      if (globalCacheHandler?.FetchCache) {\n        CurCacheHandler = globalCacheHandler.FetchCache\n      } else {\n        if (fs && serverDistDir) {\n          if (IncrementalCache.debug) {\n            console.log('using filesystem cache handler')\n          }\n          CurCacheHandler = FileSystemCache\n        }\n      }\n    } else if (IncrementalCache.debug) {\n      console.log('using custom cache handler', CurCacheHandler.name)\n    }\n\n    if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n      // Allow cache size to be overridden for testing purposes\n      maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10)\n    }\n    this.dev = dev\n    this.disableForTestmode = process.env.NEXT_PRIVATE_TEST_PROXY === 'true'\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] = minimalMode\n    this.requestHeaders = requestHeaders\n    this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys\n    this.prerenderManifest = getPrerenderManifest()\n    this.cacheControls = new SharedCacheControls(this.prerenderManifest)\n    this.fetchCacheKeyPrefix = fetchCacheKeyPrefix\n    let revalidatedTags: string[] = []\n\n    if (\n      requestHeaders[PRERENDER_REVALIDATE_HEADER] ===\n      this.prerenderManifest?.preview?.previewModeId\n    ) {\n      this.isOnDemandRevalidate = true\n    }\n\n    if (minimalMode) {\n      revalidatedTags = getPreviouslyRevalidatedTags(\n        requestHeaders,\n        this.prerenderManifest?.preview?.previewModeId\n      )\n    }\n\n    if (CurCacheHandler) {\n      this.cacheHandler = new CurCacheHandler({\n        dev,\n        fs,\n        flushToDisk,\n        serverDistDir,\n        revalidatedTags,\n        maxMemoryCacheSize,\n        _requestHeaders: requestHeaders,\n        fetchCacheKeyPrefix,\n      })\n    }\n  }\n\n  private calculateRevalidate(\n    pathname: string,\n    fromTime: number,\n    dev: boolean,\n    isFallback: boolean | undefined\n  ): Revalidate {\n    // in development we don't have a prerender-manifest\n    // and default to always revalidating to allow easier debugging\n    if (dev)\n      return Math.floor(performance.timeOrigin + performance.now() - 1000)\n\n    const cacheControl = this.cacheControls.get(toRoute(pathname))\n\n    // if an entry isn't present in routes we fallback to a default\n    // of revalidating after 1 second unless it's a fallback request.\n    const initialRevalidateSeconds = cacheControl\n      ? cacheControl.revalidate\n      : isFallback\n        ? false\n        : 1\n\n    const revalidateAfter =\n      typeof initialRevalidateSeconds === 'number'\n        ? initialRevalidateSeconds * 1000 + fromTime\n        : initialRevalidateSeconds\n\n    return revalidateAfter\n  }\n\n  _getPathname(pathname: string, fetchCache?: boolean) {\n    return fetchCache ? pathname : normalizePagePath(pathname)\n  }\n\n  resetRequestCache() {\n    this.cacheHandler?.resetRequestCache?.()\n  }\n\n  async lock(cacheKey: string): Promise<() => Promise<void> | void> {\n    // Wait for any existing lock on this cache key to be released\n    // This implements a simple queue-based locking mechanism\n    while (true) {\n      const lock = this.locks.get(cacheKey)\n\n      if (IncrementalCache.debug) {\n        console.log('lock get', cacheKey, !!lock)\n      }\n\n      // If no lock exists, we can proceed to acquire it\n      if (!lock) break\n\n      // Wait for the existing lock to be released before trying again\n      await lock\n    }\n\n    // Create a new detached promise that will represent this lock\n    // The resolve function (unlock) will be returned to the caller\n    const { resolve, promise } = new DetachedPromise<void>()\n\n    if (IncrementalCache.debug) {\n      console.log('successfully locked', cacheKey)\n    }\n\n    // Store the lock promise in the locks map\n    this.locks.set(cacheKey, promise)\n\n    return () => {\n      // Resolve the promise to release the lock.\n      resolve()\n\n      // Remove the lock from the map once it's released so that future gets\n      // can acquire the lock.\n      this.locks.delete(cacheKey)\n    }\n  }\n\n  async revalidateTag(tags: string | string[]): Promise<void> {\n    return this.cacheHandler?.revalidateTag(tags)\n  }\n\n  // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23\n  async generateCacheKey(\n    url: string,\n    init: RequestInit | Request = {}\n  ): Promise<string> {\n    // this should be bumped anytime a fix is made to cache entries\n    // that should bust the cache\n    const MAIN_KEY_PREFIX = 'v3'\n\n    const bodyChunks: string[] = []\n\n    const encoder = new TextEncoder()\n    const decoder = new TextDecoder()\n\n    if (init.body) {\n      // handle Uint8Array body\n      if (init.body instanceof Uint8Array) {\n        bodyChunks.push(decoder.decode(init.body))\n        ;(init as any)._ogBody = init.body\n      } // handle ReadableStream body\n      else if (typeof (init.body as any).getReader === 'function') {\n        const readableBody = init.body as ReadableStream<Uint8Array | string>\n\n        const chunks: Uint8Array[] = []\n\n        try {\n          await readableBody.pipeTo(\n            new WritableStream({\n              write(chunk) {\n                if (typeof chunk === 'string') {\n                  chunks.push(encoder.encode(chunk))\n                  bodyChunks.push(chunk)\n                } else {\n                  chunks.push(chunk)\n                  bodyChunks.push(decoder.decode(chunk, { stream: true }))\n                }\n              },\n            })\n          )\n\n          // Flush the decoder.\n          bodyChunks.push(decoder.decode())\n\n          // Create a new buffer with all the chunks.\n          const length = chunks.reduce((total, arr) => total + arr.length, 0)\n          const arrayBuffer = new Uint8Array(length)\n\n          // Push each of the chunks into the new array buffer.\n          let offset = 0\n          for (const chunk of chunks) {\n            arrayBuffer.set(chunk, offset)\n            offset += chunk.length\n          }\n\n          ;(init as any)._ogBody = arrayBuffer\n        } catch (err) {\n          console.error('Problem reading body', err)\n        }\n      } // handle FormData or URLSearchParams bodies\n      else if (typeof (init.body as any).keys === 'function') {\n        const formData = init.body as FormData\n        ;(init as any)._ogBody = init.body\n        for (const key of new Set([...formData.keys()])) {\n          const values = formData.getAll(key)\n          bodyChunks.push(\n            `${key}=${(\n              await Promise.all(\n                values.map(async (val) => {\n                  if (typeof val === 'string') {\n                    return val\n                  } else {\n                    return await val.text()\n                  }\n                })\n              )\n            ).join(',')}`\n          )\n        }\n        // handle blob body\n      } else if (typeof (init.body as any).arrayBuffer === 'function') {\n        const blob = init.body as Blob\n        const arrayBuffer = await blob.arrayBuffer()\n        bodyChunks.push(await blob.text())\n        ;(init as any)._ogBody = new Blob([arrayBuffer], { type: blob.type })\n      } else if (typeof init.body === 'string') {\n        bodyChunks.push(init.body)\n        ;(init as any)._ogBody = init.body\n      }\n    }\n\n    const headers =\n      typeof (init.headers || {}).keys === 'function'\n        ? Object.fromEntries(init.headers as Headers)\n        : Object.assign({}, init.headers)\n\n    // w3c trace context headers can break request caching and deduplication\n    // so we remove them from the cache key\n    if ('traceparent' in headers) delete headers['traceparent']\n    if ('tracestate' in headers) delete headers['tracestate']\n\n    const cacheString = JSON.stringify([\n      MAIN_KEY_PREFIX,\n      this.fetchCacheKeyPrefix || '',\n      url,\n      init.method,\n      headers,\n      init.mode,\n      init.redirect,\n      init.credentials,\n      init.referrer,\n      init.referrerPolicy,\n      init.integrity,\n      init.cache,\n      bodyChunks,\n    ])\n\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      function bufferToHex(buffer: ArrayBuffer): string {\n        return Array.prototype.map\n          .call(new Uint8Array(buffer), (b) => b.toString(16).padStart(2, '0'))\n          .join('')\n      }\n      const buffer = encoder.encode(cacheString)\n      return bufferToHex(await crypto.subtle.digest('SHA-256', buffer))\n    } else {\n      const crypto = require('crypto') as typeof import('crypto')\n      return crypto.createHash('sha256').update(cacheString).digest('hex')\n    }\n  }\n\n  async get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext\n  ): Promise<IncrementalFetchCacheEntry | null>\n  async get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  async get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext | GetIncrementalResponseCacheContext\n  ): Promise<IncrementalCacheEntry | null> {\n    // Unlike other caches if we have a resume data cache, we use it even if\n    // testmode would normally disable it or if requestHeaders say 'no-cache'.\n    if (ctx.kind === IncrementalCacheKind.FETCH) {\n      const workUnitStore = workUnitAsyncStorage.getStore()\n      const resumeDataCache = workUnitStore\n        ? getRenderResumeDataCache(workUnitStore)\n        : null\n      if (resumeDataCache) {\n        const memoryCacheData = resumeDataCache.fetch.get(cacheKey)\n        if (memoryCacheData?.kind === CachedRouteKind.FETCH) {\n          return { isStale: false, value: memoryCacheData }\n        }\n      }\n    }\n\n    // we don't leverage the prerender cache in dev mode\n    // so that getStaticProps is always called for easier debugging\n    if (\n      this.disableForTestmode ||\n      (this.dev &&\n        (ctx.kind !== IncrementalCacheKind.FETCH ||\n          this.requestHeaders['cache-control'] === 'no-cache'))\n    ) {\n      return null\n    }\n\n    cacheKey = this._getPathname(\n      cacheKey,\n      ctx.kind === IncrementalCacheKind.FETCH\n    )\n\n    const cacheData = await this.cacheHandler?.get(cacheKey, ctx)\n\n    if (ctx.kind === IncrementalCacheKind.FETCH) {\n      if (!cacheData) {\n        return null\n      }\n\n      if (cacheData.value?.kind !== CachedRouteKind.FETCH) {\n        throw new InvariantError(\n          `Expected cached value for cache key ${JSON.stringify(cacheKey)} to be a \"FETCH\" kind, got ${JSON.stringify(cacheData.value?.kind)} instead.`\n        )\n      }\n\n      const workStore = workAsyncStorage.getStore()\n      const combinedTags = [...(ctx.tags || []), ...(ctx.softTags || [])]\n      // if a tag was revalidated we don't return stale data\n      if (\n        combinedTags.some(\n          (tag) =>\n            this.revalidatedTags?.includes(tag) ||\n            workStore?.pendingRevalidatedTags?.includes(tag)\n        )\n      ) {\n        return null\n      }\n\n      const revalidate = ctx.revalidate || cacheData.value.revalidate\n      const age =\n        (performance.timeOrigin +\n          performance.now() -\n          (cacheData.lastModified || 0)) /\n        1000\n\n      const isStale = age > revalidate\n      const data = cacheData.value.data\n\n      return {\n        isStale,\n        value: { kind: CachedRouteKind.FETCH, data, revalidate },\n      }\n    } else if (cacheData?.value?.kind === CachedRouteKind.FETCH) {\n      throw new InvariantError(\n        `Expected cached value for cache key ${JSON.stringify(cacheKey)} not to be a ${JSON.stringify(ctx.kind)} kind, got \"FETCH\" instead.`\n      )\n    }\n\n    let entry: IncrementalResponseCacheEntry | null = null\n    const cacheControl = this.cacheControls.get(toRoute(cacheKey))\n\n    let isStale: boolean | -1 | undefined\n    let revalidateAfter: Revalidate\n\n    if (cacheData?.lastModified === -1) {\n      isStale = -1\n      revalidateAfter = -1 * CACHE_ONE_YEAR\n    } else {\n      revalidateAfter = this.calculateRevalidate(\n        cacheKey,\n        cacheData?.lastModified || performance.timeOrigin + performance.now(),\n        this.dev ?? false,\n        ctx.isFallback\n      )\n      isStale =\n        revalidateAfter !== false &&\n        revalidateAfter < performance.timeOrigin + performance.now()\n          ? true\n          : undefined\n    }\n\n    if (cacheData) {\n      entry = {\n        isStale,\n        cacheControl,\n        revalidateAfter,\n        value: cacheData.value,\n      }\n    }\n\n    if (\n      !cacheData &&\n      this.prerenderManifest.notFoundRoutes.includes(cacheKey)\n    ) {\n      // for the first hit after starting the server the cache\n      // may not have a way to save notFound: true so if\n      // the prerender-manifest marks this as notFound then we\n      // return that entry and trigger a cache set to give it a\n      // chance to update in-memory entries\n      entry = {\n        isStale,\n        value: null,\n        cacheControl,\n        revalidateAfter,\n      }\n      this.set(cacheKey, entry.value, { ...ctx, cacheControl })\n    }\n    return entry\n  }\n\n  async set(\n    pathname: string,\n    data: CachedFetchValue | null,\n    ctx: SetIncrementalFetchCacheContext\n  ): Promise<void>\n  async set(\n    pathname: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n  async set(\n    pathname: string,\n    data: IncrementalCacheValue | null,\n    ctx: SetIncrementalFetchCacheContext | SetIncrementalResponseCacheContext\n  ): Promise<void> {\n    // Even if we otherwise disable caching for testMode or if no fetchCache is\n    // configured we still always stash results in the resume data cache if one\n    // exists. This is because this is a transient in memory cache that\n    // populates caches ahead of a dynamic render in dev mode to allow the RSC\n    // debug info to have the right environment associated to it.\n    if (data?.kind === CachedRouteKind.FETCH) {\n      const workUnitStore = workUnitAsyncStorage.getStore()\n      const prerenderResumeDataCache = workUnitStore\n        ? getPrerenderResumeDataCache(workUnitStore)\n        : null\n      if (prerenderResumeDataCache) {\n        prerenderResumeDataCache.fetch.set(pathname, data)\n      }\n    }\n\n    if (this.disableForTestmode || (this.dev && !ctx.fetchCache)) return\n\n    pathname = this._getPathname(pathname, ctx.fetchCache)\n\n    // FetchCache has upper limit of 2MB per-entry currently\n    const itemSize = JSON.stringify(data).length\n    if (\n      ctx.fetchCache &&\n      itemSize > 2 * 1024 * 1024 &&\n      // We ignore the size limit when custom cache handler is being used, as it\n      // might not have this limit\n      !this.hasCustomCacheHandler &&\n      // We also ignore the size limit when it's an implicit build-time-only\n      // caching that the user isn't even aware of.\n      !ctx.isImplicitBuildTimeCache\n    ) {\n      const warningText = `Failed to set Next.js data cache for ${ctx.fetchUrl || pathname}, items over 2MB can not be cached (${itemSize} bytes)`\n\n      if (this.dev) {\n        throw new Error(warningText)\n      }\n      console.warn(warningText)\n      return\n    }\n\n    try {\n      if (!ctx.fetchCache && ctx.cacheControl) {\n        this.cacheControls.set(toRoute(pathname), ctx.cacheControl)\n      }\n\n      await this.cacheHandler?.set(pathname, data, ctx)\n    } catch (error) {\n      console.warn('Failed to update prerender cache for', pathname, error)\n    }\n  }\n}\n","import DefaultCacheHandler from '../lib/cache-handlers/default.external'\nimport type { CacheHandlerCompat } from '../lib/cache-handlers/types'\n\nconst debug = process.env.NEXT_PRIVATE_DEBUG_CACHE\n  ? (message: string, ...args: any[]) => {\n      console.log(`use-cache: ${message}`, ...args)\n    }\n  : undefined\n\nconst handlersSymbol = Symbol.for('@next/cache-handlers')\nconst handlersMapSymbol = Symbol.for('@next/cache-handlers-map')\nconst handlersSetSymbol = Symbol.for('@next/cache-handlers-set')\n\n/**\n * The reference to the cache handlers. We store the cache handlers on the\n * global object so that we can access the same instance across different\n * boundaries (such as different copies of the same module).\n */\nconst reference: typeof globalThis & {\n  [handlersSymbol]?: {\n    RemoteCache?: CacheHandlerCompat\n    DefaultCache?: CacheHandlerCompat\n  }\n  [handlersMapSymbol]?: Map<string, CacheHandlerCompat>\n  [handlersSetSymbol]?: Set<CacheHandlerCompat>\n} = globalThis\n\n/**\n * Initialize the cache handlers.\n * @returns `true` if the cache handlers were initialized, `false` if they were already initialized.\n */\nexport function initializeCacheHandlers(): boolean {\n  // If the cache handlers have already been initialized, don't do it again.\n  if (reference[handlersMapSymbol]) {\n    debug?.('cache handlers already initialized')\n    return false\n  }\n\n  debug?.('initializing cache handlers')\n  reference[handlersMapSymbol] = new Map<string, CacheHandlerCompat>()\n\n  // Initialize the cache from the symbol contents first.\n  if (reference[handlersSymbol]) {\n    let fallback: CacheHandlerCompat\n    if (reference[handlersSymbol].DefaultCache) {\n      debug?.('setting \"default\" cache handler from symbol')\n      fallback = reference[handlersSymbol].DefaultCache\n    } else {\n      debug?.('setting \"default\" cache handler from default')\n      fallback = DefaultCacheHandler\n    }\n\n    reference[handlersMapSymbol].set('default', fallback)\n\n    if (reference[handlersSymbol].RemoteCache) {\n      debug?.('setting \"remote\" cache handler from symbol')\n      reference[handlersMapSymbol].set(\n        'remote',\n        reference[handlersSymbol].RemoteCache\n      )\n    } else {\n      debug?.('setting \"remote\" cache handler from default')\n      reference[handlersMapSymbol].set('remote', fallback)\n    }\n  } else {\n    debug?.('setting \"default\" cache handler from default')\n    reference[handlersMapSymbol].set('default', DefaultCacheHandler)\n    debug?.('setting \"remote\" cache handler from default')\n    reference[handlersMapSymbol].set('remote', DefaultCacheHandler)\n  }\n\n  // Create a set of the cache handlers.\n  reference[handlersSetSymbol] = new Set(reference[handlersMapSymbol].values())\n\n  return true\n}\n\n/**\n * Get a cache handler by kind.\n * @param kind - The kind of cache handler to get.\n * @returns The cache handler, or `undefined` if it does not exist.\n * @throws If the cache handlers are not initialized.\n */\nexport function getCacheHandler(kind: string): CacheHandlerCompat | undefined {\n  // This should never be called before initializeCacheHandlers.\n  if (!reference[handlersMapSymbol]) {\n    throw new Error('Cache handlers not initialized')\n  }\n\n  return reference[handlersMapSymbol].get(kind)\n}\n\n/**\n * Get a set iterator over the cache handlers.\n * @returns An iterator over the cache handlers, or `undefined` if they are not\n * initialized.\n */\nexport function getCacheHandlers():\n  | SetIterator<CacheHandlerCompat>\n  | undefined {\n  if (!reference[handlersSetSymbol]) {\n    return undefined\n  }\n\n  return reference[handlersSetSymbol].values()\n}\n\n/**\n * Get a map iterator over the cache handlers (keyed by kind).\n * @returns An iterator over the cache handler entries, or `undefined` if they\n * are not initialized.\n * @throws If the cache handlers are not initialized.\n */\nexport function getCacheHandlerEntries():\n  | MapIterator<[string, CacheHandlerCompat]>\n  | undefined {\n  if (!reference[handlersMapSymbol]) {\n    return undefined\n  }\n\n  return reference[handlersMapSymbol].entries()\n}\n\n/**\n * Set a cache handler by kind.\n * @param kind - The kind of cache handler to set.\n * @param cacheHandler - The cache handler to set.\n */\nexport function setCacheHandler(\n  kind: string,\n  cacheHandler: CacheHandlerCompat\n): void {\n  // This should never be called before initializeCacheHandlers.\n  if (!reference[handlersMapSymbol] || !reference[handlersSetSymbol]) {\n    throw new Error('Cache handlers not initialized')\n  }\n\n  debug?.('setting cache handler for \"%s\"', kind)\n  reference[handlersMapSymbol].set(kind, cacheHandler)\n  reference[handlersSetSymbol].add(cacheHandler)\n}\n","/**\n * Interop between \"export default\" and \"module.exports\".\n */\nexport function interopDefault(mod: any) {\n  return mod.default || mod\n}\n","import type { IncomingMessage, ServerResponse } from 'node:http'\nimport type { NextConfigComplete } from '../../config-shared'\nimport type { UrlWithParsedQuery } from 'node:url'\n\nexport type RevalidateFn = (config: {\n  urlPath: string\n  revalidateHeaders: { [key: string]: string | string[] }\n  opts: { unstable_onlyGenerated?: boolean }\n}) => Promise<void>\n\n// The RouterServerContext contains instance specific\n// information that isn't available/relevant when\n// deployed in serverless environments, the key is\n// the relative project dir this allows separate contexts\n// when running multiple next instances in same process\nexport type RouterServerContext = Record<\n  string,\n  {\n    // hostname the server is started with\n    hostname?: string\n    // revalidate function to bypass going through network\n    // to invoke revalidate request (uses mocked req/res)\n    revalidate?: RevalidateFn\n    // function to render the 404 page\n    render404?: (\n      req: IncomingMessage,\n      res: ServerResponse,\n      parsedUrl?: UrlWithParsedQuery,\n      setHeaders?: boolean\n    ) => Promise<void>\n    // current loaded public runtime config\n    publicRuntimeConfig?: NextConfigComplete['publicRuntimeConfig']\n    // exposing nextConfig for dev mode specifically\n    nextConfig?: NextConfigComplete\n    // whether running in custom server mode\n    isCustomServer?: boolean\n    // whether test proxy is enabled\n    experimentalTestProxy?: boolean\n    // allow dev server to log with original stack\n    logErrorWithOriginalStack?: (err: unknown, type: string) => void\n    // allow setting ISR status in dev\n    setIsrStatus?: (key: string, value: boolean | null) => void\n  }\n>\n\nexport const RouterServerContextSymbol = Symbol.for(\n  '@next/router-server-methods'\n)\n\nexport const routerServerGlobal = globalThis as typeof globalThis & {\n  [RouterServerContextSymbol]?: RouterServerContext\n}\n","import type { IncomingMessage, ServerResponse } from 'node:http'\nimport type {\n  InstrumentationOnRequestError,\n  RequestErrorContext,\n} from '../instrumentation/types'\nimport type { ParsedUrlQuery } from 'node:querystring'\nimport type { UrlWithParsedQuery } from 'node:url'\nimport type {\n  PrerenderManifest,\n  RequiredServerFilesManifest,\n} from '../../build'\nimport type { DevRoutesManifest } from '../lib/router-utils/setup-dev-bundler'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport {\n  BUILD_ID_FILE,\n  BUILD_MANIFEST,\n  CLIENT_REFERENCE_MANIFEST,\n  DYNAMIC_CSS_MANIFEST,\n  NEXT_FONT_MANIFEST,\n  PRERENDER_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  ROUTES_MANIFEST,\n  SERVER_FILES_MANIFEST,\n  SERVER_REFERENCE_MANIFEST,\n  SUBRESOURCE_INTEGRITY_MANIFEST,\n} from '../../shared/lib/constants'\nimport { parseReqUrl } from '../../lib/url'\nimport {\n  normalizeLocalePath,\n  type PathLocale,\n} from '../../shared/lib/i18n/normalize-locale-path'\nimport { isDynamicRoute } from '../../shared/lib/router/utils'\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix'\nimport { getServerUtils } from '../server-utils'\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale'\nimport { getHostname } from '../../shared/lib/get-hostname'\nimport { checkIsOnDemandRevalidate } from '../api-utils'\nimport type { PreviewData } from '../../types'\nimport type { BuildManifest } from '../get-page-files'\nimport type { ReactLoadableManifest } from '../load-components'\nimport type { NextFontManifest } from '../../build/webpack/plugins/next-font-manifest-plugin'\nimport { normalizeDataPath } from '../../shared/lib/page-path/normalize-data-path'\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix'\nimport { addRequestMeta, getRequestMeta } from '../request-meta'\nimport { normalizePagePath } from '../../shared/lib/page-path/normalize-page-path'\nimport { isStaticMetadataRoute } from '../../lib/metadata/is-metadata-route'\nimport { IncrementalCache } from '../lib/incremental-cache'\nimport { initializeCacheHandlers, setCacheHandler } from '../use-cache/handlers'\nimport { interopDefault } from '../app-render/interop-default'\nimport type { RouteKind } from '../route-kind'\nimport type { BaseNextRequest } from '../base-http'\nimport type { I18NConfig, NextConfigComplete } from '../config-shared'\nimport ResponseCache, { type ResponseGenerator } from '../response-cache'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport {\n  RouterServerContextSymbol,\n  routerServerGlobal,\n  type RouterServerContext,\n} from '../lib/router-utils/router-server-context'\nimport { decodePathParams } from '../lib/router-utils/decode-path-params'\nimport { removeTrailingSlash } from '../../shared/lib/router/utils/remove-trailing-slash'\n\n/**\n * RouteModuleOptions is the options that are passed to the route module, other\n * route modules should extend this class to add specific options for their\n * route.\n */\nexport interface RouteModuleOptions<\n  D extends RouteDefinition = RouteDefinition,\n  U = unknown,\n> {\n  readonly definition: Readonly<D>\n  readonly userland: Readonly<U>\n  readonly distDir: string\n  readonly projectDir: string\n}\n\n/**\n * RouteHandlerContext is the base context for a route handler.\n */\nexport interface RouteModuleHandleContext {\n  /**\n   * Any matched parameters for the request. This is only defined for dynamic\n   * routes.\n   */\n  params: Record<string, string | string[] | undefined> | undefined\n}\n\nconst dynamicImportEsmDefault = (id: string) =>\n  import(/* webpackIgnore: true */ /* turbopackIgnore: true */ id).then(\n    (mod) => mod.default || mod\n  )\n\n/**\n * RouteModule is the base class for all route modules. This class should be\n * extended by all route modules.\n */\nexport abstract class RouteModule<\n  D extends RouteDefinition = RouteDefinition,\n  U = unknown,\n> {\n  /**\n   * The userland module. This is the module that is exported from the user's\n   * code. This is marked as readonly to ensure that the module is not mutated\n   * because the module (when compiled) only provides getters.\n   */\n  public readonly userland: Readonly<U>\n\n  /**\n   * The definition of the route.\n   */\n  public readonly definition: Readonly<D>\n\n  /**\n   * The shared modules that are exposed and required for the route module.\n   */\n  public static readonly sharedModules: any\n\n  public isDev: boolean\n  public distDir: string\n  public projectDir: string\n  public isAppRouter?: boolean\n  public incrementCache?: IncrementalCache\n  public responseCache?: ResponseCache\n\n  constructor({\n    userland,\n    definition,\n    distDir,\n    projectDir,\n  }: RouteModuleOptions<D, U>) {\n    this.userland = userland\n    this.definition = definition\n    this.isDev = process.env.NODE_ENV === 'development'\n    this.distDir = distDir\n    this.projectDir = projectDir\n  }\n\n  public async instrumentationOnRequestError(\n    req: IncomingMessage | BaseNextRequest,\n    ...args: Parameters<InstrumentationOnRequestError>\n  ) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      const { getEdgeInstrumentationModule } = await import('../web/globals')\n      const instrumentation = await getEdgeInstrumentationModule()\n\n      if (instrumentation) {\n        await instrumentation.onRequestError?.(...args)\n      }\n    } else {\n      const { join } = require('node:path') as typeof import('node:path')\n      const absoluteProjectDir =\n        getRequestMeta(req, 'projectDir') ||\n        join(process.cwd(), this.projectDir)\n\n      const { instrumentationOnRequestError } = await import(\n        '../lib/router-utils/instrumentation-globals.external'\n      )\n\n      return instrumentationOnRequestError(\n        absoluteProjectDir,\n        this.distDir,\n        ...args\n      )\n    }\n  }\n\n  private loadManifests(\n    srcPage: string,\n    projectDir?: string\n  ): {\n    buildId: string\n    buildManifest: BuildManifest\n    routesManifest: DeepReadonly<DevRoutesManifest>\n    nextFontManifest: DeepReadonly<NextFontManifest>\n    prerenderManifest: DeepReadonly<PrerenderManifest>\n    serverFilesManifest: RequiredServerFilesManifest\n    reactLoadableManifest: DeepReadonly<ReactLoadableManifest>\n    subresourceIntegrityManifest: any\n    clientReferenceManifest: any\n    serverActionsManifest: any\n    dynamicCssManifest: any\n  } {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      const { getEdgePreviewProps } =\n        require('../web/get-edge-preview-props') as typeof import('../web/get-edge-preview-props')\n\n      const maybeJSONParse = (str?: string) =>\n        str ? JSON.parse(str) : undefined\n\n      return {\n        buildId: process.env.__NEXT_BUILD_ID || '',\n        buildManifest: self.__BUILD_MANIFEST as any,\n        reactLoadableManifest: maybeJSONParse(self.__REACT_LOADABLE_MANIFEST),\n        nextFontManifest: maybeJSONParse(self.__NEXT_FONT_MANIFEST),\n        prerenderManifest: {\n          routes: {},\n          dynamicRoutes: {},\n          notFoundRoutes: [],\n          version: 4,\n          preview: getEdgePreviewProps(),\n        },\n        routesManifest: {\n          version: 4,\n          caseSensitive: Boolean(process.env.__NEXT_CASE_SENSITIVE_ROUTES),\n          basePath: process.env.__NEXT_BASE_PATH || '',\n          rewrites: (process.env.__NEXT_REWRITES as any) || {\n            beforeFiles: [],\n            afterFiles: [],\n            fallback: [],\n          },\n          redirects: [],\n          headers: [],\n          i18n:\n            (process.env.__NEXT_I18N_CONFIG as any as I18NConfig) || undefined,\n          skipMiddlewareUrlNormalize: Boolean(\n            process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n          ),\n        },\n        serverFilesManifest: {\n          config: (globalThis as any).nextConfig || {},\n        } as any,\n        clientReferenceManifest: self.__RSC_MANIFEST?.[srcPage],\n        serverActionsManifest: maybeJSONParse(self.__RSC_SERVER_MANIFEST),\n        subresourceIntegrityManifest: maybeJSONParse(\n          self.__SUBRESOURCE_INTEGRITY_MANIFEST\n        ),\n        dynamicCssManifest: maybeJSONParse(self.__DYNAMIC_CSS_MANIFEST),\n      }\n    } else {\n      if (!projectDir) {\n        throw new Error('Invariant: projectDir is required for node runtime')\n      }\n      const { loadManifestFromRelativePath } =\n        require('../load-manifest.external') as typeof import('../load-manifest.external')\n      const normalizedPagePath = normalizePagePath(srcPage)\n\n      const [\n        routesManifest,\n        prerenderManifest,\n        buildManifest,\n        reactLoadableManifest,\n        nextFontManifest,\n        clientReferenceManifest,\n        serverActionsManifest,\n        subresourceIntegrityManifest,\n        serverFilesManifest,\n        buildId,\n        dynamicCssManifest,\n      ] = [\n        loadManifestFromRelativePath<DevRoutesManifest>({\n          projectDir,\n          distDir: this.distDir,\n          manifest: ROUTES_MANIFEST,\n          shouldCache: !this.isDev,\n        }),\n        loadManifestFromRelativePath<PrerenderManifest>({\n          projectDir,\n          distDir: this.distDir,\n          manifest: PRERENDER_MANIFEST,\n          shouldCache: !this.isDev,\n        }),\n        loadManifestFromRelativePath<BuildManifest>({\n          projectDir,\n          distDir: this.distDir,\n          manifest: BUILD_MANIFEST,\n          shouldCache: !this.isDev,\n        }),\n        loadManifestFromRelativePath<ReactLoadableManifest>({\n          projectDir,\n          distDir: this.distDir,\n          manifest: process.env.TURBOPACK\n            ? `server/${this.isAppRouter ? 'app' : 'pages'}${normalizedPagePath}/${REACT_LOADABLE_MANIFEST}`\n            : REACT_LOADABLE_MANIFEST,\n          handleMissing: true,\n          shouldCache: !this.isDev,\n        }),\n        loadManifestFromRelativePath<NextFontManifest>({\n          projectDir,\n          distDir: this.distDir,\n          manifest: `server/${NEXT_FONT_MANIFEST}.json`,\n          shouldCache: !this.isDev,\n        }),\n        this.isAppRouter && !isStaticMetadataRoute(srcPage)\n          ? loadManifestFromRelativePath({\n              distDir: this.distDir,\n              projectDir,\n              useEval: true,\n              handleMissing: true,\n              manifest: `server/app${srcPage.replace(/%5F/g, '_') + '_' + CLIENT_REFERENCE_MANIFEST}.js`,\n              shouldCache: !this.isDev,\n            })\n          : undefined,\n        this.isAppRouter\n          ? loadManifestFromRelativePath<any>({\n              distDir: this.distDir,\n              projectDir,\n              manifest: `server/${SERVER_REFERENCE_MANIFEST}.json`,\n              handleMissing: true,\n              shouldCache: !this.isDev,\n            })\n          : {},\n        loadManifestFromRelativePath<Record<string, string>>({\n          projectDir,\n          distDir: this.distDir,\n          manifest: `server/${SUBRESOURCE_INTEGRITY_MANIFEST}.json`,\n          handleMissing: true,\n          shouldCache: !this.isDev,\n        }),\n        this.isDev\n          ? ({} as any)\n          : loadManifestFromRelativePath<RequiredServerFilesManifest>({\n              projectDir,\n              distDir: this.distDir,\n              manifest: SERVER_FILES_MANIFEST,\n            }),\n        this.isDev\n          ? 'development'\n          : loadManifestFromRelativePath<any>({\n              projectDir,\n              distDir: this.distDir,\n              manifest: BUILD_ID_FILE,\n              skipParse: true,\n            }),\n        loadManifestFromRelativePath<any>({\n          projectDir,\n          distDir: this.distDir,\n          manifest: DYNAMIC_CSS_MANIFEST,\n          handleMissing: true,\n        }),\n      ]\n\n      return {\n        buildId,\n        buildManifest,\n        routesManifest,\n        nextFontManifest,\n        prerenderManifest,\n        serverFilesManifest,\n        reactLoadableManifest,\n        clientReferenceManifest: (clientReferenceManifest as any)\n          ?.__RSC_MANIFEST?.[srcPage.replace(/%5F/g, '_')],\n        serverActionsManifest,\n        subresourceIntegrityManifest,\n        dynamicCssManifest,\n      }\n    }\n  }\n\n  public async loadCustomCacheHandlers(\n    req: IncomingMessage,\n    nextConfig: NextConfigComplete\n  ) {\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      const { cacheHandlers } = nextConfig.experimental\n      if (!cacheHandlers) return\n\n      // If we've already initialized the cache handlers interface, don't do it\n      // again.\n      if (!initializeCacheHandlers()) return\n\n      for (const [kind, handler] of Object.entries(cacheHandlers)) {\n        if (!handler) continue\n\n        const { formatDynamicImportPath } =\n          require('../../lib/format-dynamic-import-path') as typeof import('../../lib/format-dynamic-import-path')\n\n        const { join } = require('node:path') as typeof import('node:path')\n        const absoluteProjectDir =\n          getRequestMeta(req, 'projectDir') ||\n          join(process.cwd(), this.projectDir)\n\n        setCacheHandler(\n          kind,\n          interopDefault(\n            await dynamicImportEsmDefault(\n              formatDynamicImportPath(\n                `${absoluteProjectDir}/${this.distDir}`,\n                handler\n              )\n            )\n          )\n        )\n      }\n    }\n  }\n\n  public async getIncrementalCache(\n    req: IncomingMessage,\n    nextConfig: NextConfigComplete,\n    prerenderManifest: DeepReadonly<PrerenderManifest>\n  ): Promise<IncrementalCache> {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      return (globalThis as any).__incrementalCache\n    } else {\n      let CacheHandler: any\n      const { cacheHandler } = nextConfig\n\n      if (cacheHandler) {\n        const { formatDynamicImportPath } =\n          require('../../lib/format-dynamic-import-path') as typeof import('../../lib/format-dynamic-import-path')\n\n        CacheHandler = interopDefault(\n          await dynamicImportEsmDefault(\n            formatDynamicImportPath(this.distDir, cacheHandler)\n          )\n        )\n      }\n      const { join } = require('node:path') as typeof import('node:path')\n      const projectDir =\n        getRequestMeta(req, 'projectDir') ||\n        join(process.cwd(), this.projectDir)\n\n      await this.loadCustomCacheHandlers(req, nextConfig)\n\n      // incremental-cache is request specific\n      // although can have shared caches in module scope\n      // per-cache handler\n      return new IncrementalCache({\n        fs: (\n          require('../lib/node-fs-methods') as typeof import('../lib/node-fs-methods')\n        ).nodeFs,\n        dev: this.isDev,\n        requestHeaders: req.headers,\n        allowedRevalidateHeaderKeys:\n          nextConfig.experimental.allowedRevalidateHeaderKeys,\n        minimalMode: getRequestMeta(req, 'minimalMode'),\n        serverDistDir: `${projectDir}/${this.distDir}/server`,\n        fetchCacheKeyPrefix: nextConfig.experimental.fetchCacheKeyPrefix,\n        maxMemoryCacheSize: nextConfig.cacheMaxMemorySize,\n        flushToDisk: nextConfig.experimental.isrFlushToDisk,\n        getPrerenderManifest: () => prerenderManifest,\n        CurCacheHandler: CacheHandler,\n      })\n    }\n  }\n\n  public async onRequestError(\n    req: IncomingMessage | BaseNextRequest,\n    err: unknown,\n    errorContext: RequestErrorContext,\n    routerServerContext?: RouterServerContext[string]\n  ) {\n    if (routerServerContext?.logErrorWithOriginalStack) {\n      routerServerContext.logErrorWithOriginalStack(err, 'app-dir')\n    } else {\n      console.error(err)\n    }\n    await this.instrumentationOnRequestError(\n      req,\n      err,\n      {\n        path: req.url || '/',\n        headers: req.headers,\n        method: req.method || 'GET',\n      },\n      errorContext\n    )\n  }\n\n  public async prepare(\n    req: IncomingMessage | BaseNextRequest,\n    res: ServerResponse | null,\n    {\n      srcPage,\n      multiZoneDraftMode,\n    }: {\n      srcPage: string\n      multiZoneDraftMode?: boolean\n    }\n  ): Promise<\n    | {\n        buildId: string\n        locale?: string\n        locales?: readonly string[]\n        defaultLocale?: string\n        query: ParsedUrlQuery\n        originalQuery: ParsedUrlQuery\n        originalPathname: string\n        params?: ParsedUrlQuery\n        parsedUrl: UrlWithParsedQuery\n        previewData: PreviewData\n        pageIsDynamic: boolean\n        isDraftMode: boolean\n        resolvedPathname: string\n        isNextDataRequest: boolean\n        buildManifest: DeepReadonly<BuildManifest>\n        nextFontManifest: DeepReadonly<NextFontManifest>\n        serverFilesManifest: DeepReadonly<RequiredServerFilesManifest>\n        reactLoadableManifest: DeepReadonly<ReactLoadableManifest>\n        routesManifest: DeepReadonly<DevRoutesManifest>\n        prerenderManifest: DeepReadonly<PrerenderManifest>\n        // we can't pull in the client reference type or it causes issues with\n        // our pre-compiled types\n        clientReferenceManifest?: any\n        serverActionsManifest?: any\n        dynamicCssManifest?: any\n        subresourceIntegrityManifest?: DeepReadonly<Record<string, string>>\n        isOnDemandRevalidate: boolean\n        revalidateOnlyGenerated: boolean\n        nextConfig: NextConfigComplete\n        routerServerContext?: RouterServerContext[string]\n      }\n    | undefined\n  > {\n    let projectDir: string | undefined\n\n    // edge runtime handles loading instrumentation at the edge adapter level\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      const { join, relative } =\n        require('node:path') as typeof import('node:path')\n\n      projectDir =\n        getRequestMeta(req, 'projectDir') ||\n        join(process.cwd(), this.projectDir)\n\n      const absoluteDistDir = getRequestMeta(req, 'distDir')\n\n      if (absoluteDistDir) {\n        this.distDir = relative(projectDir, absoluteDistDir)\n      }\n      const { ensureInstrumentationRegistered } = await import(\n        '../lib/router-utils/instrumentation-globals.external'\n      )\n      // ensure instrumentation is registered and pass\n      // onRequestError below\n      ensureInstrumentationRegistered(projectDir, this.distDir)\n    }\n    const manifests = await this.loadManifests(srcPage, projectDir)\n    const { routesManifest, prerenderManifest, serverFilesManifest } = manifests\n\n    const { basePath, i18n, rewrites } = routesManifest\n\n    if (basePath) {\n      req.url = removePathPrefix(req.url || '/', basePath)\n    }\n\n    const parsedUrl = parseReqUrl(req.url || '/')\n    // if we couldn't parse the URL we can't continue\n    if (!parsedUrl) {\n      return\n    }\n    let isNextDataRequest = false\n\n    if (pathHasPrefix(parsedUrl.pathname || '/', '/_next/data')) {\n      isNextDataRequest = true\n      parsedUrl.pathname = normalizeDataPath(parsedUrl.pathname || '/')\n    }\n    let originalPathname = parsedUrl.pathname || '/'\n    const originalQuery = { ...parsedUrl.query }\n    const pageIsDynamic = isDynamicRoute(srcPage)\n\n    let localeResult: PathLocale | undefined\n    let detectedLocale: string | undefined\n\n    if (i18n) {\n      localeResult = normalizeLocalePath(\n        parsedUrl.pathname || '/',\n        i18n.locales\n      )\n\n      if (localeResult.detectedLocale) {\n        req.url = `${localeResult.pathname}${parsedUrl.search}`\n        originalPathname = localeResult.pathname\n\n        if (!detectedLocale) {\n          detectedLocale = localeResult.detectedLocale\n        }\n      }\n    }\n\n    const serverUtils = getServerUtils({\n      page: srcPage,\n      i18n,\n      basePath,\n      rewrites,\n      pageIsDynamic,\n      trailingSlash: process.env.__NEXT_TRAILING_SLASH as any as boolean,\n      caseSensitive: Boolean(routesManifest.caseSensitive),\n    })\n\n    const domainLocale = detectDomainLocale(\n      i18n?.domains,\n      getHostname(parsedUrl, req.headers),\n      detectedLocale\n    )\n    addRequestMeta(req, 'isLocaleDomain', Boolean(domainLocale))\n\n    const defaultLocale = domainLocale?.defaultLocale || i18n?.defaultLocale\n\n    // Ensure parsedUrl.pathname includes locale before processing\n    // rewrites or they won't match correctly.\n    if (defaultLocale && !detectedLocale) {\n      parsedUrl.pathname = `/${defaultLocale}${parsedUrl.pathname === '/' ? '' : parsedUrl.pathname}`\n    }\n    const locale =\n      getRequestMeta(req, 'locale') || detectedLocale || defaultLocale\n\n    const rewriteParamKeys = Object.keys(\n      serverUtils.handleRewrites(req, parsedUrl)\n    )\n\n    // after processing rewrites we want to remove locale\n    // from parsedUrl pathname\n    if (i18n) {\n      parsedUrl.pathname = normalizeLocalePath(\n        parsedUrl.pathname || '/',\n        i18n.locales\n      ).pathname\n    }\n\n    let params: Record<string, undefined | string | string[]> | undefined =\n      getRequestMeta(req, 'params')\n\n    // attempt parsing from pathname\n    if (!params && serverUtils.dynamicRouteMatcher) {\n      const paramsMatch = serverUtils.dynamicRouteMatcher(\n        normalizeDataPath(localeResult?.pathname || parsedUrl.pathname || '/')\n      )\n      const paramsResult = serverUtils.normalizeDynamicRouteParams(\n        paramsMatch || {},\n        true\n      )\n\n      if (paramsResult.hasValidParams) {\n        params = paramsResult.params\n      }\n    }\n\n    // Local \"next start\" expects the routing parsed query values\n    // to not be present in the URL although when deployed proxies\n    // will add query values from resolving the routes to pass to function.\n\n    // TODO: do we want to change expectations for \"next start\"\n    // to include these query values in the URL which affects asPath\n    // but would match deployed behavior, e.g. a rewrite from middleware\n    // that adds a query param would be in asPath as query but locally\n    // it won't be in the asPath but still available in the query object\n    const query = getRequestMeta(req, 'query') || {\n      ...parsedUrl.query,\n    }\n\n    const routeParamKeys = new Set<string>()\n    const combinedParamKeys = []\n\n    // we don't include rewriteParamKeys in the combinedParamKeys\n    // for app router since the searchParams is populated from the\n    // URL so we don't want to strip the rewrite params from the URL\n    // so that searchParams can include them\n    if (!this.isAppRouter) {\n      for (const key of [\n        ...rewriteParamKeys,\n        ...Object.keys(serverUtils.defaultRouteMatches || {}),\n      ]) {\n        // We only want to filter rewrite param keys from the URL\n        // if they are matches from the URL e.g. the key/value matches\n        // before and after applying the rewrites /:path for /hello and\n        // { path: 'hello' } but not for { path: 'another' } and /hello\n        // TODO: we should prefix rewrite param keys the same as we do\n        // for dynamic routes so we can identify them properly\n        const originalValue = Array.isArray(originalQuery[key])\n          ? originalQuery[key].join('')\n          : originalQuery[key]\n\n        const queryValue = Array.isArray(query[key])\n          ? query[key].join('')\n          : query[key]\n\n        if (!(key in originalQuery) || originalValue === queryValue) {\n          combinedParamKeys.push(key)\n        }\n      }\n    }\n\n    serverUtils.normalizeCdnUrl(req, combinedParamKeys)\n    serverUtils.normalizeQueryParams(query, routeParamKeys)\n    serverUtils.filterInternalQuery(originalQuery, combinedParamKeys)\n\n    if (pageIsDynamic) {\n      const queryResult = serverUtils.normalizeDynamicRouteParams(query, true)\n\n      const paramsResult = serverUtils.normalizeDynamicRouteParams(\n        params || {},\n        true\n      )\n      const paramsToInterpolate: ParsedUrlQuery =\n        paramsResult.hasValidParams && params\n          ? params\n          : queryResult.hasValidParams\n            ? query\n            : {}\n\n      req.url = serverUtils.interpolateDynamicPath(\n        req.url || '/',\n        paramsToInterpolate\n      )\n      parsedUrl.pathname = serverUtils.interpolateDynamicPath(\n        parsedUrl.pathname || '/',\n        paramsToInterpolate\n      )\n      originalPathname = serverUtils.interpolateDynamicPath(\n        originalPathname,\n        paramsToInterpolate\n      )\n\n      // try pulling from query if valid\n      if (!params) {\n        if (queryResult.hasValidParams) {\n          params = Object.assign({}, queryResult.params)\n\n          // If we pulled from query remove it so it's\n          // only in params\n          for (const key in serverUtils.defaultRouteMatches) {\n            delete query[key]\n          }\n        } else {\n          // use final params from URL matching\n          const paramsMatch = serverUtils.dynamicRouteMatcher?.(\n            normalizeDataPath(\n              localeResult?.pathname || parsedUrl.pathname || '/'\n            )\n          )\n          // we don't normalize these as they are allowed to be\n          // the literal slug matches here e.g. /blog/[slug]\n          // actually being requested\n          if (paramsMatch) {\n            params = Object.assign({}, paramsMatch)\n          }\n        }\n      }\n    }\n\n    // Remove any normalized params from the query if they\n    // weren't present as non-prefixed query key e.g.\n    // ?search=1&nxtPsearch=hello we don't delete search\n    for (const key of routeParamKeys) {\n      if (!(key in originalQuery)) {\n        delete query[key]\n      }\n    }\n\n    const { isOnDemandRevalidate, revalidateOnlyGenerated } =\n      checkIsOnDemandRevalidate(req, prerenderManifest.preview)\n\n    let isDraftMode = false\n    let previewData: PreviewData\n\n    // preview data relies on non-edge utils\n    if (process.env.NEXT_RUNTIME !== 'edge' && res) {\n      const { tryGetPreviewData } =\n        require('../api-utils/node/try-get-preview-data') as typeof import('../api-utils/node/try-get-preview-data')\n\n      previewData = tryGetPreviewData(\n        req,\n        res,\n        prerenderManifest.preview,\n        Boolean(multiZoneDraftMode)\n      )\n      isDraftMode = previewData !== false\n    }\n\n    const routerServerContext =\n      routerServerGlobal[RouterServerContextSymbol]?.[this.projectDir]\n    const nextConfig =\n      routerServerContext?.nextConfig || serverFilesManifest.config\n\n    const normalizedSrcPage = normalizeAppPath(srcPage)\n    let resolvedPathname =\n      getRequestMeta(req, 'rewroteURL') || normalizedSrcPage\n\n    if (isDynamicRoute(resolvedPathname) && params) {\n      resolvedPathname = serverUtils.interpolateDynamicPath(\n        resolvedPathname,\n        params\n      )\n    }\n\n    if (resolvedPathname === '/index') {\n      resolvedPathname = '/'\n    }\n    try {\n      resolvedPathname = decodePathParams(resolvedPathname)\n    } catch (_) {}\n\n    resolvedPathname = removeTrailingSlash(resolvedPathname)\n\n    return {\n      query,\n      originalQuery,\n      originalPathname,\n      params,\n      parsedUrl,\n      locale,\n      isNextDataRequest,\n      locales: i18n?.locales,\n      defaultLocale,\n      isDraftMode,\n      previewData,\n      pageIsDynamic,\n      resolvedPathname,\n      isOnDemandRevalidate,\n      revalidateOnlyGenerated,\n      ...manifests,\n      serverActionsManifest: manifests.serverActionsManifest,\n      clientReferenceManifest: manifests.clientReferenceManifest,\n      nextConfig,\n      routerServerContext,\n    }\n  }\n\n  public getResponseCache(req: IncomingMessage) {\n    if (!this.responseCache) {\n      const minimalMode = getRequestMeta(req, 'minimalMode') ?? false\n      this.responseCache = new ResponseCache(minimalMode)\n    }\n    return this.responseCache\n  }\n\n  public async handleResponse({\n    req,\n    nextConfig,\n    cacheKey,\n    routeKind,\n    isFallback,\n    prerenderManifest,\n    isRoutePPREnabled,\n    isOnDemandRevalidate,\n    revalidateOnlyGenerated,\n    responseGenerator,\n    waitUntil,\n  }: {\n    req: IncomingMessage\n    nextConfig: NextConfigComplete\n    cacheKey: string | null\n    routeKind: RouteKind\n    isFallback?: boolean\n    prerenderManifest: DeepReadonly<PrerenderManifest>\n    isRoutePPREnabled?: boolean\n    isOnDemandRevalidate?: boolean\n    revalidateOnlyGenerated?: boolean\n    responseGenerator: ResponseGenerator\n    waitUntil?: (prom: Promise<any>) => void\n  }) {\n    const responseCache = this.getResponseCache(req)\n    const cacheEntry = await responseCache.get(cacheKey, responseGenerator, {\n      routeKind,\n      isFallback,\n      isRoutePPREnabled,\n      isOnDemandRevalidate,\n      isPrefetch: req.headers.purpose === 'prefetch',\n      incrementalCache: await this.getIncrementalCache(\n        req,\n        nextConfig,\n        prerenderManifest\n      ),\n      waitUntil,\n    })\n\n    if (!cacheEntry) {\n      if (\n        cacheKey &&\n        // revalidate only generated can bail even if cacheKey is provided\n        !(isOnDemandRevalidate && revalidateOnlyGenerated)\n      ) {\n        // A cache entry might not be generated if a response is written\n        // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n        // have a cache key. If we do have a cache key but we don't end up\n        // with a cache entry, then either Next.js or the application has a\n        // bug that needs fixing.\n        throw new Error('invariant: cache entry required but not generated')\n      }\n    }\n    return cacheEntry\n  }\n}\n","export function isAppRouteRoute(route: string): boolean {\n  return route.endsWith('/route')\n}\n","/**\n * For a given page path, this function ensures that there is no backslash\n * escaping slashes in the path. Example:\n *  - `foo\\/bar\\/baz` -> `foo/bar/baz`\n */\nexport function normalizePathSep(path: string): string {\n  return path.replace(/\\\\/g, '/')\n}\n","import type { Key } from 'next/dist/compiled/path-to-regexp'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { regexpToFunction } from 'next/dist/compiled/path-to-regexp'\n\ninterface Options {\n  /**\n   * A transformer function that will be applied to the regexp generated\n   * from the provided path and path-to-regexp.\n   */\n  regexModifier?: (regex: string) => string\n  /**\n   * When true the function will remove all unnamed parameters\n   * from the matched parameters.\n   */\n  removeUnnamedParams?: boolean\n  /**\n   * When true the regexp won't allow an optional trailing delimiter\n   * to match.\n   */\n  strict?: boolean\n\n  /**\n   * When true the matcher will be case-sensitive, defaults to false\n   */\n  sensitive?: boolean\n}\n\nexport type PatchMatcher = (\n  pathname: string,\n  params?: Record<string, any>\n) => Record<string, any> | false\n\n/**\n * Generates a path matcher function for a given path and options based on\n * path-to-regexp. By default the match will be case insensitive, non strict\n * and delimited by `/`.\n */\nexport function getPathMatch(path: string, options?: Options): PatchMatcher {\n  const keys: Key[] = []\n  const regexp = pathToRegexp(path, keys, {\n    delimiter: '/',\n    sensitive:\n      typeof options?.sensitive === 'boolean' ? options.sensitive : false,\n    strict: options?.strict,\n  })\n\n  const matcher = regexpToFunction<Record<string, any>>(\n    options?.regexModifier\n      ? new RegExp(options.regexModifier(regexp.source), regexp.flags)\n      : regexp,\n    keys\n  )\n\n  /**\n   * A matcher function that will check if a given pathname matches the path\n   * given in the builder function. When the path does not match it will return\n   * `false` but if it does it will return an object with the matched params\n   * merged with the params provided in the second argument.\n   */\n  return (pathname, params) => {\n    // If no pathname is provided it's not a match.\n    if (typeof pathname !== 'string') return false\n\n    const match = matcher(pathname)\n\n    // If the path did not match `false` will be returned.\n    if (!match) return false\n\n    /**\n     * If unnamed params are not allowed they must be removed from\n     * the matched parameters. path-to-regexp uses \"string\" for named and\n     * \"number\" for unnamed parameters.\n     */\n    if (options?.removeUnnamedParams) {\n      for (const key of keys) {\n        if (typeof key.name === 'number') {\n          delete match.params[key.name]\n        }\n      }\n    }\n\n    return { ...params, ...match.params }\n  }\n}\n","import type { NextApiRequestCookies } from '.'\n\n/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */\n\nexport function getCookieParser(headers: {\n  [key: string]: string | string[] | null | undefined\n}): () => NextApiRequestCookies {\n  return function parseCookie(): NextApiRequestCookies {\n    const { cookie } = headers\n\n    if (!cookie) {\n      return {}\n    }\n\n    const { parse: parseCookieFn } =\n      require('next/dist/compiled/cookie') as typeof import('next/dist/compiled/cookie')\n    return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie)\n  }\n}\n","import { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { NEXT_URL } from '../client/components/app-router-headers'\nimport {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from '../shared/lib/router/utils/interception-routes'\nimport type { Rewrite } from './load-custom-routes'\n\n// a function that converts normalised paths (e.g. /foo/[bar]/[baz]) to the format expected by pathToRegexp (e.g. /foo/:bar/:baz)\nfunction toPathToRegexpPath(path: string): string {\n  return path.replace(/\\[\\[?([^\\]]+)\\]\\]?/g, (_, capture) => {\n    // path-to-regexp only supports word characters, so we replace any non-word characters with underscores\n    const paramName = capture.replace(/\\W+/g, '_')\n\n    // handle catch-all segments (e.g. /foo/bar/[...baz] or /foo/bar/[[...baz]])\n    if (capture.startsWith('...')) {\n      return `:${capture.slice(3)}*`\n    }\n    return ':' + paramName\n  })\n}\n\nexport function generateInterceptionRoutesRewrites(\n  appPaths: string[],\n  basePath = ''\n): Rewrite[] {\n  const rewrites: Rewrite[] = []\n\n  for (const appPath of appPaths) {\n    if (isInterceptionRouteAppPath(appPath)) {\n      const { interceptingRoute, interceptedRoute } =\n        extractInterceptionRouteInformation(appPath)\n\n      const normalizedInterceptingRoute = `${\n        interceptingRoute !== '/' ? toPathToRegexpPath(interceptingRoute) : ''\n      }/(.*)?`\n\n      const normalizedInterceptedRoute = toPathToRegexpPath(interceptedRoute)\n      const normalizedAppPath = toPathToRegexpPath(appPath)\n\n      // pathToRegexp returns a regex that matches the path, but we need to\n      // convert it to a string that can be used in a header value\n      // to the format that Next/the proxy expects\n      let interceptingRouteRegex = pathToRegexp(normalizedInterceptingRoute)\n        .toString()\n        .slice(2, -3)\n\n      rewrites.push({\n        source: `${basePath}${normalizedInterceptedRoute}`,\n        destination: `${basePath}${normalizedAppPath}`,\n        has: [\n          {\n            type: 'header',\n            key: NEXT_URL,\n            value: interceptingRouteRegex,\n          },\n        ],\n      })\n    }\n  }\n\n  return rewrites\n}\n\nexport function isInterceptionRouteRewrite(route: Rewrite) {\n  // When we generate interception rewrites in the above implementation, we always do so with only a single `has` condition.\n  return route.has?.[0]?.key === NEXT_URL\n}\n","import type {\n  FlightRouterState,\n  Segment,\n} from '../../../server/app-render/types'\nimport { INTERCEPTION_ROUTE_MARKERS } from '../../../shared/lib/router/utils/interception-routes'\nimport type { Params } from '../../../server/request/params'\nimport {\n  isGroupSegment,\n  DEFAULT_SEGMENT_KEY,\n  PAGE_SEGMENT_KEY,\n} from '../../../shared/lib/segment'\nimport { matchSegment } from '../match-segments'\n\nconst removeLeadingSlash = (segment: string): string => {\n  return segment[0] === '/' ? segment.slice(1) : segment\n}\n\nconst segmentToPathname = (segment: Segment): string => {\n  if (typeof segment === 'string') {\n    // 'children' is not a valid path -- it's technically a parallel route that corresponds with the current segment's page\n    // if we don't skip it, then the computed pathname might be something like `/children` which doesn't make sense.\n    if (segment === 'children') return ''\n\n    return segment\n  }\n\n  return segment[1]\n}\n\nfunction normalizeSegments(segments: string[]): string {\n  return (\n    segments.reduce((acc, segment) => {\n      segment = removeLeadingSlash(segment)\n      if (segment === '' || isGroupSegment(segment)) {\n        return acc\n      }\n\n      return `${acc}/${segment}`\n    }, '') || '/'\n  )\n}\n\nexport function extractPathFromFlightRouterState(\n  flightRouterState: FlightRouterState\n): string | undefined {\n  const segment = Array.isArray(flightRouterState[0])\n    ? flightRouterState[0][1]\n    : flightRouterState[0]\n\n  if (\n    segment === DEFAULT_SEGMENT_KEY ||\n    INTERCEPTION_ROUTE_MARKERS.some((m) => segment.startsWith(m))\n  )\n    return undefined\n\n  if (segment.startsWith(PAGE_SEGMENT_KEY)) return ''\n\n  const segments = [segmentToPathname(segment)]\n  const parallelRoutes = flightRouterState[1] ?? {}\n\n  const childrenPath = parallelRoutes.children\n    ? extractPathFromFlightRouterState(parallelRoutes.children)\n    : undefined\n\n  if (childrenPath !== undefined) {\n    segments.push(childrenPath)\n  } else {\n    for (const [key, value] of Object.entries(parallelRoutes)) {\n      if (key === 'children') continue\n\n      const childPath = extractPathFromFlightRouterState(value)\n\n      if (childPath !== undefined) {\n        segments.push(childPath)\n      }\n    }\n  }\n\n  return normalizeSegments(segments)\n}\n\nfunction computeChangedPathImpl(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const [segmentA, parallelRoutesA] = treeA\n  const [segmentB, parallelRoutesB] = treeB\n\n  const normalizedSegmentA = segmentToPathname(segmentA)\n  const normalizedSegmentB = segmentToPathname(segmentB)\n\n  if (\n    INTERCEPTION_ROUTE_MARKERS.some(\n      (m) =>\n        normalizedSegmentA.startsWith(m) || normalizedSegmentB.startsWith(m)\n    )\n  ) {\n    return ''\n  }\n\n  if (!matchSegment(segmentA, segmentB)) {\n    // once we find where the tree changed, we compute the rest of the path by traversing the tree\n    return extractPathFromFlightRouterState(treeB) ?? ''\n  }\n\n  for (const parallelRouterKey in parallelRoutesA) {\n    if (parallelRoutesB[parallelRouterKey]) {\n      const changedPath = computeChangedPathImpl(\n        parallelRoutesA[parallelRouterKey],\n        parallelRoutesB[parallelRouterKey]\n      )\n      if (changedPath !== null) {\n        return `${segmentToPathname(segmentB)}/${changedPath}`\n      }\n    }\n  }\n\n  return null\n}\n\nexport function computeChangedPath(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const changedPath = computeChangedPathImpl(treeA, treeB)\n\n  if (changedPath == null || changedPath === '/') {\n    return changedPath\n  }\n\n  // lightweight normalization to remove route groups\n  return normalizeSegments(changedPath.split('/'))\n}\n\n/**\n * Recursively extracts dynamic parameters from FlightRouterState.\n */\nexport function getSelectedParams(\n  currentTree: FlightRouterState,\n  params: Params = {}\n): Params {\n  const parallelRoutes = currentTree[1]\n\n  for (const parallelRoute of Object.values(parallelRoutes)) {\n    const segment = parallelRoute[0]\n    const isDynamicParameter = Array.isArray(segment)\n    const segmentValue = isDynamicParameter ? segment[1] : segment\n    if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) continue\n\n    // Ensure catchAll and optional catchall are turned into an array\n    const isCatchAll =\n      isDynamicParameter && (segment[2] === 'c' || segment[2] === 'oc')\n\n    if (isCatchAll) {\n      params[segment[0]] = segment[1].split('/')\n    } else if (isDynamicParameter) {\n      params[segment[0]] = segment[1]\n    }\n\n    params = getSelectedParams(parallelRoute, params)\n  }\n\n  return params\n}\n","import type { FlightRouterState } from './types'\nimport { flightRouterStateSchema } from './types'\nimport { assert } from 'next/dist/compiled/superstruct'\n\nexport function parseAndValidateFlightRouterState(\n  stateHeader: string | string[]\n): FlightRouterState\nexport function parseAndValidateFlightRouterState(\n  stateHeader: undefined\n): undefined\nexport function parseAndValidateFlightRouterState(\n  stateHeader: string | string[] | undefined\n): FlightRouterState | undefined\nexport function parseAndValidateFlightRouterState(\n  stateHeader: string | string[] | undefined\n): FlightRouterState | undefined {\n  if (typeof stateHeader === 'undefined') {\n    return undefined\n  }\n  if (Array.isArray(stateHeader)) {\n    throw new Error(\n      'Multiple router state headers were sent. This is not allowed.'\n    )\n  }\n\n  // We limit the size of the router state header to ~40kb. This is to prevent\n  // a malicious user from sending a very large header and slowing down the\n  // resolving of the router state.\n  // This is around 2,000 nested or parallel route segment states:\n  // '{\"children\":[\"\",{}]}'.length === 20.\n  if (stateHeader.length > 20 * 2000) {\n    throw new Error('The router state header was too large.')\n  }\n\n  try {\n    const state = JSON.parse(decodeURIComponent(stateHeader))\n    assert(state, flightRouterStateSchema)\n    return state\n  } catch {\n    throw new Error('The router state header was sent but could not be parsed.')\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { searchParamsToUrlQuery } from './querystring'\nimport { parseRelativeUrl } from './parse-relative-url'\n\nexport interface ParsedUrl {\n  hash: string\n  hostname?: string | null\n  href: string\n  pathname: string\n  port?: string | null\n  protocol?: string | null\n  query: ParsedUrlQuery\n  search: string\n  slashes: boolean | undefined\n}\n\nexport function parseUrl(url: string): ParsedUrl {\n  if (url.startsWith('/')) {\n    return parseRelativeUrl(url)\n  }\n\n  const parsedURL = new URL(url)\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search,\n    slashes:\n      parsedURL.href.slice(\n        parsedURL.protocol.length,\n        parsedURL.protocol.length + 2\n      ) === '//',\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n  slashes: undefined\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n    // We don't know for relative URLs at this point since we set a custom, internal\n    // base that isn't surfaced to users.\n    slashes: undefined,\n  }\n}\n","import escapePathDelimiters from '../../../shared/lib/router/utils/escape-path-delimiters'\nimport { DecodeError } from '../../../shared/lib/utils'\n\n/**\n * We only encode path delimiters for path segments from\n * getStaticPaths so we need to attempt decoding the URL\n * to match against and only escape the path delimiters\n * this allows non-ascii values to be handled e.g.\n * Japanese characters.\n * */\nfunction decodePathParams(pathname: string): string {\n  // TODO: investigate adding this handling for non-SSG\n  // pages so non-ascii names also work there.\n  return pathname\n    .split('/')\n    .map((seg) => {\n      try {\n        seg = escapePathDelimiters(decodeURIComponent(seg), true)\n      } catch (_) {\n        // An improperly encoded URL was provided\n        throw new DecodeError('Failed to decode path param(s).')\n      }\n      return seg\n    })\n    .join('/')\n}\n\nexport { decodePathParams }\n","// escape delimiters used by path-to-regexp\nexport default function escapePathDelimiters(\n  segment: string,\n  escapeEncoded?: boolean\n): string {\n  return segment.replace(\n    new RegExp(`([/#?]${escapeEncoded ? '|%(2f|23|3f|5c)' : ''})`, 'gi'),\n    (char: string) => encodeURIComponent(char)\n  )\n}\n","import { RequestCookies } from '../cookies'\n\nimport { ResponseCookies } from '../cookies'\nimport { ReflectAdapter } from './reflect'\nimport { workAsyncStorage } from '../../../app-render/work-async-storage.external'\nimport {\n  getExpectedRequestStore,\n  type RequestStore,\n} from '../../../app-render/work-unit-async-storage.external'\n\n/**\n * @internal\n */\nexport class ReadonlyRequestCookiesError extends Error {\n  constructor() {\n    super(\n      'Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#options'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyRequestCookiesError()\n  }\n}\n\n// We use this to type some APIs but we don't construct instances directly\nexport type { ResponseCookies }\n\n// The `cookies()` API is a mix of request and response cookies. For `.get()` methods,\n// we want to return the request cookie if it exists. For mutative methods like `.set()`,\n// we want to return the response cookie.\nexport type ReadonlyRequestCookies = Omit<\n  RequestCookies,\n  'set' | 'clear' | 'delete'\n> &\n  Pick<ResponseCookies, 'set' | 'delete'>\n\nexport class RequestCookiesAdapter {\n  public static seal(cookies: RequestCookies): ReadonlyRequestCookies {\n    return new Proxy(cookies as any, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'clear':\n          case 'delete':\n          case 'set':\n            return ReadonlyRequestCookiesError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n}\n\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies')\n\nexport function getModifiedCookieValues(\n  cookies: ResponseCookies\n): ResponseCookie[] {\n  const modified: ResponseCookie[] | undefined = (cookies as unknown as any)[\n    SYMBOL_MODIFY_COOKIE_VALUES\n  ]\n  if (!modified || !Array.isArray(modified) || modified.length === 0) {\n    return []\n  }\n\n  return modified\n}\n\ntype SetCookieArgs =\n  | [key: string, value: string, cookie?: Partial<ResponseCookie>]\n  | [options: ResponseCookie]\n\nexport function appendMutableCookies(\n  headers: Headers,\n  mutableCookies: ResponseCookies\n): boolean {\n  const modifiedCookieValues = getModifiedCookieValues(mutableCookies)\n  if (modifiedCookieValues.length === 0) {\n    return false\n  }\n\n  // Return a new response that extends the response with\n  // the modified cookies as fallbacks. `res` cookies\n  // will still take precedence.\n  const resCookies = new ResponseCookies(headers)\n  const returnedCookies = resCookies.getAll()\n\n  // Set the modified cookies as fallbacks.\n  for (const cookie of modifiedCookieValues) {\n    resCookies.set(cookie)\n  }\n\n  // Set the original cookies as the final values.\n  for (const cookie of returnedCookies) {\n    resCookies.set(cookie)\n  }\n\n  return true\n}\n\ntype ResponseCookie = NonNullable<\n  ReturnType<InstanceType<typeof ResponseCookies>['get']>\n>\n\nexport class MutableRequestCookiesAdapter {\n  public static wrap(\n    cookies: RequestCookies,\n    onUpdateCookies?: (cookies: string[]) => void\n  ): ResponseCookies {\n    const responseCookies = new ResponseCookies(new Headers())\n    for (const cookie of cookies.getAll()) {\n      responseCookies.set(cookie)\n    }\n\n    let modifiedValues: ResponseCookie[] = []\n    const modifiedCookies = new Set<string>()\n    const updateResponseCookies = () => {\n      // TODO-APP: change method of getting workStore\n      const workStore = workAsyncStorage.getStore()\n      if (workStore) {\n        workStore.pathWasRevalidated = true\n      }\n\n      const allCookies = responseCookies.getAll()\n      modifiedValues = allCookies.filter((c) => modifiedCookies.has(c.name))\n      if (onUpdateCookies) {\n        const serializedCookies: string[] = []\n        for (const cookie of modifiedValues) {\n          const tempCookies = new ResponseCookies(new Headers())\n          tempCookies.set(cookie)\n          serializedCookies.push(tempCookies.toString())\n        }\n\n        onUpdateCookies(serializedCookies)\n      }\n    }\n\n    const wrappedCookies = new Proxy(responseCookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          // A special symbol to get the modified cookie values\n          case SYMBOL_MODIFY_COOKIE_VALUES:\n            return modifiedValues\n\n          // TODO: Throw error if trying to set a cookie after the response\n          // headers have been set.\n          case 'delete':\n            return function (...args: [string] | [ResponseCookie]) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                target.delete(...args)\n                return wrappedCookies\n              } finally {\n                updateResponseCookies()\n              }\n            }\n          case 'set':\n            return function (...args: SetCookieArgs) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                target.set(...args)\n                return wrappedCookies\n              } finally {\n                updateResponseCookies()\n              }\n            }\n\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n\n    return wrappedCookies\n  }\n}\n\nexport function wrapWithMutableAccessCheck(\n  responseCookies: ResponseCookies\n): ResponseCookies {\n  const wrappedCookies = new Proxy(responseCookies, {\n    get(target, prop, receiver) {\n      switch (prop) {\n        case 'delete':\n          return function (...args: [string] | [ResponseCookie]) {\n            ensureCookiesAreStillMutable('cookies().delete')\n            target.delete(...args)\n            return wrappedCookies\n          }\n        case 'set':\n          return function (...args: SetCookieArgs) {\n            ensureCookiesAreStillMutable('cookies().set')\n            target.set(...args)\n            return wrappedCookies\n          }\n\n        default:\n          return ReflectAdapter.get(target, prop, receiver)\n      }\n    },\n  })\n  return wrappedCookies\n}\n\nexport function areCookiesMutableInCurrentPhase(requestStore: RequestStore) {\n  return requestStore.phase === 'action'\n}\n\n/** Ensure that cookies() starts throwing on mutation\n * if we changed phases and can no longer mutate.\n *\n * This can happen when going:\n *   'render' -> 'after'\n *   'action' -> 'render'\n * */\nfunction ensureCookiesAreStillMutable(callingExpression: string) {\n  const requestStore = getExpectedRequestStore(callingExpression)\n  if (!areCookiesMutableInCurrentPhase(requestStore)) {\n    // TODO: maybe we can give a more precise error message based on callingExpression?\n    throw new ReadonlyRequestCookiesError()\n  }\n}\n\nexport function responseCookiesToRequestCookies(\n  responseCookies: ResponseCookies\n): RequestCookies {\n  const requestCookies = new RequestCookies(new Headers())\n  for (const cookie of responseCookies.getAll()) {\n    requestCookies.set(cookie)\n  }\n  return requestCookies\n}\n","import type { IncomingMessage } from 'http'\nimport type { ReadonlyRequestCookies } from '../web/spec-extension/adapters/request-cookies'\nimport type { ResponseCookies } from '../web/spec-extension/cookies'\nimport type { BaseNextRequest } from '../base-http'\nimport type { NextRequest } from '../web/spec-extension/request'\n\nimport {\n  COOKIE_NAME_PRERENDER_BYPASS,\n  checkIsOnDemandRevalidate,\n} from '../api-utils'\nimport type { __ApiPreviewProps } from '../api-utils'\n\nexport class DraftModeProvider {\n  /**\n   * @internal - this declaration is stripped via `tsc --stripInternal`\n   */\n  private _isEnabled: boolean\n\n  /**\n   * @internal - this declaration is stripped via `tsc --stripInternal`\n   */\n  private readonly _previewModeId: string | undefined\n\n  /**\n   * @internal - this declaration is stripped via `tsc --stripInternal`\n   */\n  private readonly _mutableCookies: ResponseCookies\n\n  constructor(\n    previewProps: __ApiPreviewProps | undefined,\n    req: IncomingMessage | BaseNextRequest<unknown> | NextRequest,\n    cookies: ReadonlyRequestCookies,\n    mutableCookies: ResponseCookies\n  ) {\n    // The logic for draftMode() is very similar to tryGetPreviewData()\n    // but Draft Mode does not have any data associated with it.\n    const isOnDemandRevalidate =\n      previewProps &&\n      checkIsOnDemandRevalidate(req, previewProps).isOnDemandRevalidate\n\n    const cookieValue = cookies.get(COOKIE_NAME_PRERENDER_BYPASS)?.value\n\n    this._isEnabled = Boolean(\n      !isOnDemandRevalidate &&\n        cookieValue &&\n        previewProps &&\n        (cookieValue === previewProps.previewModeId ||\n          // In dev mode, the cookie can be actual hash value preview id but the preview props can still be `development-id`.\n          (process.env.NODE_ENV !== 'production' &&\n            previewProps.previewModeId === 'development-id'))\n    )\n\n    this._previewModeId = previewProps?.previewModeId\n    this._mutableCookies = mutableCookies\n  }\n\n  get isEnabled() {\n    return this._isEnabled\n  }\n\n  enable() {\n    if (!this._previewModeId) {\n      throw new Error(\n        'Invariant: previewProps missing previewModeId this should never happen'\n      )\n    }\n\n    this._mutableCookies.set({\n      name: COOKIE_NAME_PRERENDER_BYPASS,\n      value: this._previewModeId,\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n    })\n\n    this._isEnabled = true\n  }\n\n  disable() {\n    // To delete a cookie, set `expires` to a date in the past:\n    // https://tools.ietf.org/html/rfc6265#section-4.1.1\n    // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n    this._mutableCookies.set({\n      name: COOKIE_NAME_PRERENDER_BYPASS,\n      value: '',\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      expires: new Date(0),\n    })\n\n    this._isEnabled = false\n  }\n}\n","import type { BaseNextRequest, BaseNextResponse } from '../base-http'\nimport type { IncomingHttpHeaders } from 'http'\nimport type { RequestStore } from '../app-render/work-unit-async-storage.external'\nimport type { RenderOpts } from '../app-render/types'\nimport type { NextRequest } from '../web/spec-extension/request'\nimport type { __ApiPreviewProps } from '../api-utils'\n\nimport { FLIGHT_HEADERS } from '../../client/components/app-router-headers'\nimport {\n  HeadersAdapter,\n  type ReadonlyHeaders,\n} from '../web/spec-extension/adapters/headers'\nimport {\n  MutableRequestCookiesAdapter,\n  RequestCookiesAdapter,\n  responseCookiesToRequestCookies,\n  wrapWithMutableAccessCheck,\n  type ReadonlyRequestCookies,\n} from '../web/spec-extension/adapters/request-cookies'\nimport { ResponseCookies, RequestCookies } from '../web/spec-extension/cookies'\nimport { DraftModeProvider } from './draft-mode-provider'\nimport { splitCookiesString } from '../web/utils'\nimport type { ServerComponentsHmrCache } from '../response-cache'\nimport type { RenderResumeDataCache } from '../resume-data-cache/resume-data-cache'\nimport type { Params } from '../request/params'\nimport type { ImplicitTags } from '../lib/implicit-tags'\n\nfunction getHeaders(headers: Headers | IncomingHttpHeaders): ReadonlyHeaders {\n  const cleaned = HeadersAdapter.from(headers)\n  for (const header of FLIGHT_HEADERS) {\n    cleaned.delete(header.toLowerCase())\n  }\n\n  return HeadersAdapter.seal(cleaned)\n}\n\nfunction getMutableCookies(\n  headers: Headers | IncomingHttpHeaders,\n  onUpdateCookies?: (cookies: string[]) => void\n): ResponseCookies {\n  const cookies = new RequestCookies(HeadersAdapter.from(headers))\n  return MutableRequestCookiesAdapter.wrap(cookies, onUpdateCookies)\n}\n\nexport type WrapperRenderOpts = Partial<Pick<RenderOpts, 'onUpdateCookies'>> & {\n  previewProps?: __ApiPreviewProps\n}\n\ntype RequestContext = RequestResponsePair & {\n  /**\n   * The URL of the request. This only specifies the pathname and the search\n   * part of the URL. This is only undefined when generating static paths (ie,\n   * there is no request in progress, nor do we know one).\n   */\n  url: {\n    /**\n     * The pathname of the requested URL.\n     */\n    pathname: string\n\n    /**\n     * The search part of the requested URL. If the request did not provide a\n     * search part, this will be an empty string.\n     */\n    search?: string\n  }\n  phase: RequestStore['phase']\n  renderOpts?: WrapperRenderOpts\n  isHmrRefresh?: boolean\n  serverComponentsHmrCache?: ServerComponentsHmrCache\n  implicitTags: ImplicitTags\n}\n\ntype RequestResponsePair =\n  | { req: BaseNextRequest; res: BaseNextResponse } // for an app page\n  | { req: NextRequest; res: undefined } // in an api route or middleware\n\n/**\n * If middleware set cookies in this request (indicated by `x-middleware-set-cookie`),\n * then merge those into the existing cookie object, so that when `cookies()` is accessed\n * it's able to read the newly set cookies.\n */\nfunction mergeMiddlewareCookies(\n  req: RequestContext['req'],\n  existingCookies: RequestCookies | ResponseCookies\n) {\n  if (\n    'x-middleware-set-cookie' in req.headers &&\n    typeof req.headers['x-middleware-set-cookie'] === 'string'\n  ) {\n    const setCookieValue = req.headers['x-middleware-set-cookie']\n    const responseHeaders = new Headers()\n\n    for (const cookie of splitCookiesString(setCookieValue)) {\n      responseHeaders.append('set-cookie', cookie)\n    }\n\n    const responseCookies = new ResponseCookies(responseHeaders)\n\n    // Transfer cookies from ResponseCookies to RequestCookies\n    for (const cookie of responseCookies.getAll()) {\n      existingCookies.set(cookie)\n    }\n  }\n}\n\nexport function createRequestStoreForRender(\n  req: RequestContext['req'],\n  res: RequestContext['res'],\n  url: RequestContext['url'],\n  rootParams: Params,\n  implicitTags: RequestContext['implicitTags'],\n  onUpdateCookies: RenderOpts['onUpdateCookies'],\n  previewProps: WrapperRenderOpts['previewProps'],\n  isHmrRefresh: RequestContext['isHmrRefresh'],\n  serverComponentsHmrCache: RequestContext['serverComponentsHmrCache'],\n  renderResumeDataCache: RenderResumeDataCache | undefined\n): RequestStore {\n  return createRequestStoreImpl(\n    // Pages start in render phase by default\n    'render',\n    req,\n    res,\n    url,\n    rootParams,\n    implicitTags,\n    onUpdateCookies,\n    renderResumeDataCache,\n    previewProps,\n    isHmrRefresh,\n    serverComponentsHmrCache\n  )\n}\n\nexport function createRequestStoreForAPI(\n  req: RequestContext['req'],\n  url: RequestContext['url'],\n  implicitTags: RequestContext['implicitTags'],\n  onUpdateCookies: RenderOpts['onUpdateCookies'],\n  previewProps: WrapperRenderOpts['previewProps']\n): RequestStore {\n  return createRequestStoreImpl(\n    // API routes start in action phase by default\n    'action',\n    req,\n    undefined,\n    url,\n    {},\n    implicitTags,\n    onUpdateCookies,\n    undefined,\n    previewProps,\n    false,\n    undefined\n  )\n}\n\nfunction createRequestStoreImpl(\n  phase: RequestStore['phase'],\n  req: RequestContext['req'],\n  res: RequestContext['res'],\n  url: RequestContext['url'],\n  rootParams: Params,\n  implicitTags: RequestContext['implicitTags'],\n  onUpdateCookies: RenderOpts['onUpdateCookies'],\n  renderResumeDataCache: RenderResumeDataCache | undefined,\n  previewProps: WrapperRenderOpts['previewProps'],\n  isHmrRefresh: RequestContext['isHmrRefresh'],\n  serverComponentsHmrCache: RequestContext['serverComponentsHmrCache']\n): RequestStore {\n  function defaultOnUpdateCookies(cookies: string[]) {\n    if (res) {\n      res.setHeader('Set-Cookie', cookies)\n    }\n  }\n\n  const cache: {\n    headers?: ReadonlyHeaders\n    cookies?: ReadonlyRequestCookies\n    mutableCookies?: ResponseCookies\n    userspaceMutableCookies?: ResponseCookies\n    draftMode?: DraftModeProvider\n  } = {}\n\n  return {\n    type: 'request',\n    phase,\n    implicitTags,\n    // Rather than just using the whole `url` here, we pull the parts we want\n    // to ensure we don't use parts of the URL that we shouldn't. This also\n    // lets us avoid requiring an empty string for `search` in the type.\n    url: { pathname: url.pathname, search: url.search ?? '' },\n    rootParams,\n    get headers() {\n      if (!cache.headers) {\n        // Seal the headers object that'll freeze out any methods that could\n        // mutate the underlying data.\n        cache.headers = getHeaders(req.headers)\n      }\n\n      return cache.headers\n    },\n    get cookies() {\n      if (!cache.cookies) {\n        // if middleware is setting cookie(s), then include those in\n        // the initial cached cookies so they can be read in render\n        const requestCookies = new RequestCookies(\n          HeadersAdapter.from(req.headers)\n        )\n\n        mergeMiddlewareCookies(req, requestCookies)\n\n        // Seal the cookies object that'll freeze out any methods that could\n        // mutate the underlying data.\n        cache.cookies = RequestCookiesAdapter.seal(requestCookies)\n      }\n\n      return cache.cookies\n    },\n    set cookies(value: ReadonlyRequestCookies) {\n      cache.cookies = value\n    },\n    get mutableCookies() {\n      if (!cache.mutableCookies) {\n        const mutableCookies = getMutableCookies(\n          req.headers,\n          onUpdateCookies || (res ? defaultOnUpdateCookies : undefined)\n        )\n\n        mergeMiddlewareCookies(req, mutableCookies)\n\n        cache.mutableCookies = mutableCookies\n      }\n      return cache.mutableCookies\n    },\n    get userspaceMutableCookies() {\n      if (!cache.userspaceMutableCookies) {\n        const userspaceMutableCookies = wrapWithMutableAccessCheck(\n          this.mutableCookies\n        )\n        cache.userspaceMutableCookies = userspaceMutableCookies\n      }\n      return cache.userspaceMutableCookies\n    },\n    get draftMode() {\n      if (!cache.draftMode) {\n        cache.draftMode = new DraftModeProvider(\n          previewProps,\n          req,\n          this.cookies,\n          this.mutableCookies\n        )\n      }\n\n      return cache.draftMode\n    },\n    renderResumeDataCache: renderResumeDataCache ?? null,\n    isHmrRefresh,\n    serverComponentsHmrCache:\n      serverComponentsHmrCache ||\n      (globalThis as any).__serverComponentsHmrCache,\n  }\n}\n\nexport function synchronizeMutableCookies(store: RequestStore) {\n  // TODO: does this need to update headers as well?\n  store.cookies = RequestCookiesAdapter.seal(\n    responseCookiesToRequestCookies(store.mutableCookies)\n  )\n}\n","import type { WorkStore } from './app-render/work-async-storage.external'\nimport type { IncrementalCache } from './lib/incremental-cache'\nimport { getCacheHandlers } from './use-cache/handlers'\n\n/** Run a callback, and execute any *new* revalidations added during its runtime. */\nexport async function withExecuteRevalidates<T>(\n  store: WorkStore | undefined,\n  callback: () => Promise<T>\n): Promise<T> {\n  if (!store) {\n    return callback()\n  }\n  // If we executed any revalidates during the request, then we don't want to execute them again.\n  // save the state so we can check if anything changed after we're done running callbacks.\n  const savedRevalidationState = cloneRevalidationState(store)\n  try {\n    return await callback()\n  } finally {\n    // Check if we have any new revalidates, and if so, wait until they are all resolved.\n    const newRevalidates = diffRevalidationState(\n      savedRevalidationState,\n      cloneRevalidationState(store)\n    )\n    await executeRevalidates(store, newRevalidates)\n  }\n}\n\ntype RevalidationState = Required<\n  Pick<\n    WorkStore,\n    'pendingRevalidatedTags' | 'pendingRevalidates' | 'pendingRevalidateWrites'\n  >\n>\n\nfunction cloneRevalidationState(store: WorkStore): RevalidationState {\n  return {\n    pendingRevalidatedTags: store.pendingRevalidatedTags\n      ? [...store.pendingRevalidatedTags]\n      : [],\n    pendingRevalidates: { ...store.pendingRevalidates },\n    pendingRevalidateWrites: store.pendingRevalidateWrites\n      ? [...store.pendingRevalidateWrites]\n      : [],\n  }\n}\n\nfunction diffRevalidationState(\n  prev: RevalidationState,\n  curr: RevalidationState\n): RevalidationState {\n  const prevTags = new Set(prev.pendingRevalidatedTags)\n  const prevRevalidateWrites = new Set(prev.pendingRevalidateWrites)\n  return {\n    pendingRevalidatedTags: curr.pendingRevalidatedTags.filter(\n      (tag) => !prevTags.has(tag)\n    ),\n    pendingRevalidates: Object.fromEntries(\n      Object.entries(curr.pendingRevalidates).filter(\n        ([key]) => !(key in prev.pendingRevalidates)\n      )\n    ),\n    pendingRevalidateWrites: curr.pendingRevalidateWrites.filter(\n      (promise) => !prevRevalidateWrites.has(promise)\n    ),\n  }\n}\n\nasync function revalidateTags(\n  tags: string[],\n  incrementalCache: IncrementalCache | undefined\n): Promise<void> {\n  if (tags.length === 0) {\n    return\n  }\n\n  const promises: Promise<void>[] = []\n\n  if (incrementalCache) {\n    promises.push(incrementalCache.revalidateTag(tags))\n  }\n\n  const handlers = getCacheHandlers()\n  if (handlers) {\n    for (const handler of handlers) {\n      promises.push(handler.expireTags(...tags))\n    }\n  }\n\n  await Promise.all(promises)\n}\n\nexport async function executeRevalidates(\n  workStore: WorkStore,\n  state?: RevalidationState\n) {\n  const pendingRevalidatedTags =\n    state?.pendingRevalidatedTags ?? workStore.pendingRevalidatedTags ?? []\n\n  const pendingRevalidates =\n    state?.pendingRevalidates ?? workStore.pendingRevalidates ?? {}\n\n  const pendingRevalidateWrites =\n    state?.pendingRevalidateWrites ?? workStore.pendingRevalidateWrites ?? []\n\n  return Promise.all([\n    revalidateTags(pendingRevalidatedTags, workStore.incrementalCache),\n    ...Object.values(pendingRevalidates),\n    ...pendingRevalidateWrites,\n  ])\n}\n","import type { AsyncLocalStorage } from 'async_hooks'\n\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\n  'Invariant: AsyncLocalStorage accessed in runtime where it is not available'\n)\n\nclass FakeAsyncLocalStorage<Store extends {}>\n  implements AsyncLocalStorage<Store>\n{\n  disable(): void {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  getStore(): Store | undefined {\n    // This fake implementation of AsyncLocalStorage always returns `undefined`.\n    return undefined\n  }\n\n  run<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  exit<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  enterWith(): void {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  static bind<T>(fn: T): T {\n    return fn\n  }\n}\n\nconst maybeGlobalAsyncLocalStorage =\n  typeof globalThis !== 'undefined' && (globalThis as any).AsyncLocalStorage\n\nexport function createAsyncLocalStorage<\n  Store extends {},\n>(): AsyncLocalStorage<Store> {\n  if (maybeGlobalAsyncLocalStorage) {\n    return new maybeGlobalAsyncLocalStorage()\n  }\n  return new FakeAsyncLocalStorage()\n}\n\nexport function bindSnapshot<T>(fn: T): T {\n  if (maybeGlobalAsyncLocalStorage) {\n    return maybeGlobalAsyncLocalStorage.bind(fn)\n  }\n  return FakeAsyncLocalStorage.bind(fn)\n}\n\nexport function createSnapshot(): <R, TArgs extends any[]>(\n  fn: (...args: TArgs) => R,\n  ...args: TArgs\n) => R {\n  if (maybeGlobalAsyncLocalStorage) {\n    return maybeGlobalAsyncLocalStorage.snapshot()\n  }\n  return function (fn: any, ...args: any[]) {\n    return fn(...args)\n  }\n}\n","import PromiseQueue from 'next/dist/compiled/p-queue'\nimport type { RequestLifecycleOpts } from '../base-server'\nimport type { AfterCallback, AfterTask } from './after'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { isThenable } from '../../shared/lib/is-thenable'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { withExecuteRevalidates } from '../revalidation-utils'\nimport { bindSnapshot } from '../app-render/async-local-storage'\nimport {\n  workUnitAsyncStorage,\n  type WorkUnitStore,\n} from '../app-render/work-unit-async-storage.external'\nimport { afterTaskAsyncStorage } from '../app-render/after-task-async-storage.external'\n\nexport type AfterContextOpts = {\n  waitUntil: RequestLifecycleOpts['waitUntil'] | undefined\n  onClose: RequestLifecycleOpts['onClose']\n  onTaskError: RequestLifecycleOpts['onAfterTaskError'] | undefined\n}\n\nexport class AfterContext {\n  private waitUntil: RequestLifecycleOpts['waitUntil'] | undefined\n  private onClose: RequestLifecycleOpts['onClose']\n  private onTaskError: RequestLifecycleOpts['onAfterTaskError'] | undefined\n\n  private runCallbacksOnClosePromise: Promise<void> | undefined\n  private callbackQueue: PromiseQueue\n  private workUnitStores = new Set<WorkUnitStore>()\n\n  constructor({ waitUntil, onClose, onTaskError }: AfterContextOpts) {\n    this.waitUntil = waitUntil\n    this.onClose = onClose\n    this.onTaskError = onTaskError\n\n    this.callbackQueue = new PromiseQueue()\n    this.callbackQueue.pause()\n  }\n\n  public after(task: AfterTask): void {\n    if (isThenable(task)) {\n      if (!this.waitUntil) {\n        errorWaitUntilNotAvailable()\n      }\n      this.waitUntil(\n        task.catch((error) => this.reportTaskError('promise', error))\n      )\n    } else if (typeof task === 'function') {\n      // TODO(after): implement tracing\n      this.addCallback(task)\n    } else {\n      throw new Error('`after()`: Argument must be a promise or a function')\n    }\n  }\n\n  private addCallback(callback: AfterCallback) {\n    // if something is wrong, throw synchronously, bubbling up to the `after` callsite.\n    if (!this.waitUntil) {\n      errorWaitUntilNotAvailable()\n    }\n\n    const workUnitStore = workUnitAsyncStorage.getStore()\n    if (workUnitStore) {\n      this.workUnitStores.add(workUnitStore)\n    }\n\n    const afterTaskStore = afterTaskAsyncStorage.getStore()\n\n    // This is used for checking if request APIs can be called inside `after`.\n    // Note that we need to check the phase in which the *topmost* `after` was called (which should be \"action\"),\n    // not the current phase (which might be \"after\" if we're in a nested after).\n    // Otherwise, we might allow `after(() => headers())`, but not `after(() => after(() => headers()))`.\n    const rootTaskSpawnPhase = afterTaskStore\n      ? afterTaskStore.rootTaskSpawnPhase // nested after\n      : workUnitStore?.phase // topmost after\n\n    // this should only happen once.\n    if (!this.runCallbacksOnClosePromise) {\n      this.runCallbacksOnClosePromise = this.runCallbacksOnClose()\n      this.waitUntil(this.runCallbacksOnClosePromise)\n    }\n\n    // Bind the callback to the current execution context (i.e. preserve all currently available ALS-es).\n    // We do this because we want all of these to be equivalent in every regard except timing:\n    //   after(() => x())\n    //   after(x())\n    //   await x()\n    const wrappedCallback = bindSnapshot(async () => {\n      try {\n        await afterTaskAsyncStorage.run({ rootTaskSpawnPhase }, () =>\n          callback()\n        )\n      } catch (error) {\n        this.reportTaskError('function', error)\n      }\n    })\n\n    this.callbackQueue.add(wrappedCallback)\n  }\n\n  private async runCallbacksOnClose() {\n    await new Promise<void>((resolve) => this.onClose!(resolve))\n    return this.runCallbacks()\n  }\n\n  private async runCallbacks(): Promise<void> {\n    if (this.callbackQueue.size === 0) return\n\n    for (const workUnitStore of this.workUnitStores) {\n      workUnitStore.phase = 'after'\n    }\n\n    const workStore = workAsyncStorage.getStore()\n    if (!workStore) {\n      throw new InvariantError('Missing workStore in AfterContext.runCallbacks')\n    }\n\n    return withExecuteRevalidates(workStore, () => {\n      this.callbackQueue.start()\n      return this.callbackQueue.onIdle()\n    })\n  }\n\n  private reportTaskError(taskKind: 'promise' | 'function', error: unknown) {\n    // TODO(after): this is fine for now, but will need better intergration with our error reporting.\n    // TODO(after): should we log this if we have a onTaskError callback?\n    console.error(\n      taskKind === 'promise'\n        ? `A promise passed to \\`after()\\` rejected:`\n        : `An error occurred in a function passed to \\`after()\\`:`,\n      error\n    )\n    if (this.onTaskError) {\n      // this is very defensive, but we really don't want anything to blow up in an error handler\n      try {\n        this.onTaskError?.(error)\n      } catch (handlerError) {\n        console.error(\n          new InvariantError(\n            '`onTaskError` threw while handling an error thrown from an `after` task',\n            {\n              cause: handlerError,\n            }\n          )\n        )\n      }\n    }\n  }\n}\n\nfunction errorWaitUntilNotAvailable(): never {\n  throw new Error(\n    '`after()` will not work correctly, because `waitUntil` is not available in the current environment.'\n  )\n}\n","/**\n * Check to see if a value is Thenable.\n *\n * @param promise the maybe-thenable value\n * @returns true if the value is thenable\n */\nexport function isThenable<T = unknown>(\n  promise: Promise<T> | T\n): promise is Promise<T> {\n  return (\n    promise !== null &&\n    typeof promise === 'object' &&\n    'then' in promise &&\n    typeof promise.then === 'function'\n  )\n}\n","export type LazyResult<TValue> = PromiseLike<TValue> & { value?: TValue }\nexport type ResolvedLazyResult<TValue> = PromiseLike<TValue> & { value: TValue }\n\n/**\n * Calls the given async function only when the returned promise-like object is\n * awaited. Afterwards, it provides the resolved value synchronously as `value`\n * property.\n */\nexport function createLazyResult<TValue>(\n  fn: () => Promise<TValue>\n): LazyResult<TValue> {\n  let pendingResult: Promise<TValue> | undefined\n\n  const result: LazyResult<TValue> = {\n    then(onfulfilled, onrejected) {\n      if (!pendingResult) {\n        pendingResult = fn()\n      }\n\n      pendingResult\n        .then((value) => {\n          result.value = value\n        })\n        .catch(() => {\n          // The externally awaited result will be rejected via `onrejected`. We\n          // don't need to handle it here. But we do want to avoid an unhandled\n          // rejection.\n        })\n\n      return pendingResult.then(onfulfilled, onrejected)\n    },\n  }\n\n  return result\n}\n\nexport function isResolvedLazyResult<TValue>(\n  result: LazyResult<TValue>\n): result is ResolvedLazyResult<TValue> {\n  return result.hasOwnProperty('value')\n}\n","/**\n * List of valid HTTP methods that can be implemented by Next.js's Custom App\n * Routes.\n */\nexport const HTTP_METHODS = [\n  'GET',\n  'HEAD',\n  'OPTIONS',\n  'POST',\n  'PUT',\n  'DELETE',\n  'PATCH',\n] as const\n\n/**\n * A type representing the valid HTTP methods that can be implemented by\n * Next.js's Custom App Routes.\n */\nexport type HTTP_METHOD = (typeof HTTP_METHODS)[number]\n\n/**\n * Checks to see if the passed string is an HTTP method. Note that this is case\n * sensitive.\n *\n * @param maybeMethod the string that may be an HTTP method\n * @returns true if the string is an HTTP method\n */\nexport function isHTTPMethod(maybeMethod: string): maybeMethod is HTTP_METHOD {\n  return HTTP_METHODS.includes(maybeMethod as HTTP_METHOD)\n}\n","import { NEXT_CACHE_IMPLICIT_TAG_ID } from '../../lib/constants'\nimport type { FallbackRouteParams } from '../request/fallback-params'\nimport { getCacheHandlerEntries } from '../use-cache/handlers'\nimport { createLazyResult, type LazyResult } from './lazy-result'\n\nexport interface ImplicitTags {\n  /**\n   * For legacy usage, the implicit tags are passed to the incremental cache\n   * handler in `get` calls.\n   */\n  readonly tags: string[]\n\n  /**\n   * Modern cache handlers don't receive implicit tags. Instead, the implicit\n   * tags' expirations are stored in the work unit store, and used to compare\n   * with a cache entry's timestamp.\n   *\n   * Note: This map contains lazy results so that we can evaluate them when the\n   * first cache entry is read. It allows us to skip fetching the expiration\n   * values if no caches are read at all.\n   */\n  readonly expirationsByCacheKind: Map<string, LazyResult<number>>\n}\n\nconst getDerivedTags = (pathname: string): string[] => {\n  const derivedTags: string[] = [`/layout`]\n\n  // we automatically add the current path segments as tags\n  // for revalidatePath handling\n  if (pathname.startsWith('/')) {\n    const pathnameParts = pathname.split('/')\n\n    for (let i = 1; i < pathnameParts.length + 1; i++) {\n      let curPathname = pathnameParts.slice(0, i).join('/')\n\n      if (curPathname) {\n        // all derived tags other than the page are layout tags\n        if (!curPathname.endsWith('/page') && !curPathname.endsWith('/route')) {\n          curPathname = `${curPathname}${\n            !curPathname.endsWith('/') ? '/' : ''\n          }layout`\n        }\n        derivedTags.push(curPathname)\n      }\n    }\n  }\n  return derivedTags\n}\n\n/**\n * Creates a map with lazy results that fetch the expiration value for the given\n * tags and respective cache kind when they're awaited for the first time.\n */\nfunction createTagsExpirationsByCacheKind(\n  tags: string[]\n): Map<string, LazyResult<number>> {\n  const expirationsByCacheKind = new Map<string, LazyResult<number>>()\n  const cacheHandlers = getCacheHandlerEntries()\n\n  if (cacheHandlers) {\n    for (const [kind, cacheHandler] of cacheHandlers) {\n      if ('getExpiration' in cacheHandler) {\n        expirationsByCacheKind.set(\n          kind,\n          createLazyResult(async () => cacheHandler.getExpiration(...tags))\n        )\n      }\n    }\n  }\n\n  return expirationsByCacheKind\n}\n\nexport async function getImplicitTags(\n  page: string,\n  url: {\n    pathname: string\n    search?: string\n  },\n  fallbackRouteParams: null | FallbackRouteParams\n): Promise<ImplicitTags> {\n  const tags: string[] = []\n  const hasFallbackRouteParams =\n    fallbackRouteParams && fallbackRouteParams.size > 0\n\n  // Add the derived tags from the page.\n  const derivedTags = getDerivedTags(page)\n  for (let tag of derivedTags) {\n    tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${tag}`\n    tags.push(tag)\n  }\n\n  // Add the tags from the pathname. If the route has unknown params, we don't\n  // want to add the pathname as a tag, as it will be invalid.\n  if (url.pathname && !hasFallbackRouteParams) {\n    const tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${url.pathname}`\n    tags.push(tag)\n  }\n\n  return {\n    tags,\n    expirationsByCacheKind: createTagsExpirationsByCacheKind(tags),\n  }\n}\n","const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n","const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n","export function isHangingPromiseRejectionError(\n  err: unknown\n): err is HangingPromiseRejectionError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === HANGING_PROMISE_REJECTION\n}\n\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION'\n\nclass HangingPromiseRejectionError extends Error {\n  public readonly digest = HANGING_PROMISE_REJECTION\n\n  constructor(public readonly expression: string) {\n    super(\n      `During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context.`\n    )\n  }\n}\n\ntype AbortListeners = Array<(err: unknown) => void>\nconst abortListenersBySignal = new WeakMap<AbortSignal, AbortListeners>()\n\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for dynamicIO where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */\nexport function makeHangingPromise<T>(\n  signal: AbortSignal,\n  expression: string\n): Promise<T> {\n  if (signal.aborted) {\n    return Promise.reject(new HangingPromiseRejectionError(expression))\n  } else {\n    const hangingPromise = new Promise<T>((_, reject) => {\n      const boundRejection = reject.bind(\n        null,\n        new HangingPromiseRejectionError(expression)\n      )\n      let currentListeners = abortListenersBySignal.get(signal)\n      if (currentListeners) {\n        currentListeners.push(boundRejection)\n      } else {\n        const listeners = [boundRejection]\n        abortListenersBySignal.set(signal, listeners)\n        signal.addEventListener(\n          'abort',\n          () => {\n            for (let i = 0; i < listeners.length; i++) {\n              listeners[i]()\n            }\n          },\n          { once: true }\n        )\n      }\n    })\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject)\n    return hangingPromise\n  }\n}\n\nfunction ignoreReject() {}\n","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n} from '../../lib/metadata/metadata-constants'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicErrorWithStack: null | Error\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspenseAboveBody: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasAllowedDynamic: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspenseAboveBody: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasAllowedDynamic: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    if (\n      workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache'\n    ) {\n      // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n      // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n      // forbidden inside a cache scope.\n      return\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    if (workUnitStore.type === 'prerender-ppr') {\n      postponeWithTracking(\n        store.route,\n        expression,\n        workUnitStore.dynamicTracking\n      )\n    } else if (workUnitStore.type === 'prerender-legacy') {\n      workUnitStore.revalidate = 0\n\n      // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n      const err = new DynamicServerError(\n        `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n      )\n      store.dynamicUsageDescription = expression\n      store.dynamicUsageStack = err.stack\n\n      throw err\n    } else if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n}\n\n/**\n * This function communicates that some dynamic path parameter was read. This\n * differs from the more general `trackDynamicDataAccessed` in that it is will\n * not error when `dynamic = \"error\"` is set.\n *\n * @param store The static generation store\n * @param expression The expression that was accessed dynamically\n */\nexport function trackFallbackParamAccessed(\n  store: WorkStore,\n  expression: string\n): void {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return\n\n  postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking)\n}\n\n/**\n * This function is meant to be used when prerendering without dynamicIO or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(\n  _store: WorkStore,\n  workUnitStore: void | WorkUnitStore\n) {\n  if (workUnitStore) {\n    if (\n      workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache'\n    ) {\n      // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n      // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n      // forbidden inside a cache scope.\n      return\n    }\n    // TODO: it makes no sense to have these work unit store types during a dev render.\n    if (\n      workUnitStore.type === 'prerender' ||\n      workUnitStore.type === 'prerender-client' ||\n      workUnitStore.type === 'prerender-legacy'\n    ) {\n      workUnitStore.revalidate = 0\n    }\n    if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n}\n\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  // It is important that we set this tracking value after aborting. Aborts are executed\n  // synchronously except for the case where you abort during render itself. By setting this\n  // value late we can use it to determine if any of the aborted tasks are the task that\n  // called the sync IO expression in the first place.\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of prerender mode\n  requestStore.prerenderPhase = false\n}\n\n/**\n * use this function when prerendering with dynamicIO. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in dynamicIO mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const prerenderSignal = prerenderStore.controller.signal\n  if (prerenderSignal.aborted === false) {\n    // TODO it would be better to move this aborted check into the callsite so we can avoid making\n    // the error object when it isn't relevant to the aborting of the prerender however\n    // since we need the throw semantics regardless of whether we abort it is easier to land\n    // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n    // to ideal implementation\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n    // It is important that we set this tracking value after aborting. Aborts are executed\n    // synchronously except for the case where you abort during render itself. By setting this\n    // value late we can use it to determine if any of the aborted tasks are the task that\n    // called the sync IO expression in the first place.\n    const dynamicTracking = prerenderStore.dynamicTracking\n    if (dynamicTracking) {\n      if (dynamicTracking.syncDynamicErrorWithStack === null) {\n        dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n      }\n    }\n  }\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev =\n  trackSynchronousPlatformIOAccessInDev\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createPostponedAbortSignal(reason: string): AbortSignal {\n  assertPostpone()\n  const controller = new AbortController()\n  // We get our hands on a postpone instance by calling postpone and catching the throw\n  try {\n    React.unstable_postpone(reason)\n  } catch (x: unknown) {\n    controller.abort(x)\n  }\n  return controller.signal\n}\n\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */\nexport function createHangingInputAbortSignal(\n  workUnitStore: PrerenderStoreModern\n): AbortSignal {\n  const controller = new AbortController()\n\n  if (workUnitStore.cacheSignal) {\n    // If we have a cacheSignal it means we're in a prospective render. If the input\n    // we're waiting on is coming from another cache, we do want to wait for it so that\n    // we can resolve this cache entry too.\n    workUnitStore.cacheSignal.inputReady().then(() => {\n      controller.abort()\n    })\n  } else {\n    // Otherwise we're in the final render and we should already have all our caches\n    // filled. We might still be waiting on some microtasks so we wait one tick before\n    // giving up. When we give up, we still want to render the content of this cache\n    // as deeply as we can so that we can suspend as deeply as possible in the tree\n    // or not at all if we don't end up waiting for the input.\n    scheduleOnNextTick(() => controller.abort())\n  }\n\n  return controller.signal\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n\n  if (\n    workStore &&\n    workStore.isStaticGeneration &&\n    workStore.fallbackRouteParams &&\n    workStore.fallbackRouteParams.size > 0\n  ) {\n    // There are fallback route params, we should track these as dynamic\n    // accesses.\n    const workUnitStore = workUnitAsyncStorage.getStore()\n    if (workUnitStore) {\n      // We're prerendering with dynamicIO or PPR or both\n      if (workUnitStore.type === 'prerender-client') {\n        // We are in a prerender with dynamicIO semantics\n        // We are going to hang here and never resolve. This will cause the currently\n        // rendering component to effectively be a dynamic hole\n        React.use(makeHangingPromise(workUnitStore.renderSignal, expression))\n      } else if (workUnitStore.type === 'prerender-ppr') {\n        // We're prerendering with PPR\n        postponeWithTracking(\n          workStore.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      } else if (workUnitStore.type === 'prerender-legacy') {\n        throwToInterruptStaticGeneration(expression, workStore, workUnitStore)\n      }\n    }\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\nconst hasSuspenseAfterBodyOrHtmlRegex =\n  /\\n\\s+at (?:body|html) \\(<anonymous>\\)[\\s\\S]*?\\n\\s+at Suspense \\(<anonymous>\\)/\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  workStore: WorkStore,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (hasSuspenseAfterBodyOrHtmlRegex.test(componentStack)) {\n    // This prerender has a Suspense boundary above the body which\n    // effectively opts the page into allowing 100% dynamic rendering\n    dynamicValidation.hasAllowedDynamic = true\n    dynamicValidation.hasSuspenseAboveBody = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    // this error had a Suspense boundary above it so we don't need to report it as a source\n    // of disallowed\n    dynamicValidation.hasAllowedDynamic = true\n    return\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    // This task was the task that called the sync error.\n    dynamicValidation.dynamicErrors.push(\n      clientDynamic.syncDynamicErrorWithStack\n    )\n    return\n  } else {\n    const message = `Route \"${workStore.route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`\n    const error = createErrorWithComponentOrOwnerStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\n/**\n * In dev mode, we prefer using the owner stack, otherwise the provided\n * component stack is used.\n */\nfunction createErrorWithComponentOrOwnerStack(\n  message: string,\n  componentStack: string\n) {\n  const ownerStack =\n    process.env.NODE_ENV !== 'production' && React.captureOwnerStack\n      ? React.captureOwnerStack()\n      : null\n\n  const error = new Error(message)\n  error.stack = error.name + ': ' + message + (ownerStack ?? componentStack)\n  return error\n}\n\nexport enum PreludeState {\n  Full = 0,\n  Empty = 1,\n  Errored = 2,\n}\n\nfunction logDisallowedDynamicError(workStore: WorkStore, error: Error): void {\n  console.error(error)\n\n  if (!workStore.dev) {\n    if (workStore.hasReadableErrorStacks) {\n      console.error(\n        `To get a more detailed stack trace and pinpoint the issue, start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.`\n      )\n    } else {\n      console.error(`To get a more detailed stack trace and pinpoint the issue, try one of the following:\n  - Start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.\n  - Rerun the production build with \\`next build --debug-prerender\\` to generate better stack traces.`)\n    }\n  }\n}\n\nexport function throwIfDisallowedDynamic(\n  workStore: WorkStore,\n  prelude: PreludeState,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState\n): void {\n  if (workStore.invalidDynamicUsageError) {\n    logDisallowedDynamicError(workStore, workStore.invalidDynamicUsageError)\n    throw new StaticGenBailoutError()\n  }\n\n  if (prelude !== PreludeState.Full) {\n    if (dynamicValidation.hasSuspenseAboveBody) {\n      // This route has opted into allowing fully dynamic rendering\n      // by including a Suspense boundary above the body. In this case\n      // a lack of a shell is not considered disallowed so we simply return\n      return\n    }\n\n    if (serverDynamic.syncDynamicErrorWithStack) {\n      // There is no shell and the server did something sync dynamic likely\n      // leading to an early termination of the prerender before the shell\n      // could be completed. We terminate the build/validating render.\n      logDisallowedDynamicError(\n        workStore,\n        serverDynamic.syncDynamicErrorWithStack\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    // We didn't have any sync bailouts but there may be user code which\n    // blocked the root. We would have captured these during the prerender\n    // and can log them here and then terminate the build/validating render\n    const dynamicErrors = dynamicValidation.dynamicErrors\n    if (dynamicErrors.length > 0) {\n      for (let i = 0; i < dynamicErrors.length; i++) {\n        logDisallowedDynamicError(workStore, dynamicErrors[i])\n      }\n\n      throw new StaticGenBailoutError()\n    }\n\n    // If we got this far then the only other thing that could be blocking\n    // the root is dynamic Viewport. If this is dynamic then\n    // you need to opt into that by adding a Suspense boundary above the body\n    // to indicate your are ok with fully dynamic rendering.\n    if (dynamicValidation.hasDynamicViewport) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) without explicitly allowing fully dynamic rendering. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-viewport`\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    if (prelude === PreludeState.Empty) {\n      // If we ever get this far then we messed up the tracking of invalid dynamic.\n      // We still adhere to the constraint that you must produce a shell but invite the\n      // user to report this as a bug in Next.js.\n      console.error(\n        `Route \"${workStore.route}\" did not produce a static shell and Next.js was unable to determine a reason. This is a bug in Next.js.`\n      )\n      throw new StaticGenBailoutError()\n    }\n  } else {\n    if (\n      dynamicValidation.hasAllowedDynamic === false &&\n      dynamicValidation.hasDynamicMetadata\n    ) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) when the rest of the route does not. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-metadata`\n      )\n      throw new StaticGenBailoutError()\n    }\n  }\n}\n","/**\n * Clones a response by teeing the body so we can return two independent\n * ReadableStreams from it. This avoids the bug in the undici library around\n * response cloning.\n *\n * After cloning, the original response's body will be consumed and closed.\n *\n * @see https://github.com/vercel/next.js/pull/73274\n *\n * @param original - The original response to clone.\n * @returns A tuple containing two independent clones of the original response.\n */\nexport function cloneResponse(original: Response): [Response, Response] {\n  // If the response has no body, then we can just return the original response\n  // twice because it's immutable.\n  if (!original.body) {\n    return [original, original]\n  }\n\n  const [body1, body2] = original.body.tee()\n\n  const cloned1 = new Response(body1, {\n    status: original.status,\n    statusText: original.statusText,\n    headers: original.headers,\n  })\n\n  Object.defineProperty(cloned1, 'url', {\n    value: original.url,\n    // How the original response.url behaves\n    configurable: true,\n    enumerable: true,\n    writable: false,\n  })\n\n  const cloned2 = new Response(body2, {\n    status: original.status,\n    statusText: original.statusText,\n    headers: original.headers,\n  })\n\n  Object.defineProperty(cloned2, 'url', {\n    value: original.url,\n    // How the original response.url behaves\n    configurable: true,\n    enumerable: true,\n    writable: false,\n  })\n\n  return [cloned1, cloned2]\n}\n","import type {\n  WorkAsyncStorage,\n  WorkStore,\n} from '../app-render/work-async-storage.external'\n\nimport { AppRenderSpan, NextNodeServerSpan } from './trace/constants'\nimport { getTracer, SpanKind } from './trace/tracer'\nimport {\n  CACHE_ONE_YEAR,\n  INFINITE_CACHE,\n  NEXT_CACHE_TAG_MAX_ITEMS,\n  NEXT_CACHE_TAG_MAX_LENGTH,\n} from '../../lib/constants'\nimport { markCurrentScopeAsDynamic } from '../app-render/dynamic-rendering'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport type { FetchMetric } from '../base-http'\nimport { createDedupeFetch } from './dedupe-fetch'\nimport type { WorkUnitAsyncStorage } from '../app-render/work-unit-async-storage.external'\nimport {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedFetchData,\n} from '../response-cache'\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler'\nimport { cloneResponse } from './clone-response'\n\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge'\n\ntype Fetcher = typeof fetch\n\ntype PatchedFetcher = Fetcher & {\n  readonly __nextPatched: true\n  readonly __nextGetStaticStore: () => WorkAsyncStorage\n  readonly _nextOriginalFetch: Fetcher\n}\n\nexport const NEXT_PATCH_SYMBOL = Symbol.for('next-patch')\n\nfunction isFetchPatched() {\n  return (globalThis as Record<symbol, unknown>)[NEXT_PATCH_SYMBOL] === true\n}\n\nexport function validateRevalidate(\n  revalidateVal: unknown,\n  route: string\n): undefined | number {\n  try {\n    let normalizedRevalidate: number | undefined = undefined\n\n    if (revalidateVal === false) {\n      normalizedRevalidate = INFINITE_CACHE\n    } else if (\n      typeof revalidateVal === 'number' &&\n      !isNaN(revalidateVal) &&\n      revalidateVal > -1\n    ) {\n      normalizedRevalidate = revalidateVal\n    } else if (typeof revalidateVal !== 'undefined') {\n      throw new Error(\n        `Invalid revalidate value \"${revalidateVal}\" on \"${route}\", must be a non-negative number or false`\n      )\n    }\n    return normalizedRevalidate\n  } catch (err: any) {\n    // handle client component error from attempting to check revalidate value\n    if (err instanceof Error && err.message.includes('Invalid revalidate')) {\n      throw err\n    }\n    return undefined\n  }\n}\n\nexport function validateTags(tags: any[], description: string) {\n  const validTags: string[] = []\n  const invalidTags: Array<{\n    tag: any\n    reason: string\n  }> = []\n\n  for (let i = 0; i < tags.length; i++) {\n    const tag = tags[i]\n\n    if (typeof tag !== 'string') {\n      invalidTags.push({ tag, reason: 'invalid type, must be a string' })\n    } else if (tag.length > NEXT_CACHE_TAG_MAX_LENGTH) {\n      invalidTags.push({\n        tag,\n        reason: `exceeded max length of ${NEXT_CACHE_TAG_MAX_LENGTH}`,\n      })\n    } else {\n      validTags.push(tag)\n    }\n\n    if (validTags.length > NEXT_CACHE_TAG_MAX_ITEMS) {\n      console.warn(\n        `Warning: exceeded max tag count for ${description}, dropped tags:`,\n        tags.slice(i).join(', ')\n      )\n      break\n    }\n  }\n\n  if (invalidTags.length > 0) {\n    console.warn(`Warning: invalid tags passed to ${description}: `)\n\n    for (const { tag, reason } of invalidTags) {\n      console.log(`tag: \"${tag}\" ${reason}`)\n    }\n  }\n  return validTags\n}\n\nfunction trackFetchMetric(\n  workStore: WorkStore,\n  ctx: Omit<FetchMetric, 'end' | 'idx'>\n) {\n  // If the static generation store is not available, we can't track the fetch\n  if (!workStore) return\n  if (workStore.requestEndedState?.ended) return\n\n  const isDebugBuild =\n    (!!process.env.NEXT_DEBUG_BUILD ||\n      process.env.NEXT_SSG_FETCH_METRICS === '1') &&\n    workStore.isStaticGeneration\n  const isDevelopment = process.env.NODE_ENV === 'development'\n\n  if (\n    // The only time we want to track fetch metrics outside of development is when\n    // we are performing a static generation & we are in debug mode.\n    !isDebugBuild &&\n    !isDevelopment\n  ) {\n    return\n  }\n\n  workStore.fetchMetrics ??= []\n\n  workStore.fetchMetrics.push({\n    ...ctx,\n    end: performance.timeOrigin + performance.now(),\n    idx: workStore.nextFetchId || 0,\n  })\n}\n\ninterface PatchableModule {\n  workAsyncStorage: WorkAsyncStorage\n  workUnitAsyncStorage: WorkUnitAsyncStorage\n}\n\nexport function createPatchedFetcher(\n  originFetch: Fetcher,\n  { workAsyncStorage, workUnitAsyncStorage }: PatchableModule\n): PatchedFetcher {\n  // Create the patched fetch function.\n  const patched = async function fetch(\n    input: RequestInfo | URL,\n    init: RequestInit | undefined\n  ): Promise<Response> {\n    let url: URL | undefined\n    try {\n      url = new URL(input instanceof Request ? input.url : input)\n      url.username = ''\n      url.password = ''\n    } catch {\n      // Error caused by malformed URL should be handled by native fetch\n      url = undefined\n    }\n    const fetchUrl = url?.href ?? ''\n    const method = init?.method?.toUpperCase() || 'GET'\n\n    // Do create a new span trace for internal fetches in the\n    // non-verbose mode.\n    const isInternal = (init?.next as any)?.internal === true\n    const hideSpan = process.env.NEXT_OTEL_FETCH_DISABLED === '1'\n    // We don't track fetch metrics for internal fetches\n    // so it's not critical that we have a start time, as it won't be recorded.\n    // This is to workaround a flaky issue where performance APIs might\n    // not be available and will require follow-up investigation.\n    const fetchStart: number | undefined = isInternal\n      ? undefined\n      : performance.timeOrigin + performance.now()\n\n    const workStore = workAsyncStorage.getStore()\n    const workUnitStore = workUnitAsyncStorage.getStore()\n\n    // During static generation we track cache reads so we can reason about when they fill\n    let cacheSignal =\n      workUnitStore && workUnitStore.type === 'prerender'\n        ? workUnitStore.cacheSignal\n        : null\n    if (cacheSignal) {\n      cacheSignal.beginRead()\n    }\n\n    const result = getTracer().trace(\n      isInternal ? NextNodeServerSpan.internalFetch : AppRenderSpan.fetch,\n      {\n        hideSpan,\n        kind: SpanKind.CLIENT,\n        spanName: ['fetch', method, fetchUrl].filter(Boolean).join(' '),\n        attributes: {\n          'http.url': fetchUrl,\n          'http.method': method,\n          'net.peer.name': url?.hostname,\n          'net.peer.port': url?.port || undefined,\n        },\n      },\n      async () => {\n        // If this is an internal fetch, we should not do any special treatment.\n        if (isInternal) {\n          return originFetch(input, init)\n        }\n\n        // If the workStore is not available, we can't do any\n        // special treatment of fetch, therefore fallback to the original\n        // fetch implementation.\n        if (!workStore) {\n          return originFetch(input, init)\n        }\n\n        // We should also fallback to the original fetch implementation if we\n        // are in draft mode, it does not constitute a static generation.\n        if (workStore.isDraftMode) {\n          return originFetch(input, init)\n        }\n\n        const isRequestInput =\n          input &&\n          typeof input === 'object' &&\n          typeof (input as Request).method === 'string'\n\n        const getRequestMeta = (field: string) => {\n          // If request input is present but init is not, retrieve from input first.\n          const value = (init as any)?.[field]\n          return value || (isRequestInput ? (input as any)[field] : null)\n        }\n\n        let finalRevalidate: number | undefined = undefined\n        const getNextField = (field: 'revalidate' | 'tags') => {\n          return typeof init?.next?.[field] !== 'undefined'\n            ? init?.next?.[field]\n            : isRequestInput\n              ? (input as any).next?.[field]\n              : undefined\n        }\n        // RequestInit doesn't keep extra fields e.g. next so it's\n        // only available if init is used separate\n        const originalFetchRevalidate = getNextField('revalidate')\n        let currentFetchRevalidate = originalFetchRevalidate\n        const tags: string[] = validateTags(\n          getNextField('tags') || [],\n          `fetch ${input.toString()}`\n        )\n\n        const revalidateStore =\n          workUnitStore &&\n          (workUnitStore.type === 'cache' ||\n            workUnitStore.type === 'prerender' ||\n            // TODO: stop accumulating tags in client prerender\n            workUnitStore.type === 'prerender-client' ||\n            workUnitStore.type === 'prerender-ppr' ||\n            workUnitStore.type === 'prerender-legacy')\n            ? workUnitStore\n            : undefined\n\n        if (revalidateStore) {\n          if (Array.isArray(tags)) {\n            // Collect tags onto parent caches or parent prerenders.\n            const collectedTags =\n              revalidateStore.tags ?? (revalidateStore.tags = [])\n            for (const tag of tags) {\n              if (!collectedTags.includes(tag)) {\n                collectedTags.push(tag)\n              }\n            }\n          }\n        }\n\n        const implicitTags = workUnitStore?.implicitTags\n\n        // Inside unstable-cache we treat it the same as force-no-store on the\n        // page.\n        const pageFetchCacheMode =\n          workUnitStore && workUnitStore.type === 'unstable-cache'\n            ? 'force-no-store'\n            : workStore.fetchCache\n\n        const isUsingNoStore = !!workStore.isUnstableNoStore\n\n        let currentFetchCacheConfig = getRequestMeta('cache')\n        let cacheReason = ''\n        let cacheWarning: string | undefined\n\n        if (\n          typeof currentFetchCacheConfig === 'string' &&\n          typeof currentFetchRevalidate !== 'undefined'\n        ) {\n          // If the revalidate value conflicts with the cache value, we should warn the user and unset the conflicting values.\n          const isConflictingRevalidate =\n            // revalidate: 0 and cache: force-cache\n            (currentFetchCacheConfig === 'force-cache' &&\n              currentFetchRevalidate === 0) ||\n            // revalidate: >0 or revalidate: false and cache: no-store\n            (currentFetchCacheConfig === 'no-store' &&\n              (currentFetchRevalidate > 0 || currentFetchRevalidate === false))\n\n          if (isConflictingRevalidate) {\n            cacheWarning = `Specified \"cache: ${currentFetchCacheConfig}\" and \"revalidate: ${currentFetchRevalidate}\", only one should be specified.`\n            currentFetchCacheConfig = undefined\n            currentFetchRevalidate = undefined\n          }\n        }\n\n        const hasExplicitFetchCacheOptOut =\n          // fetch config itself signals not to cache\n          currentFetchCacheConfig === 'no-cache' ||\n          currentFetchCacheConfig === 'no-store' ||\n          // the fetch isn't explicitly caching and the segment level cache config signals not to cache\n          // note: `pageFetchCacheMode` is also set by being in an unstable_cache context.\n          pageFetchCacheMode === 'force-no-store' ||\n          pageFetchCacheMode === 'only-no-store'\n\n        // If no explicit fetch cache mode is set, but dynamic = `force-dynamic` is set,\n        // we shouldn't consider caching the fetch. This is because the `dynamic` cache\n        // is considered a \"top-level\" cache mode, whereas something like `fetchCache` is more\n        // fine-grained. Top-level modes are responsible for setting reasonable defaults for the\n        // other configurations.\n        const noFetchConfigAndForceDynamic =\n          !pageFetchCacheMode &&\n          !currentFetchCacheConfig &&\n          !currentFetchRevalidate &&\n          workStore.forceDynamic\n\n        if (\n          // force-cache was specified without a revalidate value. We set the revalidate value to false\n          // which will signal the cache to not revalidate\n          currentFetchCacheConfig === 'force-cache' &&\n          typeof currentFetchRevalidate === 'undefined'\n        ) {\n          currentFetchRevalidate = false\n        } else if (\n          hasExplicitFetchCacheOptOut ||\n          noFetchConfigAndForceDynamic\n        ) {\n          currentFetchRevalidate = 0\n        }\n\n        if (\n          currentFetchCacheConfig === 'no-cache' ||\n          currentFetchCacheConfig === 'no-store'\n        ) {\n          cacheReason = `cache: ${currentFetchCacheConfig}`\n        }\n\n        finalRevalidate = validateRevalidate(\n          currentFetchRevalidate,\n          workStore.route\n        )\n\n        const _headers = getRequestMeta('headers')\n        const initHeaders: Headers =\n          typeof _headers?.get === 'function'\n            ? _headers\n            : new Headers(_headers || {})\n\n        const hasUnCacheableHeader =\n          initHeaders.get('authorization') || initHeaders.get('cookie')\n\n        const isUnCacheableMethod = !['get', 'head'].includes(\n          getRequestMeta('method')?.toLowerCase() || 'get'\n        )\n\n        /**\n         * We automatically disable fetch caching under the following conditions:\n         * - Fetch cache configs are not set. Specifically:\n         *    - A page fetch cache mode is not set (export const fetchCache=...)\n         *    - A fetch cache mode is not set in the fetch call (fetch(url, { cache: ... }))\n         *      or the fetch cache mode is set to 'default'\n         *    - A fetch revalidate value is not set in the fetch call (fetch(url, { revalidate: ... }))\n         * - OR the fetch comes after a configuration that triggered dynamic rendering (e.g., reading cookies())\n         *   and the fetch was considered uncacheable (e.g., POST method or has authorization headers)\n         */\n        const hasNoExplicitCacheConfig =\n          // eslint-disable-next-line eqeqeq\n          pageFetchCacheMode == undefined &&\n          // eslint-disable-next-line eqeqeq\n          (currentFetchCacheConfig == undefined ||\n            // when considering whether to opt into the default \"no-cache\" fetch semantics,\n            // a \"default\" cache config should be treated the same as no cache config\n            currentFetchCacheConfig === 'default') &&\n          // eslint-disable-next-line eqeqeq\n          currentFetchRevalidate == undefined\n\n        let autoNoCache = Boolean(\n          (hasUnCacheableHeader || isUnCacheableMethod) &&\n            revalidateStore?.revalidate === 0\n        )\n\n        let isImplicitBuildTimeCache = false\n\n        if (!autoNoCache && hasNoExplicitCacheConfig) {\n          // We don't enable automatic no-cache behavior during build-time\n          // prerendering so that we can still leverage the fetch cache between\n          // export workers.\n          if (workStore.isBuildTimePrerendering) {\n            isImplicitBuildTimeCache = true\n          } else {\n            autoNoCache = true\n          }\n        }\n\n        if (\n          hasNoExplicitCacheConfig &&\n          workUnitStore !== undefined &&\n          (workUnitStore.type === 'prerender' ||\n            // While we don't want to do caching in the client scope\n            // we know the fetch will be dynamic for dynamicIO so we\n            // may as well avoid the call here\n            workUnitStore.type === 'prerender-client')\n        ) {\n          // If we have no cache config, and we're in Dynamic I/O prerendering, it'll be a dynamic call.\n          // We don't have to issue that dynamic call.\n          if (cacheSignal) {\n            cacheSignal.endRead()\n            cacheSignal = null\n          }\n          return makeHangingPromise<Response>(\n            workUnitStore.renderSignal,\n            'fetch()'\n          )\n        }\n\n        switch (pageFetchCacheMode) {\n          case 'force-no-store': {\n            cacheReason = 'fetchCache = force-no-store'\n            break\n          }\n          case 'only-no-store': {\n            if (\n              currentFetchCacheConfig === 'force-cache' ||\n              (typeof finalRevalidate !== 'undefined' && finalRevalidate > 0)\n            ) {\n              throw new Error(\n                `cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`\n              )\n            }\n            cacheReason = 'fetchCache = only-no-store'\n            break\n          }\n          case 'only-cache': {\n            if (currentFetchCacheConfig === 'no-store') {\n              throw new Error(\n                `cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`\n              )\n            }\n            break\n          }\n          case 'force-cache': {\n            if (\n              typeof currentFetchRevalidate === 'undefined' ||\n              currentFetchRevalidate === 0\n            ) {\n              cacheReason = 'fetchCache = force-cache'\n              finalRevalidate = INFINITE_CACHE\n            }\n            break\n          }\n          default:\n          // sometimes we won't match the above cases. the reason we don't move\n          // everything to this switch is the use of autoNoCache which is not a fetchCacheMode\n          // I suspect this could be unified with fetchCacheMode however in which case we could\n          // simplify the switch case and ensure we have an exhaustive switch handling all modes\n        }\n\n        if (typeof finalRevalidate === 'undefined') {\n          if (pageFetchCacheMode === 'default-cache' && !isUsingNoStore) {\n            finalRevalidate = INFINITE_CACHE\n            cacheReason = 'fetchCache = default-cache'\n          } else if (pageFetchCacheMode === 'default-no-store') {\n            finalRevalidate = 0\n            cacheReason = 'fetchCache = default-no-store'\n          } else if (isUsingNoStore) {\n            finalRevalidate = 0\n            cacheReason = 'noStore call'\n          } else if (autoNoCache) {\n            finalRevalidate = 0\n            cacheReason = 'auto no cache'\n          } else {\n            // TODO: should we consider this case an invariant?\n            cacheReason = 'auto cache'\n            finalRevalidate = revalidateStore\n              ? revalidateStore.revalidate\n              : INFINITE_CACHE\n          }\n        } else if (!cacheReason) {\n          cacheReason = `revalidate: ${finalRevalidate}`\n        }\n\n        if (\n          // when force static is configured we don't bail from\n          // `revalidate: 0` values\n          !(workStore.forceStatic && finalRevalidate === 0) &&\n          // we don't consider autoNoCache to switch to dynamic for ISR\n          !autoNoCache &&\n          // If the revalidate value isn't currently set or the value is less\n          // than the current revalidate value, we should update the revalidate\n          // value.\n          revalidateStore &&\n          finalRevalidate < revalidateStore.revalidate\n        ) {\n          // If we were setting the revalidate value to 0, we should try to\n          // postpone instead first.\n          if (finalRevalidate === 0) {\n            if (workUnitStore) {\n              switch (workUnitStore.type) {\n                case 'prerender':\n                case 'prerender-client':\n                  if (cacheSignal) {\n                    cacheSignal.endRead()\n                    cacheSignal = null\n                  }\n                  return makeHangingPromise<Response>(\n                    workUnitStore.renderSignal,\n                    'fetch()'\n                  )\n                default:\n                // fallthrough\n              }\n            }\n\n            markCurrentScopeAsDynamic(\n              workStore,\n              workUnitStore,\n              `revalidate: 0 fetch ${input} ${workStore.route}`\n            )\n          }\n\n          // We only want to set the revalidate store's revalidate time if it\n          // was explicitly set for the fetch call, i.e.\n          // originalFetchRevalidate.\n          if (revalidateStore && originalFetchRevalidate === finalRevalidate) {\n            revalidateStore.revalidate = finalRevalidate\n          }\n        }\n\n        const isCacheableRevalidate =\n          typeof finalRevalidate === 'number' && finalRevalidate > 0\n\n        let cacheKey: string | undefined\n        const { incrementalCache } = workStore\n\n        const useCacheOrRequestStore =\n          workUnitStore?.type === 'request' || workUnitStore?.type === 'cache'\n            ? workUnitStore\n            : undefined\n\n        if (\n          incrementalCache &&\n          (isCacheableRevalidate ||\n            useCacheOrRequestStore?.serverComponentsHmrCache)\n        ) {\n          try {\n            cacheKey = await incrementalCache.generateCacheKey(\n              fetchUrl,\n              isRequestInput ? (input as RequestInit) : init\n            )\n          } catch (err) {\n            console.error(`Failed to generate cache key for`, input)\n          }\n        }\n\n        const fetchIdx = workStore.nextFetchId ?? 1\n        workStore.nextFetchId = fetchIdx + 1\n\n        let handleUnlock: () => Promise<void> | void = () => {}\n\n        const doOriginalFetch = async (\n          isStale?: boolean,\n          cacheReasonOverride?: string\n        ) => {\n          const requestInputFields = [\n            'cache',\n            'credentials',\n            'headers',\n            'integrity',\n            'keepalive',\n            'method',\n            'mode',\n            'redirect',\n            'referrer',\n            'referrerPolicy',\n            'window',\n            'duplex',\n\n            // don't pass through signal when revalidating\n            ...(isStale ? [] : ['signal']),\n          ]\n\n          if (isRequestInput) {\n            const reqInput: Request = input as any\n            const reqOptions: RequestInit = {\n              body: (reqInput as any)._ogBody || reqInput.body,\n            }\n\n            for (const field of requestInputFields) {\n              // @ts-expect-error custom fields\n              reqOptions[field] = reqInput[field]\n            }\n            input = new Request(reqInput.url, reqOptions)\n          } else if (init) {\n            const { _ogBody, body, signal, ...otherInput } =\n              init as RequestInit & { _ogBody?: any }\n            init = {\n              ...otherInput,\n              body: _ogBody || body,\n              signal: isStale ? undefined : signal,\n            }\n          }\n\n          // add metadata to init without editing the original\n          const clonedInit = {\n            ...init,\n            next: { ...init?.next, fetchType: 'origin', fetchIdx },\n          }\n\n          return originFetch(input, clonedInit)\n            .then(async (res) => {\n              if (!isStale && fetchStart) {\n                trackFetchMetric(workStore, {\n                  start: fetchStart,\n                  url: fetchUrl,\n                  cacheReason: cacheReasonOverride || cacheReason,\n                  cacheStatus:\n                    finalRevalidate === 0 || cacheReasonOverride\n                      ? 'skip'\n                      : 'miss',\n                  cacheWarning,\n                  status: res.status,\n                  method: clonedInit.method || 'GET',\n                })\n              }\n              if (\n                res.status === 200 &&\n                incrementalCache &&\n                cacheKey &&\n                (isCacheableRevalidate ||\n                  useCacheOrRequestStore?.serverComponentsHmrCache)\n              ) {\n                const normalizedRevalidate =\n                  finalRevalidate >= INFINITE_CACHE\n                    ? CACHE_ONE_YEAR\n                    : finalRevalidate\n\n                if (\n                  workUnitStore &&\n                  (workUnitStore.type === 'prerender' ||\n                    workUnitStore.type === 'prerender-client')\n                ) {\n                  // We are prerendering at build time or revalidate time with dynamicIO so we need to\n                  // buffer the response so we can guarantee it can be read in a microtask\n                  const bodyBuffer = await res.arrayBuffer()\n\n                  const fetchedData = {\n                    headers: Object.fromEntries(res.headers.entries()),\n                    body: Buffer.from(bodyBuffer).toString('base64'),\n                    status: res.status,\n                    url: res.url,\n                  }\n\n                  // We can skip checking the serverComponentsHmrCache because we aren't in\n                  // dev mode.\n\n                  await incrementalCache.set(\n                    cacheKey,\n                    {\n                      kind: CachedRouteKind.FETCH,\n                      data: fetchedData,\n                      revalidate: normalizedRevalidate,\n                    },\n                    {\n                      fetchCache: true,\n                      fetchUrl,\n                      fetchIdx,\n                      tags,\n                      isImplicitBuildTimeCache,\n                    }\n                  )\n                  await handleUnlock()\n\n                  // We return a new Response to the caller.\n                  return new Response(bodyBuffer, {\n                    headers: res.headers,\n                    status: res.status,\n                    statusText: res.statusText,\n                  })\n                } else {\n                  // We're cloning the response using this utility because there\n                  // exists a bug in the undici library around response cloning.\n                  // See the following pull request for more details:\n                  // https://github.com/vercel/next.js/pull/73274\n\n                  const [cloned1, cloned2] = cloneResponse(res)\n\n                  // We are dynamically rendering including dev mode. We want to return\n                  // the response to the caller as soon as possible because it might stream\n                  // over a very long time.\n                  const cacheSetPromise = cloned1\n                    .arrayBuffer()\n                    .then(async (arrayBuffer) => {\n                      const bodyBuffer = Buffer.from(arrayBuffer)\n\n                      const fetchedData = {\n                        headers: Object.fromEntries(cloned1.headers.entries()),\n                        body: bodyBuffer.toString('base64'),\n                        status: cloned1.status,\n                        url: cloned1.url,\n                      }\n\n                      useCacheOrRequestStore?.serverComponentsHmrCache?.set(\n                        cacheKey,\n                        fetchedData\n                      )\n\n                      if (isCacheableRevalidate) {\n                        await incrementalCache.set(\n                          cacheKey,\n                          {\n                            kind: CachedRouteKind.FETCH,\n                            data: fetchedData,\n                            revalidate: normalizedRevalidate,\n                          },\n                          {\n                            fetchCache: true,\n                            fetchUrl,\n                            fetchIdx,\n                            tags,\n                            isImplicitBuildTimeCache,\n                          }\n                        )\n                      }\n                    })\n                    .catch((error) =>\n                      console.warn(`Failed to set fetch cache`, input, error)\n                    )\n                    .finally(handleUnlock)\n\n                  const pendingRevalidateKey = `cache-set-${cacheKey}`\n                  workStore.pendingRevalidates ??= {}\n                  if (pendingRevalidateKey in workStore.pendingRevalidates) {\n                    // there is already a pending revalidate entry that\n                    // we need to await to avoid race conditions\n                    await workStore.pendingRevalidates[pendingRevalidateKey]\n                  }\n                  workStore.pendingRevalidates[pendingRevalidateKey] =\n                    cacheSetPromise.finally(() => {\n                      // If the pending revalidate is not present in the store, then\n                      // we have nothing to delete.\n                      if (\n                        !workStore.pendingRevalidates?.[pendingRevalidateKey]\n                      ) {\n                        return\n                      }\n\n                      delete workStore.pendingRevalidates[pendingRevalidateKey]\n                    })\n\n                  return cloned2\n                }\n              }\n\n              // we had response that we determined shouldn't be cached so we return it\n              // and don't cache it. This also needs to unlock the cache lock we acquired.\n              await handleUnlock()\n\n              return res\n            })\n            .catch((error) => {\n              handleUnlock()\n              throw error\n            })\n        }\n\n        let cacheReasonOverride\n        let isForegroundRevalidate = false\n        let isHmrRefreshCache = false\n\n        if (cacheKey && incrementalCache) {\n          let cachedFetchData: CachedFetchData | undefined\n\n          if (\n            useCacheOrRequestStore?.isHmrRefresh &&\n            useCacheOrRequestStore.serverComponentsHmrCache\n          ) {\n            cachedFetchData =\n              useCacheOrRequestStore.serverComponentsHmrCache.get(cacheKey)\n\n            isHmrRefreshCache = true\n          }\n\n          if (isCacheableRevalidate && !cachedFetchData) {\n            handleUnlock = await incrementalCache.lock(cacheKey)\n            const entry = workStore.isOnDemandRevalidate\n              ? null\n              : await incrementalCache.get(cacheKey, {\n                  kind: IncrementalCacheKind.FETCH,\n                  revalidate: finalRevalidate,\n                  fetchUrl,\n                  fetchIdx,\n                  tags,\n                  softTags: implicitTags?.tags,\n                })\n\n            if (hasNoExplicitCacheConfig) {\n              // We sometimes use the cache to dedupe fetches that do not specify a cache configuration\n              // In these cases we want to make sure we still exclude them from prerenders if dynamicIO is on\n              // so we introduce an artificial Task boundary here.\n              if (\n                workUnitStore &&\n                (workUnitStore.type === 'prerender' ||\n                  workUnitStore.type === 'prerender-client')\n              ) {\n                await waitAtLeastOneReactRenderTask()\n              }\n            }\n\n            if (entry) {\n              await handleUnlock()\n            } else {\n              // in dev, incremental cache response will be null in case the browser adds `cache-control: no-cache` in the request headers\n              cacheReasonOverride = 'cache-control: no-cache (hard refresh)'\n            }\n\n            if (entry?.value && entry.value.kind === CachedRouteKind.FETCH) {\n              // when stale and is revalidating we wait for fresh data\n              // so the revalidated entry has the updated data\n              if (workStore.isRevalidate && entry.isStale) {\n                isForegroundRevalidate = true\n              } else {\n                if (entry.isStale) {\n                  workStore.pendingRevalidates ??= {}\n                  if (!workStore.pendingRevalidates[cacheKey]) {\n                    const pendingRevalidate = doOriginalFetch(true)\n                      .then(async (response) => ({\n                        body: await response.arrayBuffer(),\n                        headers: response.headers,\n                        status: response.status,\n                        statusText: response.statusText,\n                      }))\n                      .finally(() => {\n                        workStore.pendingRevalidates ??= {}\n                        delete workStore.pendingRevalidates[cacheKey || '']\n                      })\n\n                    // Attach the empty catch here so we don't get a \"unhandled\n                    // promise rejection\" warning.\n                    pendingRevalidate.catch(console.error)\n\n                    workStore.pendingRevalidates[cacheKey] = pendingRevalidate\n                  }\n                }\n\n                cachedFetchData = entry.value.data\n              }\n            }\n          }\n\n          if (cachedFetchData) {\n            if (fetchStart) {\n              trackFetchMetric(workStore, {\n                start: fetchStart,\n                url: fetchUrl,\n                cacheReason,\n                cacheStatus: isHmrRefreshCache ? 'hmr' : 'hit',\n                cacheWarning,\n                status: cachedFetchData.status || 200,\n                method: init?.method || 'GET',\n              })\n            }\n\n            const response = new Response(\n              Buffer.from(cachedFetchData.body, 'base64'),\n              {\n                headers: cachedFetchData.headers,\n                status: cachedFetchData.status,\n              }\n            )\n\n            Object.defineProperty(response, 'url', {\n              value: cachedFetchData.url,\n            })\n\n            return response\n          }\n        }\n\n        if (workStore.isStaticGeneration && init && typeof init === 'object') {\n          const { cache } = init\n\n          // Delete `cache` property as Cloudflare Workers will throw an error\n          if (isEdgeRuntime) delete init.cache\n\n          if (cache === 'no-store') {\n            // If enabled, we should bail out of static generation.\n            if (workUnitStore) {\n              switch (workUnitStore.type) {\n                case 'prerender':\n                case 'prerender-client':\n                  if (cacheSignal) {\n                    cacheSignal.endRead()\n                    cacheSignal = null\n                  }\n                  return makeHangingPromise<Response>(\n                    workUnitStore.renderSignal,\n                    'fetch()'\n                  )\n                default:\n                // fallthrough\n              }\n            }\n            markCurrentScopeAsDynamic(\n              workStore,\n              workUnitStore,\n              `no-store fetch ${input} ${workStore.route}`\n            )\n          }\n\n          const hasNextConfig = 'next' in init\n          const { next = {} } = init\n          if (\n            typeof next.revalidate === 'number' &&\n            revalidateStore &&\n            next.revalidate < revalidateStore.revalidate\n          ) {\n            if (next.revalidate === 0) {\n              // If enabled, we should bail out of static generation.\n              if (workUnitStore) {\n                switch (workUnitStore.type) {\n                  case 'prerender':\n                  case 'prerender-client':\n                    return makeHangingPromise<Response>(\n                      workUnitStore.renderSignal,\n                      'fetch()'\n                    )\n                  default:\n                  // fallthrough\n                }\n              }\n              markCurrentScopeAsDynamic(\n                workStore,\n                workUnitStore,\n                `revalidate: 0 fetch ${input} ${workStore.route}`\n              )\n            }\n\n            if (!workStore.forceStatic || next.revalidate !== 0) {\n              revalidateStore.revalidate = next.revalidate\n            }\n          }\n          if (hasNextConfig) delete init.next\n        }\n\n        // if we are revalidating the whole page via time or on-demand and\n        // the fetch cache entry is stale we should still de-dupe the\n        // origin hit if it's a cache-able entry\n        if (cacheKey && isForegroundRevalidate) {\n          const pendingRevalidateKey = cacheKey\n          workStore.pendingRevalidates ??= {}\n          let pendingRevalidate =\n            workStore.pendingRevalidates[pendingRevalidateKey]\n\n          if (pendingRevalidate) {\n            const revalidatedResult: {\n              body: ArrayBuffer\n              headers: Headers\n              status: number\n              statusText: string\n            } = await pendingRevalidate\n            return new Response(revalidatedResult.body, {\n              headers: revalidatedResult.headers,\n              status: revalidatedResult.status,\n              statusText: revalidatedResult.statusText,\n            })\n          }\n\n          // We used to just resolve the Response and clone it however for\n          // static generation with dynamicIO we need the response to be able to\n          // be resolved in a microtask and cloning the response will never have\n          // a body that can resolve in a microtask in node (as observed through\n          // experimentation) So instead we await the body and then when it is\n          // available we construct manually cloned Response objects with the\n          // body as an ArrayBuffer. This will be resolvable in a microtask\n          // making it compatible with dynamicIO.\n          const pendingResponse = doOriginalFetch(true, cacheReasonOverride)\n            // We're cloning the response using this utility because there\n            // exists a bug in the undici library around response cloning.\n            // See the following pull request for more details:\n            // https://github.com/vercel/next.js/pull/73274\n            .then(cloneResponse)\n\n          pendingRevalidate = pendingResponse\n            .then(async (responses) => {\n              const response = responses[0]\n              return {\n                body: await response.arrayBuffer(),\n                headers: response.headers,\n                status: response.status,\n                statusText: response.statusText,\n              }\n            })\n            .finally(() => {\n              // If the pending revalidate is not present in the store, then\n              // we have nothing to delete.\n              if (!workStore.pendingRevalidates?.[pendingRevalidateKey]) {\n                return\n              }\n\n              delete workStore.pendingRevalidates[pendingRevalidateKey]\n            })\n\n          // Attach the empty catch here so we don't get a \"unhandled promise\n          // rejection\" warning\n          pendingRevalidate.catch(() => {})\n\n          workStore.pendingRevalidates[pendingRevalidateKey] = pendingRevalidate\n\n          return pendingResponse.then((responses) => responses[1])\n        } else {\n          return doOriginalFetch(false, cacheReasonOverride)\n        }\n      }\n    )\n\n    if (cacheSignal) {\n      try {\n        return await result\n      } finally {\n        if (cacheSignal) {\n          cacheSignal.endRead()\n        }\n      }\n    }\n    return result\n  }\n\n  // Attach the necessary properties to the patched fetch function.\n  // We don't use this to determine if the fetch function has been patched,\n  // but for external consumers to determine if the fetch function has been\n  // patched.\n  patched.__nextPatched = true as const\n  patched.__nextGetStaticStore = () => workAsyncStorage\n  patched._nextOriginalFetch = originFetch\n  ;(globalThis as Record<symbol, unknown>)[NEXT_PATCH_SYMBOL] = true\n\n  // Assign the function name also as a name property, so that it's preserved\n  // even when mangling is enabled.\n  Object.defineProperty(patched, 'name', { value: 'fetch', writable: false })\n\n  return patched\n}\n// we patch fetch to collect cache information used for\n// determining if a page is static or not\nexport function patchFetch(options: PatchableModule) {\n  // If we've already patched fetch, we should not patch it again.\n  if (isFetchPatched()) return\n\n  // Grab the original fetch function. We'll attach this so we can use it in\n  // the patched fetch function.\n  const original = createDedupeFetch(globalThis.fetch)\n\n  // Set the global fetch to the patched fetch.\n  globalThis.fetch = createPatchedFetcher(original, options)\n}\n","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors'\nimport { LRUCache } from '../../server/lib/lru-cache'\n\nexport const prefixes = {\n  wait: white(bold('○')),\n  error: red(bold('⨯')),\n  warn: yellow(bold('⚠')),\n  ready: '▲', // no color\n  info: white(bold(' ')),\n  event: green(bold('✓')),\n  trace: magenta(bold('»')),\n} as const\n\nconst LOGGING_METHOD = {\n  log: 'log',\n  warn: 'warn',\n  error: 'error',\n} as const\n\nfunction prefixedLog(prefixType: keyof typeof prefixes, ...message: any[]) {\n  if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n    message.shift()\n  }\n\n  const consoleMethod: keyof typeof LOGGING_METHOD =\n    prefixType in LOGGING_METHOD\n      ? LOGGING_METHOD[prefixType as keyof typeof LOGGING_METHOD]\n      : 'log'\n\n  const prefix = prefixes[prefixType]\n  // If there's no message, don't print the prefix but a new line\n  if (message.length === 0) {\n    console[consoleMethod]('')\n  } else {\n    // Ensure if there's ANSI escape codes it's concatenated into one string.\n    // Chrome DevTool can only handle color if it's in one string.\n    if (message.length === 1 && typeof message[0] === 'string') {\n      console[consoleMethod](' ' + prefix + ' ' + message[0])\n    } else {\n      console[consoleMethod](' ' + prefix, ...message)\n    }\n  }\n}\n\nexport function bootstrap(...message: string[]) {\n  // logging format: ' <prefix> <message>'\n  // e.g. ' ✓ Compiled successfully'\n  // Add spaces to align with the indent of other logs\n  console.log('   ' + message.join(' '))\n}\n\nexport function wait(...message: any[]) {\n  prefixedLog('wait', ...message)\n}\n\nexport function error(...message: any[]) {\n  prefixedLog('error', ...message)\n}\n\nexport function warn(...message: any[]) {\n  prefixedLog('warn', ...message)\n}\n\nexport function ready(...message: any[]) {\n  prefixedLog('ready', ...message)\n}\n\nexport function info(...message: any[]) {\n  prefixedLog('info', ...message)\n}\n\nexport function event(...message: any[]) {\n  prefixedLog('event', ...message)\n}\n\nexport function trace(...message: any[]) {\n  prefixedLog('trace', ...message)\n}\n\nconst warnOnceCache = new LRUCache<string>(10_000, (value) => value.length)\nexport function warnOnce(...message: any[]) {\n  const key = message.join(' ')\n  if (!warnOnceCache.has(key)) {\n    warnOnceCache.set(key, key)\n    warn(...message)\n  }\n}\n","export class LRUCache<T> {\n  private cache: Map<string, T>\n  private sizes: Map<string, number>\n  private totalSize: number\n  private maxSize: number\n  private calculateSize: (value: T) => number\n\n  constructor(maxSize: number, calculateSize?: (value: T) => number) {\n    this.cache = new Map()\n    this.sizes = new Map()\n    this.totalSize = 0\n    this.maxSize = maxSize\n    this.calculateSize = calculateSize || (() => 1)\n  }\n\n  set(key?: string | null, value?: T): void {\n    if (!key || !value) return\n\n    const size = this.calculateSize(value)\n\n    if (size > this.maxSize) {\n      console.warn('Single item size exceeds maxSize')\n      return\n    }\n\n    if (this.cache.has(key)) {\n      this.totalSize -= this.sizes.get(key) || 0\n    }\n\n    this.cache.set(key, value)\n    this.sizes.set(key, size)\n    this.totalSize += size\n\n    this.touch(key)\n  }\n\n  has(key?: string | null): boolean {\n    if (!key) return false\n\n    this.touch(key)\n    return Boolean(this.cache.get(key))\n  }\n\n  get(key?: string | null): T | undefined {\n    if (!key) return\n\n    const value = this.cache.get(key)\n    if (value === undefined) {\n      return undefined\n    }\n\n    this.touch(key)\n    return value\n  }\n\n  private touch(key: string): void {\n    const value = this.cache.get(key)\n    if (value !== undefined) {\n      this.cache.delete(key)\n      this.cache.set(key, value)\n      this.evictIfNecessary()\n    }\n  }\n\n  private evictIfNecessary(): void {\n    while (this.totalSize > this.maxSize && this.cache.size > 0) {\n      this.evictLeastRecentlyUsed()\n    }\n  }\n\n  private evictLeastRecentlyUsed(): void {\n    const lruKey = this.cache.keys().next().value\n    if (lruKey !== undefined) {\n      const lruSize = this.sizes.get(lruKey) || 0\n      this.totalSize -= lruSize\n      this.cache.delete(lruKey)\n      this.sizes.delete(lruKey)\n    }\n  }\n\n  reset() {\n    this.cache.clear()\n    this.sizes.clear()\n    this.totalSize = 0\n  }\n\n  keys() {\n    return [...this.cache.keys()]\n  }\n\n  remove(key: string): void {\n    if (this.cache.has(key)) {\n      this.totalSize -= this.sizes.get(key) || 0\n      this.cache.delete(key)\n      this.sizes.delete(key)\n    }\n  }\n\n  clear(): void {\n    this.cache.clear()\n    this.sizes.clear()\n    this.totalSize = 0\n  }\n\n  get size(): number {\n    return this.cache.size\n  }\n\n  get currentSize(): number {\n    return this.totalSize\n  }\n}\n","import type { AppRouteHandlerFn, AppRouteHandlers } from '../module'\n\nimport { HTTP_METHODS, type HTTP_METHOD } from '../../../web/http'\n\nconst AUTOMATIC_ROUTE_METHODS = ['HEAD', 'OPTIONS'] as const\n\nfunction handleMethodNotAllowedResponse(): Response {\n  return new Response(null, { status: 405 })\n}\n\nexport function autoImplementMethods(\n  handlers: AppRouteHandlers\n): Record<HTTP_METHOD, AppRouteHandlerFn> {\n  // Loop through all the HTTP methods to create the initial methods object.\n  // Each of the methods will be set to the 405 response handler.\n  const methods: Record<HTTP_METHOD, AppRouteHandlerFn> = HTTP_METHODS.reduce(\n    (acc, method) => ({\n      ...acc,\n      // If the userland module implements the method, then use it. Otherwise,\n      // use the 405 response handler.\n      [method]: handlers[method] ?? handleMethodNotAllowedResponse,\n    }),\n    {} as Record<HTTP_METHOD, AppRouteHandlerFn>\n  )\n\n  // Get all the methods that could be automatically implemented that were not\n  // implemented by the userland module.\n  const implemented = new Set(HTTP_METHODS.filter((method) => handlers[method]))\n  const missing = AUTOMATIC_ROUTE_METHODS.filter(\n    (method) => !implemented.has(method)\n  )\n\n  // Loop over the missing methods to automatically implement them if we can.\n  for (const method of missing) {\n    // If the userland module doesn't implement the HEAD method, then\n    // we'll automatically implement it by calling the GET method (if it\n    // exists).\n    if (method === 'HEAD') {\n      if (handlers.GET) {\n        // Implement the HEAD method by calling the GET method.\n        methods.HEAD = handlers.GET\n\n        // Mark it as implemented.\n        implemented.add('HEAD')\n      }\n      continue\n    }\n\n    // If OPTIONS is not provided then implement it.\n    if (method === 'OPTIONS') {\n      // TODO: check if HEAD is implemented, if so, use it to add more headers\n\n      // Get all the methods that were implemented by the userland module.\n      const allow: HTTP_METHOD[] = ['OPTIONS', ...implemented]\n\n      // If the list of methods doesn't include HEAD, but it includes GET, then\n      // add HEAD as it's automatically implemented.\n      if (!implemented.has('HEAD') && implemented.has('GET')) {\n        allow.push('HEAD')\n      }\n\n      // Sort and join the list with commas to create the `Allow` header. See:\n      // https://httpwg.org/specs/rfc9110.html#field.allow\n      const headers = { Allow: allow.sort().join(', ') }\n\n      // Implement the OPTIONS method by returning a 204 response with the\n      // `Allow` header.\n      methods.OPTIONS = () => new Response(null, { status: 204, headers })\n\n      // Mark this method as implemented.\n      implemented.add('OPTIONS')\n\n      continue\n    }\n\n    throw new Error(\n      `Invariant: should handle all automatic implementable methods, got method: ${method}`\n    )\n  }\n\n  return methods\n}\n","export const HTTPAccessErrorStatus = {\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  UNAUTHORIZED: 401,\n}\n\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus))\n\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK'\n\nexport type HTTPAccessFallbackError = Error & {\n  digest: `${typeof HTTP_ERROR_FALLBACK_ERROR_CODE};${string}`\n}\n\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */\nexport function isHTTPAccessFallbackError(\n  error: unknown\n): error is HTTPAccessFallbackError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n  const [prefix, httpStatus] = error.digest.split(';')\n\n  return (\n    prefix === HTTP_ERROR_FALLBACK_ERROR_CODE &&\n    ALLOWED_CODES.has(Number(httpStatus))\n  )\n}\n\nexport function getAccessFallbackHTTPStatus(\n  error: HTTPAccessFallbackError\n): number {\n  const httpStatus = error.digest.split(';')[1]\n  return Number(httpStatus)\n}\n\nexport function getAccessFallbackErrorTypeByStatus(\n  status: number\n): 'not-found' | 'forbidden' | 'unauthorized' | undefined {\n  switch (status) {\n    case 401:\n      return 'unauthorized'\n    case 403:\n      return 'forbidden'\n    case 404:\n      return 'not-found'\n    default:\n      return\n  }\n}\n","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import { RedirectStatusCode } from './redirect-status-code'\n\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT'\n\nexport enum RedirectType {\n  push = 'push',\n  replace = 'replace',\n}\n\nexport type RedirectError = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${RedirectType};${string};${RedirectStatusCode};`\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nexport function isRedirectError(error: unknown): error is RedirectError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n\n  const digest = error.digest.split(';')\n  const [errorCode, type] = digest\n  const destination = digest.slice(2, -2).join(';')\n  const status = digest.at(-2)\n\n  const statusCode = Number(status)\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode in RedirectStatusCode\n  )\n}\n","import { getDigestForWellKnownError } from './create-error-handler'\nimport { isReactLargeShellError } from './react-large-shell-error'\n\nexport function printDebugThrownValueForProspectiveRender(\n  thrownValue: unknown,\n  route: string\n) {\n  // We don't need to print well-known Next.js errors.\n  if (getDigestForWellKnownError(thrownValue)) {\n    return\n  }\n\n  if (isReactLargeShellError(thrownValue)) {\n    // TODO: Aggregate\n    console.error(thrownValue)\n    return undefined\n  }\n\n  let message: undefined | string\n  if (\n    typeof thrownValue === 'object' &&\n    thrownValue !== null &&\n    typeof (thrownValue as any).message === 'string'\n  ) {\n    message = (thrownValue as any).message\n    if (typeof (thrownValue as any).stack === 'string') {\n      const originalErrorStack: string = (thrownValue as any).stack\n      const stackStart = originalErrorStack.indexOf('\\n')\n      if (stackStart > -1) {\n        const error = new Error(\n          `Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled.\n          \nOriginal Error: ${message}`\n        )\n        error.stack =\n          'Error: ' + error.message + originalErrorStack.slice(stackStart)\n        console.error(error)\n        return\n      }\n    }\n  } else if (typeof thrownValue === 'string') {\n    message = thrownValue\n  }\n\n  if (message) {\n    console.error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled. No stack was provided.\n          \nOriginal Message: ${message}`)\n    return\n  }\n\n  console.error(\n    `Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled. The thrown value is logged just following this message`\n  )\n  console.error(thrownValue)\n  return\n}\n","import type { ErrorInfo } from 'react'\n\nimport stringHash from 'next/dist/compiled/string-hash'\nimport { formatServerError } from '../../lib/format-server-error'\nimport { SpanStatusCode, getTracer } from '../lib/trace/tracer'\nimport { isAbortError } from '../pipe-readable'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isDynamicServerError } from '../../client/components/hooks-server-context'\nimport { isNextRouterError } from '../../client/components/is-next-router-error'\nimport { isPrerenderInterruptedError } from './dynamic-rendering'\nimport { getProperError } from '../../lib/is-error'\nimport { createDigestWithErrorCode } from '../../lib/error-telemetry-utils'\nimport { isReactLargeShellError } from './react-large-shell-error'\n\ndeclare global {\n  var __next_log_error__: undefined | ((err: unknown) => void)\n}\n\ntype RSCErrorHandler = (err: unknown) => string | undefined\ntype SSRErrorHandler = (\n  err: unknown,\n  errorInfo?: ErrorInfo\n) => string | undefined\n\nexport type DigestedError = Error & { digest: string }\n\n/**\n * Returns a digest for well-known Next.js errors, otherwise `undefined`. If a\n * digest is returned this also means that the error does not need to be\n * reported.\n */\nexport function getDigestForWellKnownError(error: unknown): string | undefined {\n  // If we're bailing out to CSR, we don't need to log the error.\n  if (isBailoutToCSRError(error)) return error.digest\n\n  // If this is a navigation error, we don't need to log the error.\n  if (isNextRouterError(error)) return error.digest\n\n  // If this error occurs, we know that we should be stopping the static\n  // render. This is only thrown in static generation when PPR is not enabled,\n  // which causes the whole page to be marked as dynamic. We don't need to\n  // tell the user about this error, as it's not actionable.\n  if (isDynamicServerError(error)) return error.digest\n\n  // If this is a prerender interrupted error, we don't need to log the error.\n  if (isPrerenderInterruptedError(error)) return error.digest\n\n  return undefined\n}\n\nexport function createFlightReactServerErrorHandler(\n  shouldFormatError: boolean,\n  onReactServerRenderError: (err: DigestedError) => void\n): RSCErrorHandler {\n  return (thrownValue: unknown) => {\n    if (typeof thrownValue === 'string') {\n      // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n      return stringHash(thrownValue).toString()\n    }\n\n    // If the response was closed, we don't need to log the error.\n    if (isAbortError(thrownValue)) return\n\n    const digest = getDigestForWellKnownError(thrownValue)\n\n    if (digest) {\n      return digest\n    }\n\n    if (isReactLargeShellError(thrownValue)) {\n      // TODO: Aggregate\n      console.error(thrownValue)\n      return undefined\n    }\n\n    const err = getProperError(thrownValue) as DigestedError\n\n    // If the error already has a digest, respect the original digest,\n    // so it won't get re-generated into another new error.\n    if (!err.digest) {\n      // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n      err.digest = stringHash(err.message + err.stack || '').toString()\n    }\n\n    // Format server errors in development to add more helpful error messages\n    if (shouldFormatError) {\n      formatServerError(err)\n    }\n\n    // Record exception in an active span, if available.\n    const span = getTracer().getActiveScopeSpan()\n    if (span) {\n      span.recordException(err)\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: err.message,\n      })\n    }\n\n    onReactServerRenderError(err)\n\n    return createDigestWithErrorCode(thrownValue, err.digest)\n  }\n}\n\nexport function createHTMLReactServerErrorHandler(\n  shouldFormatError: boolean,\n  isNextExport: boolean,\n  reactServerErrors: Map<string, DigestedError>,\n  silenceLogger: boolean,\n  onReactServerRenderError: undefined | ((err: DigestedError) => void)\n): RSCErrorHandler {\n  return (thrownValue: unknown) => {\n    if (typeof thrownValue === 'string') {\n      // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n      return stringHash(thrownValue).toString()\n    }\n\n    // If the response was closed, we don't need to log the error.\n    if (isAbortError(thrownValue)) return\n\n    const digest = getDigestForWellKnownError(thrownValue)\n\n    if (digest) {\n      return digest\n    }\n\n    if (isReactLargeShellError(thrownValue)) {\n      // TODO: Aggregate\n      console.error(thrownValue)\n      return undefined\n    }\n\n    const err = getProperError(thrownValue) as DigestedError\n\n    // If the error already has a digest, respect the original digest,\n    // so it won't get re-generated into another new error.\n    if (!err.digest) {\n      // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n      err.digest = stringHash(err.message + (err.stack || '')).toString()\n    }\n\n    // @TODO by putting this here and not at the top it is possible that\n    // we don't error the build in places we actually expect to\n    if (!reactServerErrors.has(err.digest)) {\n      reactServerErrors.set(err.digest, err)\n    }\n\n    // Format server errors in development to add more helpful error messages\n    if (shouldFormatError) {\n      formatServerError(err)\n    }\n\n    // Don't log the suppressed error during export\n    if (\n      !(\n        isNextExport &&\n        err?.message?.includes(\n          'The specific message is omitted in production builds to avoid leaking sensitive details.'\n        )\n      )\n    ) {\n      // Record exception in an active span, if available.\n      const span = getTracer().getActiveScopeSpan()\n      if (span) {\n        span.recordException(err)\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: err.message,\n        })\n      }\n\n      if (!silenceLogger) {\n        onReactServerRenderError?.(err)\n      }\n    }\n\n    return createDigestWithErrorCode(thrownValue, err.digest)\n  }\n}\n\nexport function createHTMLErrorHandler(\n  shouldFormatError: boolean,\n  isNextExport: boolean,\n  reactServerErrors: Map<string, DigestedError>,\n  allCapturedErrors: Array<unknown>,\n  silenceLogger: boolean,\n  onHTMLRenderSSRError: (err: DigestedError, errorInfo?: ErrorInfo) => void\n): SSRErrorHandler {\n  return (thrownValue: unknown, errorInfo?: ErrorInfo) => {\n    if (isReactLargeShellError(thrownValue)) {\n      // TODO: Aggregate\n      console.error(thrownValue)\n      return undefined\n    }\n\n    let isSSRError = true\n\n    allCapturedErrors.push(thrownValue)\n\n    // If the response was closed, we don't need to log the error.\n    if (isAbortError(thrownValue)) return\n\n    const digest = getDigestForWellKnownError(thrownValue)\n\n    if (digest) {\n      return digest\n    }\n\n    const err = getProperError(thrownValue) as DigestedError\n    // If the error already has a digest, respect the original digest,\n    // so it won't get re-generated into another new error.\n    if (err.digest) {\n      if (reactServerErrors.has(err.digest)) {\n        // This error is likely an obfuscated error from react-server.\n        // We recover the original error here.\n        thrownValue = reactServerErrors.get(err.digest)\n        isSSRError = false\n      } else {\n        // The error is not from react-server but has a digest\n        // from other means so we don't need to produce a new one\n      }\n    } else {\n      err.digest = stringHash(\n        err.message + (errorInfo?.componentStack || err.stack || '')\n      ).toString()\n    }\n\n    // Format server errors in development to add more helpful error messages\n    if (shouldFormatError) {\n      formatServerError(err)\n    }\n\n    // Don't log the suppressed error during export\n    if (\n      !(\n        isNextExport &&\n        err?.message?.includes(\n          'The specific message is omitted in production builds to avoid leaking sensitive details.'\n        )\n      )\n    ) {\n      // Record exception in an active span, if available.\n      const span = getTracer().getActiveScopeSpan()\n      if (span) {\n        span.recordException(err)\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: err.message,\n        })\n      }\n\n      if (\n        !silenceLogger &&\n        // HTML errors contain RSC errors as well, filter them out before reporting\n        isSSRError\n      ) {\n        onHTMLRenderSSRError(err, errorInfo)\n      }\n    }\n\n    return createDigestWithErrorCode(thrownValue, err.digest)\n  }\n}\n\nexport function isUserLandError(err: any): boolean {\n  return (\n    !isAbortError(err) && !isBailoutToCSRError(err) && !isNextRouterError(err)\n  )\n}\n","// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n","import {\n  isHTTPAccessFallbackError,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\nimport { isRedirectError, type RedirectError } from './redirect-error'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | HTTPAccessFallbackError {\n  return isRedirectError(error) || isHTTPAccessFallbackError(error)\n}\n","// TODO: isWellKnownError -> isNextInternalError\n// isReactLargeShellError -> isWarning\nexport function isReactLargeShellError(\n  error: unknown\n): error is Error & { digest?: string } {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'message' in error &&\n    typeof error.message === 'string' &&\n    error.message.startsWith('This rendered a large document (>')\n  )\n}\n","'use client'\n\nimport type { FetchServerResponseResult } from '../../client/components/router-reducer/fetch-server-response'\nimport type {\n  FocusAndScrollRef,\n  PrefetchKind,\n} from '../../client/components/router-reducer/router-reducer-types'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../server/app-render/types'\nimport React from 'react'\n\nexport type ChildSegmentMap = Map<string, CacheNode>\n\n/**\n * Cache node used in app-router / layout-router.\n */\nexport type CacheNode = ReadyCacheNode | LazyCacheNode\n\nexport type LoadingModuleData =\n  | [React.JSX.Element, React.ReactNode, React.ReactNode]\n  | null\n\n/** viewport metadata node */\nexport type HeadData = React.ReactNode\n\nexport type LazyCacheNode = {\n  /**\n   * When rsc is null, this is a lazily-initialized cache node.\n   *\n   * If the app attempts to render it, it triggers a lazy data fetch,\n   * postpones the render, and schedules an update to a new tree.\n   *\n   * TODO: This mechanism should not be used when PPR is enabled, though it\n   * currently is in some cases until we've implemented partial\n   * segment fetching.\n   */\n  rsc: null\n\n  /**\n   * A prefetched version of the segment data. See explanation in corresponding\n   * field of ReadyCacheNode (below).\n   *\n   * Since LazyCacheNode mostly only exists in the non-PPR implementation, this\n   * will usually be null, but it could have been cloned from a previous\n   * CacheNode that was created by the PPR implementation. Eventually we want\n   * to migrate everything away from LazyCacheNode entirely.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * A pending response for the lazy data fetch. If this is not present\n   * during render, it is lazily created.\n   */\n  lazyData: Promise<FetchServerResponseResult> | null\n\n  prefetchHead: HeadData | null\n\n  head: HeadData\n\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n\n  /**\n   * Child parallel routes.\n   */\n  parallelRoutes: Map<string, ChildSegmentMap>\n\n  /**\n   * The timestamp of the navigation that last updated the CacheNode's data. If\n   * a CacheNode is reused from a previous navigation, this value is not\n   * updated. Used to track the staleness of the data.\n   */\n  navigatedAt: number\n}\n\nexport type ReadyCacheNode = {\n  /**\n   * When rsc is not null, it represents the RSC data for the\n   * corresponding segment.\n   *\n   * `null` is a valid React Node but because segment data is always a\n   * <LayoutRouter> component, we can use `null` to represent empty.\n   *\n   * TODO: For additional type safety, update this type to\n   * Exclude<React.ReactNode, null>. Need to update createEmptyCacheNode to\n   * accept rsc as an argument, or just inline the callers.\n   */\n  rsc: React.ReactNode\n\n  /**\n   * Represents a static version of the segment that can be shown immediately,\n   * and may or may not contain dynamic holes. It's prefetched before a\n   * navigation occurs.\n   *\n   * During rendering, we will choose whether to render `rsc` or `prefetchRsc`\n   * with `useDeferredValue`. As with the `rsc` field, a value of `null` means\n   * no value was provided. In this case, the LayoutRouter will go straight to\n   * rendering the `rsc` value; if that one is also missing, it will suspend and\n   * trigger a lazy fetch.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * There should never be a lazy data request in this case.\n   */\n  lazyData: null\n  prefetchHead: HeadData | null\n\n  head: HeadData\n\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n\n  parallelRoutes: Map<string, ChildSegmentMap>\n\n  navigatedAt: number\n}\n\nexport interface NavigateOptions {\n  scroll?: boolean\n}\n\nexport interface PrefetchOptions {\n  kind: PrefetchKind\n  onInvalidate?: () => void\n}\n\nexport interface AppRouterInstance {\n  /**\n   * Navigate to the previous history entry.\n   */\n  back(): void\n  /**\n   * Navigate to the next history entry.\n   */\n  forward(): void\n  /**\n   * Refresh the current page.\n   */\n  refresh(): void\n  /**\n   * Refresh the current page. Use in development only.\n   * @internal\n   */\n  hmrRefresh(): void\n  /**\n   * Navigate to the provided href.\n   * Pushes a new history entry.\n   */\n  push(href: string, options?: NavigateOptions): void\n  /**\n   * Navigate to the provided href.\n   * Replaces the current history entry.\n   */\n  replace(href: string, options?: NavigateOptions): void\n  /**\n   * Prefetch the provided href.\n   */\n  prefetch(href: string, options?: PrefetchOptions): void\n}\n\nexport const AppRouterContext = React.createContext<AppRouterInstance | null>(\n  null\n)\nexport const LayoutRouterContext = React.createContext<{\n  parentTree: FlightRouterState\n  parentCacheNode: CacheNode\n  parentSegmentPath: FlightSegmentPath | null\n  url: string\n} | null>(null)\n\nexport const GlobalLayoutRouterContext = React.createContext<{\n  tree: FlightRouterState\n  focusAndScrollRef: FocusAndScrollRef\n  nextUrl: string | null\n}>(null as any)\n\nexport const TemplateContext = React.createContext<React.ReactNode>(null as any)\n\nif (process.env.NODE_ENV !== 'production') {\n  AppRouterContext.displayName = 'AppRouterContext'\n  LayoutRouterContext.displayName = 'LayoutRouterContext'\n  GlobalLayoutRouterContext.displayName = 'GlobalLayoutRouterContext'\n  TemplateContext.displayName = 'TemplateContext'\n}\n\nexport const MissingSlotContext = React.createContext<Set<string>>(new Set())\n","/**\n * This class is used to detect when all cache reads for a given render are settled.\n * We do this to allow for cache warming the prerender without having to continue rendering\n * the remainder of the page. This feature is really only useful when the dynamicIO flag is on\n * and should only be used in codepaths gated with this feature.\n */\n\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nexport class CacheSignal {\n  private count = 0\n  private earlyListeners: Array<() => void> = []\n  private listeners: Array<() => void> = []\n  private tickPending = false\n  private taskPending = false\n\n  private subscribedSignals: Set<CacheSignal> | null = null\n\n  constructor() {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      // we rely on `process.nextTick`, which is not supported in edge\n      throw new InvariantError(\n        'CacheSignal cannot be used in the edge runtime, because `dynamicIO` does not support it.'\n      )\n    }\n  }\n\n  private noMorePendingCaches() {\n    if (!this.tickPending) {\n      this.tickPending = true\n      process.nextTick(() => {\n        this.tickPending = false\n        if (this.count === 0) {\n          for (let i = 0; i < this.earlyListeners.length; i++) {\n            this.earlyListeners[i]()\n          }\n          this.earlyListeners.length = 0\n        }\n      })\n    }\n    if (!this.taskPending) {\n      this.taskPending = true\n      setTimeout(() => {\n        this.taskPending = false\n        if (this.count === 0) {\n          for (let i = 0; i < this.listeners.length; i++) {\n            this.listeners[i]()\n          }\n          this.listeners.length = 0\n        }\n      }, 0)\n    }\n  }\n\n  /**\n   * This promise waits until there are no more in progress cache reads but no later.\n   * This allows for adding more cache reads after to delay cacheReady.\n   */\n  inputReady() {\n    return new Promise<void>((resolve) => {\n      this.earlyListeners.push(resolve)\n      if (this.count === 0) {\n        this.noMorePendingCaches()\n      }\n    })\n  }\n\n  /**\n   * If there are inflight cache reads this Promise can resolve in a microtask however\n   * if there are no inflight cache reads then we wait at least one task to allow initial\n   * cache reads to be initiated.\n   */\n  cacheReady() {\n    return new Promise<void>((resolve) => {\n      this.listeners.push(resolve)\n      if (this.count === 0) {\n        this.noMorePendingCaches()\n      }\n    })\n  }\n\n  beginRead() {\n    this.count++\n\n    if (this.subscribedSignals !== null) {\n      for (const subscriber of this.subscribedSignals) {\n        subscriber.beginRead()\n      }\n    }\n  }\n\n  endRead() {\n    if (this.count === 0) {\n      throw new InvariantError(\n        'CacheSignal got more endRead() calls than beginRead() calls'\n      )\n    }\n\n    // If this is the last read we need to wait a task before we can claim the cache is settled.\n    // The cache read will likely ping a Server Component which can read from the cache again and this\n    // will play out in a microtask so we need to only resolve pending listeners if we're still at 0\n    // after at least one task.\n    // We only want one task scheduled at a time so when we hit count 1 we don't decrement the counter immediately.\n    // If intervening reads happen before the scheduled task runs they will never observe count 1 preventing reentrency\n    this.count--\n    if (this.count === 0) {\n      this.noMorePendingCaches()\n    }\n\n    if (this.subscribedSignals !== null) {\n      for (const subscriber of this.subscribedSignals) {\n        subscriber.endRead()\n      }\n    }\n  }\n\n  trackRead<T>(promise: Promise<T>) {\n    this.beginRead()\n    // `promise.finally()` still rejects, so don't use it here to avoid unhandled rejections\n    const onFinally = this.endRead.bind(this)\n    promise.then(onFinally, onFinally)\n    return promise\n  }\n\n  subscribeToReads(subscriber: CacheSignal): () => void {\n    if (subscriber === this) {\n      throw new InvariantError('A CacheSignal cannot subscribe to itself')\n    }\n    if (this.subscribedSignals === null) {\n      this.subscribedSignals = new Set()\n    }\n    this.subscribedSignals.add(subscriber)\n\n    // we'll notify the subscriber of each endRead() on this signal,\n    // so we need to give it a corresponding beginRead() for each read we have in flight now.\n    for (let i = 0; i < this.count; i++) {\n      subscriber.beginRead()\n    }\n\n    return this.unsubscribeFromReads.bind(this, subscriber)\n  }\n\n  unsubscribeFromReads(subscriber: CacheSignal) {\n    if (!this.subscribedSignals) {\n      return\n    }\n    this.subscribedSignals.delete(subscriber)\n\n    // we don't need to set the set back to `null` if it's empty --\n    // if other signals are subscribing to this one, it'll likely get more subscriptions later,\n    // so we'd have to allocate a fresh set again when that happens.\n  }\n}\n","// This regex will have fast negatives meaning valid identifiers may not pass\n// this test. However this is only used during static generation to provide hints\n// about why a page bailed out of some or all prerendering and we can use bracket notation\n// for example while `ಠ_ಠ` is a valid identifier it's ok to print `searchParams['ಠ_ಠ']`\n// even if this would have been fine too `searchParams.ಠ_ಠ`\nconst isDefinitelyAValidIdentifier = /^[A-Za-z_$][A-Za-z0-9_$]*$/\n\nexport function describeStringPropertyAccess(target: string, prop: string) {\n  if (isDefinitelyAValidIdentifier.test(prop)) {\n    return `\\`${target}.${prop}\\``\n  }\n  return `\\`${target}[${JSON.stringify(prop)}]\\``\n}\n\nexport function describeHasCheckingStringProperty(\n  target: string,\n  prop: string\n) {\n  const stringifiedProp = JSON.stringify(prop)\n  return `\\`Reflect.has(${target}, ${stringifiedProp})\\`, \\`${stringifiedProp} in ${target}\\`, or similar`\n}\n\nexport const wellKnownProperties = new Set([\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toString',\n  'valueOf',\n  'toLocaleString',\n\n  // Promise prototype\n  // fallthrough\n  'then',\n  'catch',\n  'finally',\n\n  // React Promise extension\n  // fallthrough\n  'status',\n\n  // React introspection\n  'displayName',\n  '_debugInfo',\n\n  // Common tested properties\n  // fallthrough\n  'toJSON',\n  '$$typeof',\n  '__esModule',\n])\n","import * as React from 'react'\n\nconst errorRef: { current: null | Error } = { current: null }\n\n// React.cache is currently only available in canary/experimental React channels.\nconst cache =\n  typeof React.cache === 'function'\n    ? React.cache\n    : (fn: (key: unknown) => void) => fn\n\n// When Dynamic IO is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn = process.env.__NEXT_DYNAMIC_IO\n  ? console.error\n  : console.warn\n\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n  (key: unknown) => {\n    try {\n      logErrorOrWarn(errorRef.current)\n    } finally {\n      errorRef.current = null\n    }\n  }\n)\n\n/**\n * Creates a function that logs an error message that is deduped by the userland\n * callsite.\n * This requires no indirection between the call of this function and the userland\n * callsite i.e. there's only a single library frame above this.\n * Do not use on the Client where sourcemaps and ignore listing might be enabled.\n * Only use that for warnings need a fix independent of the callstack.\n *\n * @param getMessage\n * @returns\n */\nexport function createDedupedByCallsiteServerErrorLoggerDev<Args extends any[]>(\n  getMessage: (...args: Args) => Error\n) {\n  return function logDedupedError(...args: Args) {\n    const message = getMessage(...args)\n\n    if (process.env.NODE_ENV !== 'production') {\n      const callStackFrames = new Error().stack?.split('\\n')\n      if (callStackFrames === undefined || callStackFrames.length < 4) {\n        logErrorOrWarn(message)\n      } else {\n        // Error:\n        //   logDedupedError\n        //   asyncApiBeingAccessedSynchronously\n        //   <userland callsite>\n        // TODO: This breaks if sourcemaps with ignore lists are enabled.\n        const key = callStackFrames[4]\n        errorRef.current = message\n        flushCurrentErrorIfNew(key)\n      }\n    } else {\n      logErrorOrWarn(message)\n    }\n  }\n}\n","import type { WorkStore } from '../app-render/work-async-storage.external'\nimport type { FallbackRouteParams } from './fallback-params'\n\nimport { ReflectAdapter } from '../web/spec-extension/adapters/reflect'\nimport {\n  throwToInterruptStaticGeneration,\n  postponeWithTracking,\n  trackSynchronousRequestDataAccessInDev,\n} from '../app-render/dynamic-rendering'\n\nimport {\n  workUnitAsyncStorage,\n  type PrerenderStore,\n  type PrerenderStorePPR,\n  type PrerenderStoreLegacy,\n  type PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport {\n  describeStringPropertyAccess,\n  wellKnownProperties,\n} from '../../shared/lib/utils/reflect-utils'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger'\nimport { scheduleImmediate } from '../../lib/scheduler'\nimport { dynamicAccessAsyncStorage } from '../app-render/dynamic-access-async-storage.external'\n\nexport type ParamValue = string | Array<string> | undefined\nexport type Params = Record<string, ParamValue>\n\n/**\n * In this version of Next.js the `params` prop passed to Layouts, Pages, and other Segments is a Promise.\n * However to facilitate migration to this new Promise type you can currently still access params directly on the Promise instance passed to these Segments.\n * The `UnsafeUnwrappedParams` type is available if you need to temporarily access the underlying params without first awaiting or `use`ing the Promise.\n *\n * In a future version of Next.js the `params` prop will be a plain Promise and this type will be removed.\n *\n * Typically instances of `params` can be updated automatically to be treated as a Promise by a codemod published alongside this Next.js version however if you\n * have not yet run the codemod of the codemod cannot detect certain instances of `params` usage you should first try to refactor your code to await `params`.\n *\n * If refactoring is not possible but you still want to be able to access params directly without typescript errors you can cast the params Promise to this type\n *\n * ```tsx\n * type Props = { params: Promise<{ id: string }>}\n *\n * export default async function Layout(props: Props) {\n *  const directParams = (props.params as unknown as UnsafeUnwrappedParams<typeof props.params>)\n *  return ...\n * }\n * ```\n *\n * This type is marked deprecated to help identify it as target for refactoring away.\n *\n * @deprecated\n */\nexport type UnsafeUnwrappedParams<P> =\n  P extends Promise<infer U> ? Omit<U, 'then' | 'status' | 'value'> : never\n\nexport function createParamsFromClient(\n  underlyingParams: Params,\n  workStore: WorkStore\n) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-client':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n        return createPrerenderParams(underlyingParams, workStore, workUnitStore)\n      default:\n      // fallthrough\n    }\n  }\n  return createRenderParams(underlyingParams, workStore)\n}\n\n// generateMetadata always runs in RSC context so it is equivalent to a Server Page Component\nexport type CreateServerParamsForMetadata = typeof createServerParamsForMetadata\nexport const createServerParamsForMetadata = createServerParamsForServerSegment\n\n// routes always runs in RSC context so it is equivalent to a Server Page Component\nexport function createServerParamsForRoute(\n  underlyingParams: Params,\n  workStore: WorkStore\n) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-client':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n        return createPrerenderParams(underlyingParams, workStore, workUnitStore)\n      default:\n      // fallthrough\n    }\n  }\n  return createRenderParams(underlyingParams, workStore)\n}\n\nexport function createServerParamsForServerSegment(\n  underlyingParams: Params,\n  workStore: WorkStore\n): Promise<Params> {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-client':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n        return createPrerenderParams(underlyingParams, workStore, workUnitStore)\n      default:\n      // fallthrough\n    }\n  }\n  return createRenderParams(underlyingParams, workStore)\n}\n\nexport function createPrerenderParamsForClientSegment(\n  underlyingParams: Params,\n  workStore: WorkStore\n): Promise<Params> {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  if (\n    prerenderStore &&\n    (prerenderStore.type === 'prerender' ||\n      prerenderStore.type === 'prerender-client')\n  ) {\n    const fallbackParams = workStore.fallbackRouteParams\n    if (fallbackParams) {\n      for (let key in underlyingParams) {\n        if (fallbackParams.has(key)) {\n          // This params object has one of more fallback params so we need to consider\n          // the awaiting of this params object \"dynamic\". Since we are in dynamicIO mode\n          // we encode this as a promise that never resolves\n          return makeHangingPromise(prerenderStore.renderSignal, '`params`')\n        }\n      }\n    }\n  }\n  // We're prerendering in a mode that does not abort. We resolve the promise without\n  // any tracking because we're just transporting a value from server to client where the tracking\n  // will be applied.\n  return Promise.resolve(underlyingParams)\n}\n\nfunction createPrerenderParams(\n  underlyingParams: Params,\n  workStore: WorkStore,\n  prerenderStore: PrerenderStore\n): Promise<Params> {\n  const fallbackParams = workStore.fallbackRouteParams\n  if (fallbackParams) {\n    let hasSomeFallbackParams = false\n    for (const key in underlyingParams) {\n      if (fallbackParams.has(key)) {\n        hasSomeFallbackParams = true\n        break\n      }\n    }\n\n    if (hasSomeFallbackParams) {\n      // params need to be treated as dynamic because we have at least one fallback param\n      switch (prerenderStore.type) {\n        case 'prerender':\n        case 'prerender-client':\n          // We are in a dynamicIO prerender\n          return makeHangingParams(underlyingParams, prerenderStore)\n        default:\n          return makeErroringExoticParams(\n            underlyingParams,\n            fallbackParams,\n            workStore,\n            prerenderStore\n          )\n      }\n    }\n  }\n\n  // We don't have any fallback params so we have an entirely static safe params object\n  return makeUntrackedExoticParams(underlyingParams)\n}\n\nfunction createRenderParams(\n  underlyingParams: Params,\n  workStore: WorkStore\n): Promise<Params> {\n  if (process.env.NODE_ENV === 'development' && !workStore.isPrefetchRequest) {\n    if (process.env.__NEXT_DYNAMIC_IO) {\n      return makeDynamicallyTrackedParamsWithDevWarnings(\n        underlyingParams,\n        workStore\n      )\n    }\n\n    return makeDynamicallyTrackedExoticParamsWithDevWarnings(\n      underlyingParams,\n      workStore\n    )\n  } else {\n    if (process.env.__NEXT_DYNAMIC_IO) {\n      return makeUntrackedParams(underlyingParams)\n    }\n\n    return makeUntrackedExoticParams(underlyingParams)\n  }\n}\n\ninterface CacheLifetime {}\nconst CachedParams = new WeakMap<CacheLifetime, Promise<Params>>()\n\nconst fallbackParamsProxyHandler: ProxyHandler<Promise<Params>> = {\n  get: function get(target, prop, receiver) {\n    if (prop === 'then' || prop === 'catch' || prop === 'finally') {\n      const originalMethod = ReflectAdapter.get(target, prop, receiver)\n\n      return {\n        [prop]: (...args: unknown[]) => {\n          const store = dynamicAccessAsyncStorage.getStore()\n\n          if (store) {\n            store.abortController.abort(\n              new Error(`Accessed fallback \\`params\\` during prerendering.`)\n            )\n          }\n\n          return new Proxy(\n            originalMethod.apply(target, args),\n            fallbackParamsProxyHandler\n          )\n        },\n      }[prop]\n    }\n\n    return ReflectAdapter.get(target, prop, receiver)\n  },\n}\n\nfunction makeHangingParams(\n  underlyingParams: Params,\n  prerenderStore: PrerenderStoreModern\n): Promise<Params> {\n  const cachedParams = CachedParams.get(underlyingParams)\n  if (cachedParams) {\n    return cachedParams\n  }\n\n  const promise = new Proxy(\n    makeHangingPromise<Params>(prerenderStore.renderSignal, '`params`'),\n    fallbackParamsProxyHandler\n  )\n\n  CachedParams.set(underlyingParams, promise)\n\n  return promise\n}\n\nfunction makeErroringExoticParams(\n  underlyingParams: Params,\n  fallbackParams: FallbackRouteParams,\n  workStore: WorkStore,\n  prerenderStore: PrerenderStorePPR | PrerenderStoreLegacy\n): Promise<Params> {\n  const cachedParams = CachedParams.get(underlyingParams)\n  if (cachedParams) {\n    return cachedParams\n  }\n\n  const augmentedUnderlying = { ...underlyingParams }\n\n  // We don't use makeResolvedReactPromise here because params\n  // supports copying with spread and we don't want to unnecessarily\n  // instrument the promise with spreadable properties of ReactPromise.\n  const promise = Promise.resolve(augmentedUnderlying)\n  CachedParams.set(underlyingParams, promise)\n\n  Object.keys(underlyingParams).forEach((prop) => {\n    if (wellKnownProperties.has(prop)) {\n      // These properties cannot be shadowed because they need to be the\n      // true underlying value for Promises to work correctly at runtime\n    } else {\n      if (fallbackParams.has(prop)) {\n        Object.defineProperty(augmentedUnderlying, prop, {\n          get() {\n            const expression = describeStringPropertyAccess('params', prop)\n            // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n            // for params is only dynamic when we're generating a fallback shell\n            // and even when `dynamic = \"error\"` we still support generating dynamic\n            // fallback shells\n            // TODO remove this comment when dynamicIO is the default since there\n            // will be no `dynamic = \"error\"`\n            if (prerenderStore.type === 'prerender-ppr') {\n              // PPR Prerender (no dynamicIO)\n              postponeWithTracking(\n                workStore.route,\n                expression,\n                prerenderStore.dynamicTracking\n              )\n            } else {\n              // Legacy Prerender\n              throwToInterruptStaticGeneration(\n                expression,\n                workStore,\n                prerenderStore\n              )\n            }\n          },\n          enumerable: true,\n        })\n        Object.defineProperty(promise, prop, {\n          get() {\n            const expression = describeStringPropertyAccess('params', prop)\n            // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n            // for params is only dynamic when we're generating a fallback shell\n            // and even when `dynamic = \"error\"` we still support generating dynamic\n            // fallback shells\n            // TODO remove this comment when dynamicIO is the default since there\n            // will be no `dynamic = \"error\"`\n            if (prerenderStore.type === 'prerender-ppr') {\n              // PPR Prerender (no dynamicIO)\n              postponeWithTracking(\n                workStore.route,\n                expression,\n                prerenderStore.dynamicTracking\n              )\n            } else {\n              // Legacy Prerender\n              throwToInterruptStaticGeneration(\n                expression,\n                workStore,\n                prerenderStore\n              )\n            }\n          },\n          set(newValue) {\n            Object.defineProperty(promise, prop, {\n              value: newValue,\n              writable: true,\n              enumerable: true,\n            })\n          },\n          enumerable: true,\n          configurable: true,\n        })\n      } else {\n        ;(promise as any)[prop] = underlyingParams[prop]\n      }\n    }\n  })\n\n  return promise\n}\n\nfunction makeUntrackedExoticParams(underlyingParams: Params): Promise<Params> {\n  const cachedParams = CachedParams.get(underlyingParams)\n  if (cachedParams) {\n    return cachedParams\n  }\n\n  // We don't use makeResolvedReactPromise here because params\n  // supports copying with spread and we don't want to unnecessarily\n  // instrument the promise with spreadable properties of ReactPromise.\n  const promise = Promise.resolve(underlyingParams)\n  CachedParams.set(underlyingParams, promise)\n\n  Object.keys(underlyingParams).forEach((prop) => {\n    if (wellKnownProperties.has(prop)) {\n      // These properties cannot be shadowed because they need to be the\n      // true underlying value for Promises to work correctly at runtime\n    } else {\n      ;(promise as any)[prop] = underlyingParams[prop]\n    }\n  })\n\n  return promise\n}\n\nfunction makeUntrackedParams(underlyingParams: Params): Promise<Params> {\n  const cachedParams = CachedParams.get(underlyingParams)\n  if (cachedParams) {\n    return cachedParams\n  }\n\n  const promise = Promise.resolve(underlyingParams)\n  CachedParams.set(underlyingParams, promise)\n\n  return promise\n}\n\nfunction makeDynamicallyTrackedExoticParamsWithDevWarnings(\n  underlyingParams: Params,\n  store: WorkStore\n): Promise<Params> {\n  const cachedParams = CachedParams.get(underlyingParams)\n  if (cachedParams) {\n    return cachedParams\n  }\n\n  // We don't use makeResolvedReactPromise here because params\n  // supports copying with spread and we don't want to unnecessarily\n  // instrument the promise with spreadable properties of ReactPromise.\n  const promise = new Promise<Params>((resolve) =>\n    scheduleImmediate(() => resolve(underlyingParams))\n  )\n\n  const proxiedProperties = new Set<string>()\n  const unproxiedProperties: Array<string> = []\n\n  Object.keys(underlyingParams).forEach((prop) => {\n    if (wellKnownProperties.has(prop)) {\n      // These properties cannot be shadowed because they need to be the\n      // true underlying value for Promises to work correctly at runtime\n      unproxiedProperties.push(prop)\n    } else {\n      proxiedProperties.add(prop)\n      ;(promise as any)[prop] = underlyingParams[prop]\n    }\n  })\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      if (typeof prop === 'string') {\n        if (\n          // We are accessing a property that was proxied to the promise instance\n          proxiedProperties.has(prop)\n        ) {\n          const expression = describeStringPropertyAccess('params', prop)\n          syncIODev(store.route, expression)\n        }\n      }\n      return ReflectAdapter.get(target, prop, receiver)\n    },\n    set(target, prop, value, receiver) {\n      if (typeof prop === 'string') {\n        proxiedProperties.delete(prop)\n      }\n      return ReflectAdapter.set(target, prop, value, receiver)\n    },\n    ownKeys(target) {\n      const expression = '`...params` or similar expression'\n      syncIODev(store.route, expression, unproxiedProperties)\n      return Reflect.ownKeys(target)\n    },\n  })\n\n  CachedParams.set(underlyingParams, proxiedPromise)\n  return proxiedPromise\n}\n\n// Similar to `makeDynamicallyTrackedExoticParamsWithDevWarnings`, but just\n// logging the sync access without actually defining the params on the promise.\nfunction makeDynamicallyTrackedParamsWithDevWarnings(\n  underlyingParams: Params,\n  store: WorkStore\n): Promise<Params> {\n  const cachedParams = CachedParams.get(underlyingParams)\n  if (cachedParams) {\n    return cachedParams\n  }\n\n  // We don't use makeResolvedReactPromise here because params\n  // supports copying with spread and we don't want to unnecessarily\n  // instrument the promise with spreadable properties of ReactPromise.\n  const promise = new Promise<Params>((resolve) =>\n    scheduleImmediate(() => resolve(underlyingParams))\n  )\n\n  const proxiedProperties = new Set<string>()\n  const unproxiedProperties: Array<string> = []\n\n  Object.keys(underlyingParams).forEach((prop) => {\n    if (wellKnownProperties.has(prop)) {\n      // These properties cannot be shadowed because they need to be the\n      // true underlying value for Promises to work correctly at runtime\n      unproxiedProperties.push(prop)\n    } else {\n      proxiedProperties.add(prop)\n    }\n  })\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      if (typeof prop === 'string') {\n        if (\n          // We are accessing a property that was proxied to the promise instance\n          proxiedProperties.has(prop)\n        ) {\n          const expression = describeStringPropertyAccess('params', prop)\n          warnForSyncAccess(store.route, expression)\n        }\n      }\n      return ReflectAdapter.get(target, prop, receiver)\n    },\n    set(target, prop, value, receiver) {\n      if (typeof prop === 'string') {\n        proxiedProperties.delete(prop)\n      }\n      return ReflectAdapter.set(target, prop, value, receiver)\n    },\n    ownKeys(target) {\n      const expression = '`...params` or similar expression'\n      warnForIncompleteEnumeration(store.route, expression, unproxiedProperties)\n      return Reflect.ownKeys(target)\n    },\n  })\n\n  CachedParams.set(underlyingParams, proxiedPromise)\n  return proxiedPromise\n}\n\nfunction syncIODev(\n  route: string | undefined,\n  expression: string,\n  missingProperties?: Array<string>\n) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (\n    workUnitStore &&\n    workUnitStore.type === 'request' &&\n    workUnitStore.prerenderPhase === true\n  ) {\n    // When we're rendering dynamically in dev we need to advance out of the\n    // Prerender environment when we read Request data synchronously\n    const requestStore = workUnitStore\n    trackSynchronousRequestDataAccessInDev(requestStore)\n  }\n  // In all cases we warn normally\n  if (missingProperties && missingProperties.length > 0) {\n    warnForIncompleteEnumeration(route, expression, missingProperties)\n  } else {\n    warnForSyncAccess(route, expression)\n  }\n}\n\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(\n  createParamsAccessError\n)\n\nconst warnForIncompleteEnumeration =\n  createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError)\n\nfunction createParamsAccessError(\n  route: string | undefined,\n  expression: string\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`params\\` should be awaited before using its properties. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\nfunction createIncompleteEnumerationError(\n  route: string | undefined,\n  expression: string,\n  missingProperties: Array<string>\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`params\\` should be awaited before using its properties. ` +\n      `The following properties were not available through enumeration ` +\n      `because they conflict with builtin property names: ` +\n      `${describeListOfPropertyNames(missingProperties)}. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\nfunction describeListOfPropertyNames(properties: Array<string>) {\n  switch (properties.length) {\n    case 0:\n      throw new InvariantError(\n        'Expected describeListOfPropertyNames to be called with a non-empty list of strings.'\n      )\n    case 1:\n      return `\\`${properties[0]}\\``\n    case 2:\n      return `\\`${properties[0]}\\` and \\`${properties[1]}\\``\n    default: {\n      let description = ''\n      for (let i = 0; i < properties.length - 1; i++) {\n        description += `\\`${properties[i]}\\`, `\n      }\n      description += `, and \\`${properties[properties.length - 1]}\\``\n      return description\n    }\n  }\n}\n","import { RedirectStatusCode } from './redirect-status-code'\nimport {\n  RedirectType,\n  type RedirectError,\n  isRedirectError,\n  REDIRECT_ERROR_CODE,\n} from './redirect-error'\n\nconst actionAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/action-async-storage.external') as typeof import('../../server/app-render/action-async-storage.external')\n      ).actionAsyncStorage\n    : undefined\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  type ??= actionAsyncStorage?.getStore()?.isAction\n    ? RedirectType.push\n    : RedirectType.replace\n\n  throw getRedirectError(url, type, RedirectStatusCode.TemporaryRedirect)\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n","import type { NextConfig } from '../../config-shared'\nimport type { AppRouteRouteDefinition } from '../../route-definitions/app-route-route-definition'\nimport type { AppSegmentConfig } from '../../../build/segment-config/app/app-segment-config'\nimport type { NextRequest } from '../../web/spec-extension/request'\nimport type { PrerenderManifest } from '../../../build'\nimport type { NextURL } from '../../web/next-url'\nimport type { DeepReadonly } from '../../../shared/lib/deep-readonly'\nimport type { WorkUnitStore } from '../../app-render/work-unit-async-storage.external'\n\nimport {\n  RouteModule,\n  type RouteModuleHandleContext,\n  type RouteModuleOptions,\n} from '../route-module'\nimport { createRequestStoreForAPI } from '../../async-storage/request-store'\nimport {\n  createWorkStore,\n  type WorkStoreContext,\n} from '../../async-storage/work-store'\nimport { type HTTP_METHOD, HTTP_METHODS, isHTTPMethod } from '../../web/http'\nimport { getImplicitTags, type ImplicitTags } from '../../lib/implicit-tags'\nimport { patchFetch } from '../../lib/patch-fetch'\nimport { getTracer } from '../../lib/trace/tracer'\nimport { AppRouteRouteHandlersSpan } from '../../lib/trace/constants'\nimport { getPathnameFromAbsolutePath } from './helpers/get-pathname-from-absolute-path'\nimport * as Log from '../../../build/output/log'\nimport { autoImplementMethods } from './helpers/auto-implement-methods'\nimport {\n  appendMutableCookies,\n  type ReadonlyRequestCookies,\n} from '../../web/spec-extension/adapters/request-cookies'\nimport { HeadersAdapter } from '../../web/spec-extension/adapters/headers'\nimport { RequestCookiesAdapter } from '../../web/spec-extension/adapters/request-cookies'\nimport { parsedUrlQueryToParams } from './helpers/parsed-url-query-to-params'\nimport { printDebugThrownValueForProspectiveRender } from '../../app-render/prospective-render-utils'\n\nimport * as serverHooks from '../../../client/components/hooks-server-context'\nimport { DynamicServerError } from '../../../client/components/hooks-server-context'\n\nimport {\n  workAsyncStorage,\n  type WorkStore,\n} from '../../app-render/work-async-storage.external'\nimport {\n  workUnitAsyncStorage,\n  type RequestStore,\n  type PrerenderStore,\n} from '../../app-render/work-unit-async-storage.external'\nimport {\n  actionAsyncStorage,\n  type ActionStore,\n} from '../../app-render/action-async-storage.external'\nimport * as sharedModules from './shared-modules'\nimport { getIsPossibleServerAction } from '../../lib/server-action-request-meta'\nimport { RequestCookies } from 'next/dist/compiled/@edge-runtime/cookies'\nimport { cleanURL } from './helpers/clean-url'\nimport { StaticGenBailoutError } from '../../../client/components/static-generation-bailout'\nimport { isStaticGenEnabled } from './helpers/is-static-gen-enabled'\nimport {\n  abortAndThrowOnSynchronousRequestDataAccess,\n  postponeWithTracking,\n  createDynamicTrackingState,\n  getFirstDynamicReason,\n} from '../../app-render/dynamic-rendering'\nimport { ReflectAdapter } from '../../web/spec-extension/adapters/reflect'\nimport type { RenderOptsPartial } from '../../app-render/types'\nimport { CacheSignal } from '../../app-render/cache-signal'\nimport { scheduleImmediate } from '../../../lib/scheduler'\nimport { createServerParamsForRoute } from '../../request/params'\nimport type { AppSegment } from '../../../build/segment-config/app/app-segments'\nimport {\n  getRedirectStatusCodeFromError,\n  getURLFromRedirectError,\n} from '../../../client/components/redirect'\nimport {\n  isRedirectError,\n  type RedirectError,\n} from '../../../client/components/redirect-error'\nimport {\n  getAccessFallbackHTTPStatus,\n  isHTTPAccessFallbackError,\n} from '../../../client/components/http-access-fallback/http-access-fallback'\nimport { RedirectStatusCode } from '../../../client/components/redirect-status-code'\nimport { INFINITE_CACHE } from '../../../lib/constants'\nimport { executeRevalidates } from '../../revalidation-utils'\nimport { trackPendingModules } from '../../app-render/module-loading/track-module-loading.external'\n\nexport class WrappedNextRouterError {\n  constructor(\n    public readonly error: RedirectError,\n    public readonly headers?: Headers\n  ) {}\n}\n\n/**\n * The AppRouteModule is the type of the module exported by the bundled App\n * Route module.\n */\nexport type AppRouteModule = typeof import('../../../build/templates/app-route')\n\nexport type AppRouteSharedContext = {\n  buildId: string\n}\n\n/**\n * AppRouteRouteHandlerContext is the context that is passed to the route\n * handler for app routes.\n */\nexport interface AppRouteRouteHandlerContext extends RouteModuleHandleContext {\n  renderOpts: WorkStoreContext['renderOpts'] &\n    Pick<RenderOptsPartial, 'onInstrumentationRequestError'> &\n    CollectedCacheInfo\n  prerenderManifest: DeepReadonly<PrerenderManifest>\n  sharedContext: AppRouteSharedContext\n}\n\ntype CollectedCacheInfo = {\n  collectedTags?: string\n  collectedRevalidate?: number\n  collectedExpire?: number\n  collectedStale?: number\n}\n\n/**\n * AppRouteHandlerFnContext is the context that is passed to the handler as the\n * second argument.\n */\ntype AppRouteHandlerFnContext = {\n  params?: Promise<Record<string, string | string[] | undefined>>\n}\n\n/**\n * Handler function for app routes. If a non-Response value is returned, an error\n * will be thrown.\n */\nexport type AppRouteHandlerFn = (\n  /**\n   * Incoming request object.\n   */\n  req: NextRequest,\n  /**\n   * Context properties on the request (including the parameters if this was a\n   * dynamic route).\n   */\n  ctx: AppRouteHandlerFnContext\n) => unknown\n\n/**\n * AppRouteHandlers describes the handlers for app routes that is provided by\n * the userland module.\n */\nexport type AppRouteHandlers = {\n  [method in HTTP_METHOD]?: AppRouteHandlerFn\n}\n\n/**\n * AppRouteUserlandModule is the userland module that is provided for app\n * routes. This contains all the user generated code.\n */\nexport type AppRouteUserlandModule = AppRouteHandlers &\n  Pick<\n    AppSegmentConfig,\n    'dynamic' | 'revalidate' | 'dynamicParams' | 'fetchCache'\n  > &\n  Pick<AppSegment, 'generateStaticParams'>\n\n/**\n * AppRouteRouteModuleOptions is the options that are passed to the app route\n * module from the bundled code.\n */\nexport interface AppRouteRouteModuleOptions\n  extends RouteModuleOptions<AppRouteRouteDefinition, AppRouteUserlandModule> {\n  readonly resolvedPagePath: string\n  readonly nextConfigOutput: NextConfig['output']\n}\n\n/**\n * AppRouteRouteHandler is the handler for app routes.\n */\nexport class AppRouteRouteModule extends RouteModule<\n  AppRouteRouteDefinition,\n  AppRouteUserlandModule\n> {\n  /**\n   * A reference to the request async storage.\n   */\n  public readonly workUnitAsyncStorage = workUnitAsyncStorage\n\n  /**\n   * A reference to the static generation async storage.\n   */\n  public readonly workAsyncStorage = workAsyncStorage\n\n  /**\n   * An interface to call server hooks which interact with the underlying\n   * storage.\n   */\n  public readonly serverHooks = serverHooks\n\n  public static readonly sharedModules = sharedModules\n\n  /**\n   * A reference to the mutation related async storage, such as mutations of\n   * cookies.\n   */\n  public readonly actionAsyncStorage = actionAsyncStorage\n\n  public readonly resolvedPagePath: string\n  public readonly nextConfigOutput: NextConfig['output'] | undefined\n\n  private readonly methods: Record<HTTP_METHOD, AppRouteHandlerFn>\n  private readonly hasNonStaticMethods: boolean\n  private readonly dynamic: AppRouteUserlandModule['dynamic']\n\n  constructor({\n    userland,\n    definition,\n    distDir,\n    projectDir,\n    resolvedPagePath,\n    nextConfigOutput,\n  }: AppRouteRouteModuleOptions) {\n    super({ userland, definition, distDir, projectDir })\n\n    this.resolvedPagePath = resolvedPagePath\n    this.nextConfigOutput = nextConfigOutput\n\n    // Automatically implement some methods if they aren't implemented by the\n    // userland module.\n    this.methods = autoImplementMethods(userland)\n    this.isAppRouter = true\n\n    // Get the non-static methods for this route.\n    this.hasNonStaticMethods = hasNonStaticMethods(userland)\n\n    // Get the dynamic property from the userland module.\n    this.dynamic = this.userland.dynamic\n    if (this.nextConfigOutput === 'export') {\n      if (this.dynamic === 'force-dynamic') {\n        throw new Error(\n          `export const dynamic = \"force-dynamic\" on page \"${definition.pathname}\" cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export`\n        )\n      } else if (!isStaticGenEnabled(this.userland) && this.userland['GET']) {\n        throw new Error(\n          `export const dynamic = \"force-static\"/export const revalidate not configured on route \"${definition.pathname}\" with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export`\n        )\n      } else {\n        this.dynamic = 'error'\n      }\n    }\n\n    // We only warn in development after here, so return if we're not in\n    // development.\n    if (process.env.NODE_ENV === 'development') {\n      // Print error in development if the exported handlers are in lowercase, only\n      // uppercase handlers are supported.\n      const lowercased = HTTP_METHODS.map((method) => method.toLowerCase())\n      for (const method of lowercased) {\n        if (method in this.userland) {\n          Log.error(\n            `Detected lowercase method '${method}' in '${\n              this.resolvedPagePath\n            }'. Export the uppercase '${method.toUpperCase()}' method name to fix this error.`\n          )\n        }\n      }\n\n      // Print error if the module exports a default handler, they must use named\n      // exports for each HTTP method.\n      if ('default' in this.userland) {\n        Log.error(\n          `Detected default export in '${this.resolvedPagePath}'. Export a named export for each HTTP method instead.`\n        )\n      }\n\n      // If there is no methods exported by this module, then return a not found\n      // response.\n      if (!HTTP_METHODS.some((method) => method in this.userland)) {\n        Log.error(\n          `No HTTP methods exported in '${this.resolvedPagePath}'. Export a named export for each HTTP method.`\n        )\n      }\n    }\n  }\n\n  /**\n   * Resolves the handler function for the given method.\n   *\n   * @param method the requested method\n   * @returns the handler function for the given method\n   */\n  private resolve(method: string): AppRouteHandlerFn {\n    // Ensure that the requested method is a valid method (to prevent RCE's).\n    if (!isHTTPMethod(method)) return () => new Response(null, { status: 400 })\n\n    // Return the handler.\n    return this.methods[method]\n  }\n\n  private async do(\n    handler: AppRouteHandlerFn,\n    actionStore: ActionStore,\n    workStore: WorkStore,\n    // @TODO refactor to not take this argument but instead construct the RequestStore\n    // inside this function. Right now we get passed a RequestStore even when\n    // we're going to do a prerender. We should probably just split do up into prexecute and execute\n    requestStore: RequestStore,\n    implicitTags: ImplicitTags,\n    request: NextRequest,\n    context: AppRouteRouteHandlerContext\n  ) {\n    const isStaticGeneration = workStore.isStaticGeneration\n    const dynamicIOEnabled = !!context.renderOpts.experimental?.dynamicIO\n\n    // Patch the global fetch.\n    patchFetch({\n      workAsyncStorage: this.workAsyncStorage,\n      workUnitAsyncStorage: this.workUnitAsyncStorage,\n    })\n\n    const handlerContext: AppRouteHandlerFnContext = {\n      params: context.params\n        ? createServerParamsForRoute(\n            parsedUrlQueryToParams(context.params),\n            workStore\n          )\n        : undefined,\n    }\n\n    const resolvePendingRevalidations = () => {\n      context.renderOpts.pendingWaitUntil = executeRevalidates(\n        workStore\n      ).finally(() => {\n        if (process.env.NEXT_PRIVATE_DEBUG_CACHE) {\n          console.log(\n            'pending revalidates promise finished for:',\n            requestStore.url\n          )\n        }\n      })\n    }\n\n    let prerenderStore: null | PrerenderStore = null\n\n    let res: unknown\n    try {\n      if (isStaticGeneration) {\n        const userlandRevalidate = this.userland.revalidate\n        const defaultRevalidate: number =\n          // If the static generation store does not have a revalidate value\n          // set, then we should set it the revalidate value from the userland\n          // module or default to false.\n          userlandRevalidate === false || userlandRevalidate === undefined\n            ? INFINITE_CACHE\n            : userlandRevalidate\n\n        if (dynamicIOEnabled) {\n          /**\n           * When we are attempting to statically prerender the GET handler of a route.ts module\n           * and dynamicIO is on we follow a similar pattern to rendering.\n           *\n           * We first run the handler letting caches fill. If something synchronously dynamic occurs\n           * during this prospective render then we can infer it will happen on every render and we\n           * just bail out of prerendering.\n           *\n           * Next we run the handler again and we check if we get a result back in a microtask.\n           * Next.js expects the return value to be a Response or a Thenable that resolves to a Response.\n           * Unfortunately Response's do not allow for accessing the response body synchronously or in\n           * a microtask so we need to allow one more task to unwrap the response body. This is a slightly\n           * different semantic than what we have when we render and it means that certain tasks can still\n           * execute before a prerender completes such as a carefully timed setImmediate.\n           *\n           * Functionally though IO should still take longer than the time it takes to unwrap the response body\n           * so our heuristic of excluding any IO should be preserved.\n           */\n          const prospectiveController = new AbortController()\n          let prospectiveRenderIsDynamic = false\n          const cacheSignal = new CacheSignal()\n          let dynamicTracking = createDynamicTrackingState(undefined)\n\n          const prospectiveRoutePrerenderStore: PrerenderStore =\n            (prerenderStore = {\n              type: 'prerender',\n              phase: 'action',\n              // This replicates prior behavior where rootParams is empty in routes\n              // TODO we need to make this have the proper rootParams for this route\n              rootParams: {},\n              implicitTags,\n              renderSignal: prospectiveController.signal,\n              controller: prospectiveController,\n              cacheSignal,\n              // During prospective render we don't use a controller\n              // because we need to let all caches fill.\n              dynamicTracking,\n              allowEmptyStaticShell: false,\n              revalidate: defaultRevalidate,\n              expire: INFINITE_CACHE,\n              stale: INFINITE_CACHE,\n              tags: [...implicitTags.tags],\n              // TODO: Shouldn't we provide an RDC here?\n              prerenderResumeDataCache: null,\n              renderResumeDataCache: null,\n              hmrRefreshHash: undefined,\n              captureOwnerStack: undefined,\n            })\n\n          let prospectiveResult\n          try {\n            prospectiveResult = this.workUnitAsyncStorage.run(\n              prospectiveRoutePrerenderStore,\n              handler,\n              request,\n              handlerContext\n            )\n          } catch (err) {\n            if (prospectiveController.signal.aborted) {\n              // the route handler called an API which is always dynamic\n              // there is no need to try again\n              prospectiveRenderIsDynamic = true\n            } else if (\n              process.env.NEXT_DEBUG_BUILD ||\n              process.env.__NEXT_VERBOSE_LOGGING\n            ) {\n              printDebugThrownValueForProspectiveRender(err, workStore.route)\n            }\n          }\n          if (\n            typeof prospectiveResult === 'object' &&\n            prospectiveResult !== null &&\n            typeof (prospectiveResult as any).then === 'function'\n          ) {\n            // The handler returned a Thenable. We'll listen for rejections to determine\n            // if the route is erroring for dynamic reasons.\n            ;(prospectiveResult as any as Promise<unknown>).then(\n              () => {},\n              (err) => {\n                if (prospectiveController.signal.aborted) {\n                  // the route handler called an API which is always dynamic\n                  // there is no need to try again\n                  prospectiveRenderIsDynamic = true\n                } else if (process.env.NEXT_DEBUG_BUILD) {\n                  printDebugThrownValueForProspectiveRender(\n                    err,\n                    workStore.route\n                  )\n                }\n              }\n            )\n          }\n\n          trackPendingModules(cacheSignal)\n          await cacheSignal.cacheReady()\n\n          if (prospectiveRenderIsDynamic) {\n            // the route handler called an API which is always dynamic\n            // there is no need to try again\n            const dynamicReason = getFirstDynamicReason(dynamicTracking)\n            if (dynamicReason) {\n              throw new DynamicServerError(\n                `Route ${workStore.route} couldn't be rendered statically because it used \\`${dynamicReason}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n              )\n            } else {\n              console.error(\n                'Expected Next.js to keep track of reason for opting out of static rendering but one was not found. This is a bug in Next.js'\n              )\n              throw new DynamicServerError(\n                `Route ${workStore.route} couldn't be rendered statically because it used a dynamic API. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n              )\n            }\n          }\n\n          // TODO start passing this controller to the route handler. We should expose\n          // it so the handler to abort inflight requests and other operations if we abort\n          // the prerender.\n          const finalController = new AbortController()\n          dynamicTracking = createDynamicTrackingState(undefined)\n\n          const finalRoutePrerenderStore: PrerenderStore = (prerenderStore = {\n            type: 'prerender',\n            phase: 'action',\n            rootParams: {},\n            implicitTags,\n            renderSignal: finalController.signal,\n            controller: finalController,\n            cacheSignal: null,\n            dynamicTracking,\n            allowEmptyStaticShell: false,\n            revalidate: defaultRevalidate,\n            expire: INFINITE_CACHE,\n            stale: INFINITE_CACHE,\n            tags: [...implicitTags.tags],\n            // TODO: Shouldn't we provide an RDC here?\n            prerenderResumeDataCache: null,\n            renderResumeDataCache: null,\n            hmrRefreshHash: undefined,\n            captureOwnerStack: undefined,\n          })\n\n          let responseHandled = false\n          res = await new Promise((resolve, reject) => {\n            scheduleImmediate(async () => {\n              try {\n                const result = await (this.workUnitAsyncStorage.run(\n                  finalRoutePrerenderStore,\n                  handler,\n                  request,\n                  handlerContext\n                ) as Promise<Response>)\n                if (responseHandled) {\n                  // we already rejected in the followup task\n                  return\n                } else if (!(result instanceof Response)) {\n                  // This is going to error but we let that happen below\n                  resolve(result)\n                  return\n                }\n\n                responseHandled = true\n\n                let bodyHandled = false\n                result.arrayBuffer().then((body) => {\n                  if (!bodyHandled) {\n                    bodyHandled = true\n\n                    resolve(\n                      new Response(body, {\n                        headers: result.headers,\n                        status: result.status,\n                        statusText: result.statusText,\n                      })\n                    )\n                  }\n                }, reject)\n                scheduleImmediate(() => {\n                  if (!bodyHandled) {\n                    bodyHandled = true\n                    finalController.abort()\n                    reject(createDynamicIOError(workStore.route))\n                  }\n                })\n              } catch (err) {\n                reject(err)\n              }\n            })\n            scheduleImmediate(() => {\n              if (!responseHandled) {\n                responseHandled = true\n                finalController.abort()\n                reject(createDynamicIOError(workStore.route))\n              }\n            })\n          })\n          if (finalController.signal.aborted) {\n            // We aborted from within the execution\n            throw createDynamicIOError(workStore.route)\n          } else {\n            // We didn't abort during the execution. We can abort now as a matter of semantics\n            // though at the moment nothing actually consumes this signal so it won't halt any\n            // inflight work.\n            finalController.abort()\n          }\n        } else {\n          prerenderStore = {\n            type: 'prerender-legacy',\n            phase: 'action',\n            rootParams: {},\n            implicitTags,\n            revalidate: defaultRevalidate,\n            expire: INFINITE_CACHE,\n            stale: INFINITE_CACHE,\n            tags: [...implicitTags.tags],\n          }\n\n          res = await workUnitAsyncStorage.run(\n            prerenderStore,\n            handler,\n            request,\n            handlerContext\n          )\n        }\n      } else {\n        res = await workUnitAsyncStorage.run(\n          requestStore,\n          handler,\n          request,\n          handlerContext\n        )\n      }\n    } catch (err) {\n      if (isRedirectError(err)) {\n        const url = getURLFromRedirectError(err)\n        if (!url) {\n          throw new Error('Invariant: Unexpected redirect url format')\n        }\n\n        // We need to capture any headers that should be sent on\n        // the response.\n        const headers = new Headers({ Location: url })\n\n        // Let's append any cookies that were added by the\n        // cookie API.\n        // TODO leaving the gate here b/c it indicates that we might not actually want to do this\n        // on every `do` call. During prerender there should be no mutableCookies because\n        if (requestStore.type === 'request') {\n          appendMutableCookies(headers, requestStore.mutableCookies)\n        }\n\n        resolvePendingRevalidations()\n\n        // Return the redirect response.\n        return new Response(null, {\n          // If we're in an action, we want to use a 303 redirect as we don't\n          // want the POST request to follow the redirect, as it could result in\n          // erroneous re-submissions.\n          status: actionStore.isAction\n            ? RedirectStatusCode.SeeOther\n            : getRedirectStatusCodeFromError(err),\n          headers,\n        })\n      } else if (isHTTPAccessFallbackError(err)) {\n        const httpStatus = getAccessFallbackHTTPStatus(err)\n        return new Response(null, { status: httpStatus })\n      }\n\n      throw err\n    }\n\n    // Validate that the response is a valid response object.\n    if (!(res instanceof Response)) {\n      throw new Error(\n        `No response is returned from route handler '${this.resolvedPagePath}'. Ensure you return a \\`Response\\` or a \\`NextResponse\\` in all branches of your handler.`\n      )\n    }\n\n    context.renderOpts.fetchMetrics = workStore.fetchMetrics\n\n    resolvePendingRevalidations()\n\n    if (prerenderStore) {\n      context.renderOpts.collectedTags = prerenderStore.tags?.join(',')\n      context.renderOpts.collectedRevalidate = prerenderStore.revalidate\n      context.renderOpts.collectedExpire = prerenderStore.expire\n      context.renderOpts.collectedStale = prerenderStore.stale\n    }\n\n    // It's possible cookies were set in the handler, so we need\n    // to merge the modified cookies and the returned response\n    // here.\n    const headers = new Headers(res.headers)\n    if (\n      requestStore.type === 'request' &&\n      appendMutableCookies(headers, requestStore.mutableCookies)\n    ) {\n      return new Response(res.body, {\n        status: res.status,\n        statusText: res.statusText,\n        headers,\n      })\n    }\n\n    return res\n  }\n\n  public async handle(\n    req: NextRequest,\n    context: AppRouteRouteHandlerContext\n  ): Promise<Response> {\n    // Get the handler function for the given method.\n    const handler = this.resolve(req.method)\n\n    // Get the context for the static generation.\n    const staticGenerationContext: WorkStoreContext = {\n      // App Routes don't support unknown route params.\n      fallbackRouteParams: null,\n      page: this.definition.page,\n      renderOpts: context.renderOpts,\n      buildId: context.sharedContext.buildId,\n      previouslyRevalidatedTags: [],\n    }\n\n    // Add the fetchCache option to the renderOpts.\n    staticGenerationContext.renderOpts.fetchCache = this.userland.fetchCache\n\n    const actionStore: ActionStore = {\n      isAppRoute: true,\n      isAction: getIsPossibleServerAction(req),\n    }\n\n    const implicitTags = await getImplicitTags(\n      this.definition.page,\n      req.nextUrl,\n      // App Routes don't support unknown route params.\n      null\n    )\n\n    const requestStore = createRequestStoreForAPI(\n      req,\n      req.nextUrl,\n      implicitTags,\n      undefined,\n      context.prerenderManifest.preview\n    )\n\n    const workStore = createWorkStore(staticGenerationContext)\n\n    // Run the handler with the request AsyncLocalStorage to inject the helper\n    // support. We set this to `unknown` because the type is not known until\n    // runtime when we do a instanceof check below.\n    const response: unknown = await this.actionAsyncStorage.run(\n      actionStore,\n      () =>\n        this.workUnitAsyncStorage.run(requestStore, () =>\n          this.workAsyncStorage.run(workStore, async () => {\n            // Check to see if we should bail out of static generation based on\n            // having non-static methods.\n            if (this.hasNonStaticMethods) {\n              if (workStore.isStaticGeneration) {\n                const err = new DynamicServerError(\n                  'Route is configured with methods that cannot be statically generated.'\n                )\n                workStore.dynamicUsageDescription = err.message\n                workStore.dynamicUsageStack = err.stack\n                throw err\n              }\n            }\n\n            // We assume we can pass the original request through however we may end up\n            // proxying it in certain circumstances based on execution type and configuration\n            let request = req\n\n            // Update the static generation store based on the dynamic property.\n            switch (this.dynamic) {\n              case 'force-dynamic': {\n                // Routes of generated paths should be dynamic\n                workStore.forceDynamic = true\n                if (workStore.isStaticGeneration) {\n                  const err = new DynamicServerError(\n                    'Route is configured with dynamic = error which cannot be statically generated.'\n                  )\n                  workStore.dynamicUsageDescription = err.message\n                  workStore.dynamicUsageStack = err.stack\n                  throw err\n                }\n                break\n              }\n              case 'force-static':\n                // The dynamic property is set to force-static, so we should\n                // force the page to be static.\n                workStore.forceStatic = true\n                // We also Proxy the request to replace dynamic data on the request\n                // with empty stubs to allow for safely executing as static\n                request = new Proxy(req, forceStaticRequestHandlers)\n                break\n              case 'error':\n                // The dynamic property is set to error, so we should throw an\n                // error if the page is being statically generated.\n                workStore.dynamicShouldError = true\n                if (workStore.isStaticGeneration)\n                  request = new Proxy(req, requireStaticRequestHandlers)\n                break\n              default:\n                // We proxy `NextRequest` to track dynamic access, and potentially bail out of static generation\n                request = proxyNextRequest(req, workStore)\n            }\n\n            // TODO: propagate this pathname from route matcher\n            const route = getPathnameFromAbsolutePath(this.resolvedPagePath)\n\n            const tracer = getTracer()\n\n            // Update the root span attribute for the route.\n            tracer.setRootSpanAttribute('next.route', route)\n\n            return tracer.trace(\n              AppRouteRouteHandlersSpan.runHandler,\n              {\n                spanName: `executing api route (app) ${route}`,\n                attributes: {\n                  'next.route': route,\n                },\n              },\n              async () =>\n                this.do(\n                  handler,\n                  actionStore,\n                  workStore,\n                  requestStore,\n                  implicitTags,\n                  request,\n                  context\n                )\n            )\n          })\n        )\n    )\n\n    // If the handler did't return a valid response, then return the internal\n    // error response.\n    if (!(response instanceof Response)) {\n      // TODO: validate the correct handling behavior, maybe log something?\n      return new Response(null, { status: 500 })\n    }\n\n    if (response.headers.has('x-middleware-rewrite')) {\n      throw new Error(\n        'NextResponse.rewrite() was used in a app route handler, this is not currently supported. Please remove the invocation to continue.'\n      )\n    }\n\n    if (response.headers.get('x-middleware-next') === '1') {\n      // TODO: move this error into the `NextResponse.next()` function.\n      throw new Error(\n        'NextResponse.next() was used in a app route handler, this is not supported. See here for more info: https://nextjs.org/docs/messages/next-response-next-in-app-route-handler'\n      )\n    }\n\n    return response\n  }\n}\n\nexport default AppRouteRouteModule\n\n/**\n * Gets all the method names for handlers that are not considered static.\n *\n * @param handlers the handlers from the userland module\n * @returns the method names that are not considered static or false if all\n *          methods are static\n */\nexport function hasNonStaticMethods(handlers: AppRouteHandlers): boolean {\n  if (\n    // Order these by how common they are to be used\n    handlers.POST ||\n    handlers.PUT ||\n    handlers.DELETE ||\n    handlers.PATCH ||\n    handlers.OPTIONS\n  ) {\n    return true\n  }\n  return false\n}\n\n// These symbols will be used to stash cached values on Proxied requests without requiring\n// additional closures or storage such as WeakMaps.\nconst nextURLSymbol = Symbol('nextUrl')\nconst requestCloneSymbol = Symbol('clone')\nconst urlCloneSymbol = Symbol('clone')\nconst searchParamsSymbol = Symbol('searchParams')\nconst hrefSymbol = Symbol('href')\nconst toStringSymbol = Symbol('toString')\nconst headersSymbol = Symbol('headers')\nconst cookiesSymbol = Symbol('cookies')\n\ntype RequestSymbolTarget = {\n  [headersSymbol]?: Headers\n  [cookiesSymbol]?: RequestCookies | ReadonlyRequestCookies\n  [nextURLSymbol]?: NextURL\n  [requestCloneSymbol]?: () => NextRequest\n}\n\ntype UrlSymbolTarget = {\n  [searchParamsSymbol]?: URLSearchParams\n  [hrefSymbol]?: string\n  [toStringSymbol]?: () => string\n  [urlCloneSymbol]?: () => NextURL\n}\n\n/**\n * The general technique with these proxy handlers is to prioritize keeping them static\n * by stashing computed values on the Proxy itself. This is safe because the Proxy is\n * inaccessible to the consumer since all operations are forwarded\n */\nconst forceStaticRequestHandlers = {\n  get(\n    target: NextRequest & RequestSymbolTarget,\n    prop: string | symbol,\n    receiver: any\n  ): unknown {\n    switch (prop) {\n      case 'headers':\n        return (\n          target[headersSymbol] ||\n          (target[headersSymbol] = HeadersAdapter.seal(new Headers({})))\n        )\n      case 'cookies':\n        return (\n          target[cookiesSymbol] ||\n          (target[cookiesSymbol] = RequestCookiesAdapter.seal(\n            new RequestCookies(new Headers({}))\n          ))\n        )\n      case 'nextUrl':\n        return (\n          target[nextURLSymbol] ||\n          (target[nextURLSymbol] = new Proxy(\n            target.nextUrl,\n            forceStaticNextUrlHandlers\n          ))\n        )\n      case 'url':\n        // we don't need to separately cache this we can just read the nextUrl\n        // and return the href since we know it will have been stripped of any\n        // dynamic parts. We access via the receiver to trigger the get trap\n        return receiver.nextUrl.href\n      case 'geo':\n      case 'ip':\n        return undefined\n      case 'clone':\n        return (\n          target[requestCloneSymbol] ||\n          (target[requestCloneSymbol] = () =>\n            new Proxy(\n              // This is vaguely unsafe but it's required since NextRequest does not implement\n              // clone. The reason we might expect this to work in this context is the Proxy will\n              // respond with static-amenable values anyway somewhat restoring the interface.\n              // @TODO we need to rethink NextRequest and NextURL because they are not sufficientlly\n              // sophisticated to adequately represent themselves in all contexts. A better approach is\n              // to probably embed the static generation logic into the class itself removing the need\n              // for any kind of proxying\n              target.clone() as NextRequest,\n              forceStaticRequestHandlers\n            ))\n        )\n      default:\n        return ReflectAdapter.get(target, prop, receiver)\n    }\n  },\n  // We don't need to proxy set because all the properties we proxy are ready only\n  // and will be ignored\n}\n\nconst forceStaticNextUrlHandlers = {\n  get(\n    target: NextURL & UrlSymbolTarget,\n    prop: string | symbol,\n    receiver: any\n  ): unknown {\n    switch (prop) {\n      // URL properties\n      case 'search':\n        return ''\n      case 'searchParams':\n        return (\n          target[searchParamsSymbol] ||\n          (target[searchParamsSymbol] = new URLSearchParams())\n        )\n      case 'href':\n        return (\n          target[hrefSymbol] ||\n          (target[hrefSymbol] = cleanURL(target.href).href)\n        )\n      case 'toJSON':\n      case 'toString':\n        return (\n          target[toStringSymbol] ||\n          (target[toStringSymbol] = () => receiver.href)\n        )\n\n      // NextUrl properties\n      case 'url':\n        // Currently nextURL does not expose url but our Docs indicate that it is an available property\n        // I am forcing this to undefined here to avoid accidentally exposing a dynamic value later if\n        // the underlying nextURL ends up adding this property\n        return undefined\n      case 'clone':\n        return (\n          target[urlCloneSymbol] ||\n          (target[urlCloneSymbol] = () =>\n            new Proxy(target.clone(), forceStaticNextUrlHandlers))\n        )\n      default:\n        return ReflectAdapter.get(target, prop, receiver)\n    }\n  },\n}\n\nfunction proxyNextRequest(request: NextRequest, workStore: WorkStore) {\n  const nextUrlHandlers = {\n    get(\n      target: NextURL & UrlSymbolTarget,\n      prop: string | symbol,\n      receiver: any\n    ): unknown {\n      switch (prop) {\n        case 'search':\n        case 'searchParams':\n        case 'url':\n        case 'href':\n        case 'toJSON':\n        case 'toString':\n        case 'origin': {\n          const workUnitStore = workUnitAsyncStorage.getStore()\n          trackDynamic(workStore, workUnitStore, `nextUrl.${prop}`)\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n        case 'clone':\n          return (\n            target[urlCloneSymbol] ||\n            (target[urlCloneSymbol] = () =>\n              new Proxy(target.clone(), nextUrlHandlers))\n          )\n        default:\n          return ReflectAdapter.get(target, prop, receiver)\n      }\n    },\n  }\n\n  const nextRequestHandlers = {\n    get(\n      target: NextRequest & RequestSymbolTarget,\n      prop: string | symbol\n    ): unknown {\n      switch (prop) {\n        case 'nextUrl':\n          return (\n            target[nextURLSymbol] ||\n            (target[nextURLSymbol] = new Proxy(target.nextUrl, nextUrlHandlers))\n          )\n        case 'headers':\n        case 'cookies':\n        case 'url':\n        case 'body':\n        case 'blob':\n        case 'json':\n        case 'text':\n        case 'arrayBuffer':\n        case 'formData': {\n          const workUnitStore = workUnitAsyncStorage.getStore()\n          trackDynamic(workStore, workUnitStore, `request.${prop}`)\n          // The receiver arg is intentionally the same as the target to fix an issue with\n          // edge runtime, where attempting to access internal slots with the wrong `this` context\n          // results in an error.\n          return ReflectAdapter.get(target, prop, target)\n        }\n        case 'clone':\n          return (\n            target[requestCloneSymbol] ||\n            (target[requestCloneSymbol] = () =>\n              new Proxy(\n                // This is vaguely unsafe but it's required since NextRequest does not implement\n                // clone. The reason we might expect this to work in this context is the Proxy will\n                // respond with static-amenable values anyway somewhat restoring the interface.\n                // @TODO we need to rethink NextRequest and NextURL because they are not sufficientlly\n                // sophisticated to adequately represent themselves in all contexts. A better approach is\n                // to probably embed the static generation logic into the class itself removing the need\n                // for any kind of proxying\n                target.clone() as NextRequest,\n                nextRequestHandlers\n              ))\n          )\n        default:\n          // The receiver arg is intentionally the same as the target to fix an issue with\n          // edge runtime, where attempting to access internal slots with the wrong `this` context\n          // results in an error.\n          return ReflectAdapter.get(target, prop, target)\n      }\n    },\n    // We don't need to proxy set because all the properties we proxy are ready only\n    // and will be ignored\n  }\n\n  return new Proxy(request, nextRequestHandlers)\n}\n\nconst requireStaticRequestHandlers = {\n  get(\n    target: NextRequest & RequestSymbolTarget,\n    prop: string | symbol,\n    receiver: any\n  ): unknown {\n    switch (prop) {\n      case 'nextUrl':\n        return (\n          target[nextURLSymbol] ||\n          (target[nextURLSymbol] = new Proxy(\n            target.nextUrl,\n            requireStaticNextUrlHandlers\n          ))\n        )\n      case 'headers':\n      case 'cookies':\n      case 'url':\n      case 'body':\n      case 'blob':\n      case 'json':\n      case 'text':\n      case 'arrayBuffer':\n      case 'formData':\n        throw new StaticGenBailoutError(\n          `Route ${target.nextUrl.pathname} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`request.${prop}\\`.`\n        )\n      case 'clone':\n        return (\n          target[requestCloneSymbol] ||\n          (target[requestCloneSymbol] = () =>\n            new Proxy(\n              // This is vaguely unsafe but it's required since NextRequest does not implement\n              // clone. The reason we might expect this to work in this context is the Proxy will\n              // respond with static-amenable values anyway somewhat restoring the interface.\n              // @TODO we need to rethink NextRequest and NextURL because they are not sufficientlly\n              // sophisticated to adequately represent themselves in all contexts. A better approach is\n              // to probably embed the static generation logic into the class itself removing the need\n              // for any kind of proxying\n              target.clone() as NextRequest,\n              requireStaticRequestHandlers\n            ))\n        )\n      default:\n        return ReflectAdapter.get(target, prop, receiver)\n    }\n  },\n  // We don't need to proxy set because all the properties we proxy are ready only\n  // and will be ignored\n}\n\nconst requireStaticNextUrlHandlers = {\n  get(\n    target: NextURL & UrlSymbolTarget,\n    prop: string | symbol,\n    receiver: any\n  ): unknown {\n    switch (prop) {\n      case 'search':\n      case 'searchParams':\n      case 'url':\n      case 'href':\n      case 'toJSON':\n      case 'toString':\n      case 'origin':\n        throw new StaticGenBailoutError(\n          `Route ${target.pathname} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`nextUrl.${prop}\\`.`\n        )\n      case 'clone':\n        return (\n          target[urlCloneSymbol] ||\n          (target[urlCloneSymbol] = () =>\n            new Proxy(target.clone(), requireStaticNextUrlHandlers))\n        )\n      default:\n        return ReflectAdapter.get(target, prop, receiver)\n    }\n  },\n}\n\nfunction createDynamicIOError(route: string) {\n  return new DynamicServerError(\n    `Route ${route} couldn't be rendered statically because it used IO that was not cached. See more info here: https://nextjs.org/docs/messages/dynamic-io`\n  )\n}\n\nfunction trackDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | WorkUnitStore,\n  expression: string\n): void {\n  if (workUnitStore) {\n    if (workUnitStore.type === 'cache') {\n      throw new Error(\n        `Route ${store.route} used \"${expression}\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"${expression}\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`\n      )\n    } else if (workUnitStore.type === 'unstable-cache') {\n      throw new Error(\n        `Route ${store.route} used \"${expression}\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"${expression}\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`\n      )\n    }\n  }\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    if (workUnitStore.type === 'prerender') {\n      // dynamicIO Prerender\n      const error = new Error(\n        `Route ${store.route} used ${expression} without first calling \\`await connection()\\`. See more info here: https://nextjs.org/docs/messages/next-prerender-sync-request`\n      )\n      abortAndThrowOnSynchronousRequestDataAccess(\n        store.route,\n        expression,\n        error,\n        workUnitStore\n      )\n    } else if (workUnitStore.type === 'prerender-ppr') {\n      // PPR Prerender\n      postponeWithTracking(\n        store.route,\n        expression,\n        workUnitStore.dynamicTracking\n      )\n    } else if (workUnitStore.type === 'prerender-legacy') {\n      // legacy Prerender\n      workUnitStore.revalidate = 0\n\n      const err = new DynamicServerError(\n        `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n      )\n      store.dynamicUsageDescription = expression\n      store.dynamicUsageStack = err.stack\n\n      throw err\n    } else if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n}\n","import type { AppRouteModule } from '../module.compiled'\n\n// route handlers are only statically optimized if they define\n// one of these top-level configs manually\n//   - dynamic = 'force-static'\n//   - dynamic = 'error'\n//   - revalidate > 0\n//   - revalidate = false\n//   - generateStaticParams\nexport function isStaticGenEnabled(\n  mod: AppRouteModule['routeModule']['userland']\n) {\n  return (\n    mod.dynamic === 'force-static' ||\n    mod.dynamic === 'error' ||\n    mod.revalidate === false ||\n    (mod.revalidate !== undefined && mod.revalidate > 0) ||\n    typeof mod.generateStaticParams == 'function'\n  )\n}\n","/**\n * Based on https://github.com/facebook/react/blob/d4e78c42a94be027b4dc7ed2659a5fddfbf9bd4e/packages/react/src/ReactFetch.js\n */\nimport * as React from 'react'\nimport { cloneResponse } from './clone-response'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nconst simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]' // generateCacheKey(new Request('https://blank'));\n\nfunction generateCacheKey(request: Request): string {\n  // We pick the fields that goes into the key used to dedupe requests.\n  // We don't include the `cache` field, because we end up using whatever\n  // caching resulted from the first request.\n  // Notably we currently don't consider non-standard (or future) options.\n  // This might not be safe. TODO: warn for non-standard extensions differing.\n  // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n  return JSON.stringify([\n    request.method,\n    Array.from(request.headers.entries()),\n    request.mode,\n    request.redirect,\n    request.credentials,\n    request.referrer,\n    request.referrerPolicy,\n    request.integrity,\n  ])\n}\n\ntype CacheEntry = [\n  key: string,\n  promise: Promise<Response>,\n  response: Response | null,\n]\n\nexport function createDedupeFetch(originalFetch: typeof fetch) {\n  const getCacheEntries = React.cache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars -- url is the cache key\n    (url: string): CacheEntry[] => []\n  )\n\n  return function dedupeFetch(\n    resource: URL | RequestInfo,\n    options?: RequestInit\n  ): Promise<Response> {\n    if (options && options.signal) {\n      // If we're passed a signal, then we assume that\n      // someone else controls the lifetime of this object and opts out of\n      // caching. It's effectively the opt-out mechanism.\n      // Ideally we should be able to check this on the Request but\n      // it always gets initialized with its own signal so we don't\n      // know if it's supposed to override - unless we also override the\n      // Request constructor.\n      return originalFetch(resource, options)\n    }\n    // Normalize the Request\n    let url: string\n    let cacheKey: string\n    if (typeof resource === 'string' && !options) {\n      // Fast path.\n      cacheKey = simpleCacheKey\n      url = resource\n    } else {\n      // Normalize the request.\n      // if resource is not a string or a URL (its an instance of Request)\n      // then do not instantiate a new Request but instead\n      // reuse the request as to not disturb the body in the event it's a ReadableStream.\n      const request =\n        typeof resource === 'string' || resource instanceof URL\n          ? new Request(resource, options)\n          : resource\n      if (\n        (request.method !== 'GET' && request.method !== 'HEAD') ||\n        request.keepalive\n      ) {\n        // We currently don't dedupe requests that might have side-effects. Those\n        // have to be explicitly cached. We assume that the request doesn't have a\n        // body if it's GET or HEAD.\n        // keepalive gets treated the same as if you passed a custom cache signal.\n        return originalFetch(resource, options)\n      }\n      cacheKey = generateCacheKey(request)\n      url = request.url\n    }\n\n    const cacheEntries = getCacheEntries(url)\n    for (let i = 0, j = cacheEntries.length; i < j; i += 1) {\n      const [key, promise] = cacheEntries[i]\n      if (key === cacheKey) {\n        return promise.then(() => {\n          const response = cacheEntries[i][2]\n          if (!response) throw new InvariantError('No cached response')\n\n          // We're cloning the response using this utility because there exists\n          // a bug in the undici library around response cloning. See the\n          // following pull request for more details:\n          // https://github.com/vercel/next.js/pull/73274\n          const [cloned1, cloned2] = cloneResponse(response)\n          cacheEntries[i][2] = cloned2\n          return cloned1\n        })\n      }\n    }\n\n    // We pass the original arguments here in case normalizing the Request\n    // doesn't include all the options in this environment.\n    const promise = originalFetch(resource, options)\n    const entry: CacheEntry = [cacheKey, promise, null]\n    cacheEntries.push(entry)\n\n    return promise.then((response) => {\n      // We're cloning the response using this utility because there exists\n      // a bug in the undici library around response cloning. See the\n      // following pull request for more details:\n      // https://github.com/vercel/next.js/pull/73274\n      const [cloned1, cloned2] = cloneResponse(response)\n      entry[2] = cloned2\n      return cloned1\n    })\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\n/**\n * Converts the query into params.\n *\n * @param query the query to convert to params\n * @returns the params\n */\nexport function parsedUrlQueryToParams(\n  query: ParsedUrlQuery\n): Record<string, string | string[]> {\n  const params: Record<string, string | string[]> = {}\n\n  for (const [key, value] of Object.entries(query)) {\n    if (typeof value === 'undefined') continue\n    params[key] = value\n  }\n\n  return params\n}\n","import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { NextRequest } from '../web/exports'\nimport { ACTION_HEADER } from '../../client/components/app-router-headers'\n\nexport function getServerActionRequestMetadata(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): {\n  actionId: string | null\n  isURLEncodedAction: boolean\n  isMultipartAction: boolean\n  isFetchAction: boolean\n  isPossibleServerAction: boolean\n} {\n  let actionId: string | null\n  let contentType: string | null\n\n  if (req.headers instanceof Headers) {\n    actionId = req.headers.get(ACTION_HEADER.toLowerCase()) ?? null\n    contentType = req.headers.get('content-type')\n  } else {\n    actionId = (req.headers[ACTION_HEADER.toLowerCase()] as string) ?? null\n    contentType = req.headers['content-type'] ?? null\n  }\n\n  const isURLEncodedAction = Boolean(\n    req.method === 'POST' && contentType === 'application/x-www-form-urlencoded'\n  )\n  const isMultipartAction = Boolean(\n    req.method === 'POST' && contentType?.startsWith('multipart/form-data')\n  )\n  const isFetchAction = Boolean(\n    actionId !== undefined &&\n      typeof actionId === 'string' &&\n      req.method === 'POST'\n  )\n\n  const isPossibleServerAction = Boolean(\n    isFetchAction || isURLEncodedAction || isMultipartAction\n  )\n\n  return {\n    actionId,\n    isURLEncodedAction,\n    isMultipartAction,\n    isFetchAction,\n    isPossibleServerAction,\n  }\n}\n\nexport function getIsPossibleServerAction(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): boolean {\n  return getServerActionRequestMetadata(req).isPossibleServerAction\n}\n","import type { WorkStore } from '../app-render/work-async-storage.external'\nimport type { IncrementalCache } from '../lib/incremental-cache'\nimport type { RenderOpts } from '../app-render/types'\nimport type { FetchMetric } from '../base-http'\nimport type { RequestLifecycleOpts } from '../base-server'\nimport type { FallbackRouteParams } from '../request/fallback-params'\nimport type { AppSegmentConfig } from '../../build/segment-config/app/app-segment-config'\nimport type { CacheLife } from '../use-cache/cache-life'\n\nimport { AfterContext } from '../after/after-context'\n\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { createLazyResult, type LazyResult } from '../lib/lazy-result'\nimport { getCacheHandlerEntries } from '../use-cache/handlers'\nimport { createSnapshot } from '../app-render/async-local-storage'\n\nexport type WorkStoreContext = {\n  /**\n   * The page that is being rendered. This relates to the path to the page file.\n   */\n  page: string\n\n  /**\n   * The route parameters that are currently unknown.\n   */\n  fallbackRouteParams: FallbackRouteParams | null\n\n  requestEndedState?: { ended?: boolean }\n  isPrefetchRequest?: boolean\n  renderOpts: {\n    cacheLifeProfiles?: { [profile: string]: CacheLife }\n    incrementalCache?: IncrementalCache\n    isOnDemandRevalidate?: boolean\n    fetchCache?: AppSegmentConfig['fetchCache']\n    isPossibleServerAction?: boolean\n    pendingWaitUntil?: Promise<any>\n    experimental: Pick<\n      RenderOpts['experimental'],\n      'isRoutePPREnabled' | 'dynamicIO' | 'authInterrupts'\n    >\n\n    /**\n     * Fetch metrics attached in patch-fetch.ts\n     **/\n    fetchMetrics?: FetchMetric[]\n\n    /**\n     * A hack around accessing the store value outside the context of the\n     * request.\n     *\n     * @internal\n     * @deprecated should only be used as a temporary workaround\n     */\n    // TODO: remove this when we resolve accessing the store outside the execution context\n    store?: WorkStore\n  } & Pick<\n    // Pull some properties from RenderOpts so that the docs are also\n    // mirrored.\n    RenderOpts,\n    | 'assetPrefix'\n    | 'supportsDynamicResponse'\n    | 'shouldWaitOnAllReady'\n    | 'isRevalidate'\n    | 'nextExport'\n    | 'isDraftMode'\n    | 'isDebugDynamicAccesses'\n    | 'dev'\n    | 'hasReadableErrorStacks'\n  > &\n    RequestLifecycleOpts &\n    Partial<Pick<RenderOpts, 'reactLoadableManifest'>>\n\n  /**\n   * The build ID of the current build.\n   */\n  buildId: string\n\n  // Tags that were previously revalidated (e.g. by a redirecting server action)\n  // and have already been sent to cache handlers.\n  previouslyRevalidatedTags: string[]\n}\n\nexport function createWorkStore({\n  page,\n  fallbackRouteParams,\n  renderOpts,\n  requestEndedState,\n  isPrefetchRequest,\n  buildId,\n  previouslyRevalidatedTags,\n}: WorkStoreContext): WorkStore {\n  /**\n   * Rules of Static & Dynamic HTML:\n   *\n   *    1.) We must generate static HTML unless the caller explicitly opts\n   *        in to dynamic HTML support.\n   *\n   *    2.) If dynamic HTML support is requested, we must honor that request\n   *        or throw an error. It is the sole responsibility of the caller to\n   *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n   *\n   *    3.) If the request is in draft mode, we must generate dynamic HTML.\n   *\n   *    4.) If the request is a server action, we must generate dynamic HTML.\n   *\n   * These rules help ensure that other existing features like request caching,\n   * coalescing, and ISR continue working as intended.\n   */\n  const isStaticGeneration =\n    !renderOpts.shouldWaitOnAllReady &&\n    !renderOpts.supportsDynamicResponse &&\n    !renderOpts.isDraftMode &&\n    !renderOpts.isPossibleServerAction\n\n  const store: WorkStore = {\n    isStaticGeneration,\n    page,\n    fallbackRouteParams,\n    route: normalizeAppPath(page),\n    incrementalCache:\n      // we fallback to a global incremental cache for edge-runtime locally\n      // so that it can access the fs cache without mocks\n      renderOpts.incrementalCache || (globalThis as any).__incrementalCache,\n    cacheLifeProfiles: renderOpts.cacheLifeProfiles,\n    isRevalidate: renderOpts.isRevalidate,\n    isBuildTimePrerendering: renderOpts.nextExport,\n    hasReadableErrorStacks: renderOpts.hasReadableErrorStacks,\n    fetchCache: renderOpts.fetchCache,\n    isOnDemandRevalidate: renderOpts.isOnDemandRevalidate,\n\n    isDraftMode: renderOpts.isDraftMode,\n\n    requestEndedState,\n    isPrefetchRequest,\n    buildId,\n    reactLoadableManifest: renderOpts?.reactLoadableManifest || {},\n    assetPrefix: renderOpts?.assetPrefix || '',\n\n    afterContext: createAfterContext(renderOpts),\n    dynamicIOEnabled: renderOpts.experimental.dynamicIO,\n    dev: renderOpts.dev ?? false,\n    previouslyRevalidatedTags,\n    refreshTagsByCacheKind: createRefreshTagsByCacheKind(),\n    runInCleanSnapshot: createSnapshot(),\n  }\n\n  // TODO: remove this when we resolve accessing the store outside the execution context\n  renderOpts.store = store\n\n  return store\n}\n\nfunction createAfterContext(renderOpts: RequestLifecycleOpts): AfterContext {\n  const { waitUntil, onClose, onAfterTaskError } = renderOpts\n  return new AfterContext({\n    waitUntil,\n    onClose,\n    onTaskError: onAfterTaskError,\n  })\n}\n\n/**\n * Creates a map with lazy results that refresh tags for the respective cache\n * kind when they're awaited for the first time.\n */\nfunction createRefreshTagsByCacheKind(): Map<string, LazyResult<void>> {\n  const refreshTagsByCacheKind = new Map<string, LazyResult<void>>()\n  const cacheHandlers = getCacheHandlerEntries()\n\n  if (cacheHandlers) {\n    for (const [kind, cacheHandler] of cacheHandlers) {\n      if ('refreshTags' in cacheHandler) {\n        refreshTagsByCacheKind.set(\n          kind,\n          createLazyResult(async () => cacheHandler.refreshTags())\n        )\n      }\n    }\n  }\n\n  return refreshTagsByCacheKind\n}\n","/**\n * Get pathname from absolute path.\n *\n * @param absolutePath the absolute path\n * @returns the pathname\n */\nexport function getPathnameFromAbsolutePath(absolutePath: string) {\n  // Remove prefix including app dir\n  let appDir = '/app/'\n  if (!absolutePath.includes(appDir)) {\n    appDir = '\\\\app\\\\'\n  }\n  const [, ...parts] = absolutePath.split(appDir)\n  const relativePath = appDir[0] + parts.join(appDir)\n\n  // remove extension\n  const pathname = relativePath.split('.').slice(0, -1).join('.')\n  return pathname\n}\n","/**\n * Cleans a URL by stripping the protocol, host, and search params.\n *\n * @param urlString the url to clean\n * @returns the cleaned url\n */\n\nexport function cleanURL(url: string | URL): URL {\n  const u = new URL(url)\n  u.host = 'localhost:3000'\n  u.search = ''\n  u.protocol = 'http'\n  return u\n}\n"],"names":["Object","Date","Boolean","encodeURIComponent","Map","decodeURIComponent","p","Number","Symbol","Array","n","r","JSON","__nccwpck_require__","__dirname","e","TypeError","s","a","isNaN","isFinite","Math","t","o","i","arguments","Promise","Error","setTimeout","clearTimeout","clearInterval","setInterval","RegExp","String","R","reportError","process","console","NEXT_QUERY_PARAM_PREFIX","NEXT_INTERCEPTION_MARKER_PREFIX","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","RSC_PREFETCH_SUFFIX","RSC_SEGMENTS_DIR_SUFFIX","RSC_SEGMENT_SUFFIX","RSC_SUFFIX","NEXT_DATA_SUFFIX","NEXT_META_SUFFIX","NEXT_CACHE_TAGS_HEADER","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","NEXT_CACHE_TAG_MAX_ITEMS","NEXT_CACHE_TAG_MAX_LENGTH","NEXT_CACHE_IMPLICIT_TAG_ID","CACHE_ONE_YEAR","INFINITE_CACHE","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","apiNode","apiEdge","middleware","instrument","edgeAsset","appPagesBrowser","pagesDirBrowser","pagesDirEdge","pagesDirNode","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","appPages","formatDynamicImportPath","dir","filePath","absoluteFilePath","path","pathToFileURL","toString","checkIsOnDemandRevalidate","req","previewProps","headers","HeadersAdapter","isOnDemandRevalidate","previewModeId","get","revalidateOnlyGenerated","has","COOKIE_NAME_PRERENDER_BYPASS","COOKIE_NAME_PRERENDER_DATA","SYMBOL_PREVIEW_DATA","SYMBOL_CLEARED_COOKIES","clearPreviewData","res","options","serialize","require","previous","getHeader","setHeader","isArray","expires","httpOnly","sameSite","secure","undefined","defineProperty","value","enumerable","tryGetPreviewData","multiZoneDraftMode","cookies","encryptedPreviewData","RequestCookies","tokenPreviewData","data","jsonwebtoken","verify","previewModeSigningKey","decryptWithSecret","decryptedPreviewData","Buffer","from","previewModeEncryptionKey","parse","CIPHER_ALGORITHM","encryptWithSecret","secret","iv","crypto","salt","key","cipher","encrypted","concat","update","final","tag","getAuthTag","encryptedData","buffer","slice","CIPHER_SALT_LENGTH","decipher","setAuthTag","nodeFs","existsSync","fs","readFile","readFileSync","writeFile","f","d","mkdir","recursive","stat","ReadonlyHeadersError","constructor","callable","Headers","Proxy","target","prop","receiver","ReflectAdapter","lowercased","toLowerCase","original","keys","find","set","deleteProperty","seal","merge","join","append","name","existing","push","delete","forEach","callbackfn","thisArg","entries","call","values","iterator","Reflect","bind","module","Set","c","globalThis","COMPILER_NAMES","client","server","edgeServer","parseReqUrl","url","parsedUrl","parseUrl","parsed","URL","query","searchParams","getAll","length","hash","search","pathname","href","host","hostname","auth","protocol","slashes","port","cache","WeakMap","normalizeLocalePath","locales","detectedLocale","lowercasedLocales","map","locale","segments","split","segment","index","indexOf","ensureLeadingSlash","startsWith","normalizeAppPath","route","reduce","endsWith","normalizeRscURL","replace","INTERCEPTION_ROUTE_MARKERS","isInterceptionRouteAppPath","m","TEST_ROUTE","TEST_STRICT_ROUTE","isDynamicRoute","strict","extractInterceptionRouteInformation","interceptingRoute","marker","interceptedRoute","splitInterceptingRoute","test","parsePath","hashIndex","queryIndex","hasQuery","substring","pathHasPrefix","prefix","removePathPrefix","withoutPrefix","reHasRegExp","reReplaceRegExp","escapeStringRegexp","str","removeTrailingSlash","PARAMETER_PATTERN","parseMatchedParameter","param","optional","repeat","getSafeKeyFromSegment","pattern","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","backreferenceDuplicateKeys","cleanedKey","invalidKey","parseInt","duplicateKey","interceptionPrefix","SP","performance","every","method","DecodeError","NormalizeError","getRouteMatcher","re","groups","routeMatch","exec","decode","params","group","match","pos","entry","searchParamsToUrlQuery","stringifyUrlQueryParam","unescapeSegments","compileNonPath","includes","compile","validate","normalizeNextQueryParam","decodeQueryPathParameter","slashedProtocols","dynamicParamTypesSchema","segmentSchema","flightRouterStateSchema","ACTION_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","FLIGHT_HEADERS","filterInternalQuery","paramKeys","isNextQueryPrefix","isNextInterceptionMarkerPrefix","detectDomainLocale","domainItems","item","domain","defaultLocale","some","getHostname","normalizeDataPath","NEXT_REQUEST_META","for","getRequestMeta","meta","normalizePagePath","page","normalized","posix","resolvedPage","normalize","STATIC_METADATA_IMAGES","icon","filename","extensions","apple","openGraph","twitter","getExtensionRegexString","staticExtensions","dynamicExtensions","DetachedPromise","resolve","reject","promise","rej","Batcher","cacheKeyFn","schedulerFn","fn","pending","create","batch","cacheKey","result","err","scheduleOnNextTick","cb","then","nextTick","scheduleImmediate","setImmediate","CachedRouteKind","IncrementalCacheKind","voidCatch","Uint8Array","encoder","TextEncoder","streamFromBuffer","chunk","ReadableStream","start","controller","enqueue","close","streamToBuffer","stream","reader","getReader","chunks","done","read","streamToString","signal","decoder","TextDecoder","fatal","string","aborted","addPathPrefix","addPathSuffix","suffix","REGEX_LOCALHOST_HOSTNAME","parseURL","base","Internal","NextURL","input","baseOrOpts","opts","basePath","analyze","info","getNextPathnameInfo","i18n","trailingSlash","nextConfig","pathnameNoDataPrefix","paths","buildId","parseData","i18nProvider","env","__NEXT_NO_MIDDLEWARE_URL_NORMALIZE","domainLocale","domains","formatPathname","addLocale","ignorePrefix","lower","forceLocale","formatSearch","origin","password","username","toJSON","clone","Request","ResponseAbortedName","ResponseAborted","NextNodeServerSpan","AppRenderSpan","AppRouteRouteHandlersSpan","clientComponentLoadStart","clientComponentLoadTimes","clientComponentLoadCount","isAbortError","pipeToNodeResponse","readable","waitUntilForEnd","errored","destroyed","createAbortController","response","AbortController","once","writableFinished","abort","writer","createWriterFromResponse","started","drained","onDrain","on","off","finished","WritableStream","write","NEXT_OTEL_PERFORMANCE_PREFIX","metrics","getClientComponentLoaderMetrics","reset","measure","end","flushHeaders","getTracer","trace","spanName","ok","flush","cause","destroy","pipeTo","RenderResult","fromStatic","metadata","contentType","waitUntil","assignMetadata","assign","isNull","isDynamic","toUnchunkedBuffer","toUnchunkedString","isBuffer","chainStreams","streams","writable","TransformStream","preventClose","nextStream","lastStream","catch","chain","responses","encode","RouteKind","fromResponseCacheEntry","cacheEntry","kind","html","pageData","status","postponed","rscData","segmentData","toResponseCacheEntry","isMiss","isStale","cacheControl","ResponseCache","minimal_mode","batcher","responseGenerator","context","hasResolved","previousCacheEntry","incrementalCache","isFallback","isRoutePPREnabled","prom","previousCacheItem","expiresAt","now","routeKindToIncrementalCacheKind","routeKind","resolved","cachedResponse","isPrefetch","isRevalidating","resolveValue","newRevalidate","min","max","revalidate","newExpire","expire","error","MultiFileWriter","tasks","findOrCreateTask","directory","task","wait","all","flatMap","FileSystemCache","debug","NEXT_PRIVATE_DEBUG_CACHE","ctx","flushToDisk","serverDistDir","revalidatedTags","maxMemoryCacheSize","memoryCache","log","getMemoryCache","resetRequestCache","revalidateTag","args","tags","tagsManifest","getFilePath","fileData","mtime","lastModified","getTime","body","fetchIdx","fetchUrl","parsedData","storedTags","fetchCache","maybeSegmentData","segmentPaths","segmentsDir","segmentPath","segmentDataFilePath","cacheTags","tagsHeader","combinedTags","softTags","stringify","isAppPath","htmlPath","toRoute","InvariantError","message","IncrementalCache","dev","minimalMode","requestHeaders","getPrerenderManifest","fetchCacheKeyPrefix","CurCacheHandler","allowedRevalidateHeaderKeys","locks","hasCustomCacheHandler","cacheHandlersSymbol","_globalThis","globalCacheHandler","FetchCache","__NEXT_TEST_MAX_ISR_CACHE","disableForTestmode","NEXT_PRIVATE_TEST_PROXY","prerenderManifest","cacheControls","SharedCacheControls","preview","getPreviouslyRevalidatedTags","cacheHandler","_requestHeaders","calculateRevalidate","fromTime","floor","timeOrigin","initialRevalidateSeconds","_getPathname","lock","generateCacheKey","init","bodyChunks","_ogBody","readableBody","total","arr","arrayBuffer","offset","formData","val","text","blob","Blob","type","fromEntries","cacheString","mode","redirect","credentials","referrer","referrerPolicy","integrity","createHash","digest","cacheData","revalidateAfter","workUnitStore","workUnitAsyncStorage","resumeDataCache","getRenderResumeDataCache","memoryCacheData","fetch","workStore","workAsyncStorage","pendingRevalidatedTags","age","notFoundRoutes","prerenderResumeDataCache","getPrerenderResumeDataCache","itemSize","isImplicitBuildTimeCache","warningText","warn","handlersSymbol","handlersMapSymbol","handlersSetSymbol","reference","getCacheHandlerEntries","interopDefault","mod","default","RouterServerContextSymbol","routerServerGlobal","dynamicImportEsmDefault","id","RouteModule","userland","definition","distDir","projectDir","isDev","instrumentationOnRequestError","absoluteProjectDir","cwd","loadManifests","srcPage","loadManifestFromRelativePath","routesManifest","buildManifest","reactLoadableManifest","nextFontManifest","clientReferenceManifest","serverActionsManifest","subresourceIntegrityManifest","serverFilesManifest","dynamicCssManifest","manifest","shouldCache","handleMissing","isAppRouter","isStaticMetadataRoute","isAppRouteRoute","isMetadataRouteFile","appDirRelativePath","pageExtensions","strictlyMatchExtensions","trailingMatcher","suffixMatcher","metadataRouteFilesRegex","normalizedAppDirRelativePath","useEval","skipParse","__RSC_MANIFEST","loadCustomCacheHandlers","cacheHandlers","experimental","initializeCacheHandlers","fallback","DefaultCache","DefaultCacheHandler","RemoteCache","handler","add","getIncrementalCache","CacheHandler","cacheMaxMemorySize","isrFlushToDisk","onRequestError","errorContext","routerServerContext","logErrorWithOriginalStack","prepare","localeResult","previewData","relative","absoluteDistDir","ensureInstrumentationRegistered","manifests","rewrites","isNextDataRequest","originalPathname","originalQuery","pageIsDynamic","serverUtils","getServerUtils","caseSensitive","defaultRouteRegex","dynamicRouteMatcher","defaultRouteMatches","getNamedRouteRegex","normalizedRoute","getNamedParametrizedRoute","prefixRouteKeys","includeSuffix","includePrefix","routeKey","j","fromCharCode","hasInterceptionMarker","paramMatches","namedParameterizedRoute","namedRegex","excludeOptionalTrailingSlash","getRouteRegex","parameterizedRoute","getParametrizedRoute","groupIndex","markerMatch","handleRewrites","rewriteParams","fsPathname","checkRewrite","rewrite","matcher","getPathMatch","regexp","pathToRegexp","delimiter","sensitive","regexpToFunction","regexModifier","source","flags","removeUnnamedParams","missing","hasParams","matchHas","hasMatch","hasItem","getCookieParser","cookie","parseCookieFn","getSafeParamName","paramName","newParamName","charCode","charCodeAt","matches","groupKey","stateHeader","getSelectedParams","currentTree","parallelRoute","isDynamicParameter","segmentValue","parseAndValidateFlightRouterState","state","assert","parsedDestination","destQuery","prepareDestination","destHostnameCompiler","newUrl","parseDestination","escaped","destination","parseRelativeUrl","parseQuery","globalBase","resolvedBase","parsedURL","destHostname","destPath","destParams","destPathParamKeys","destHostnameParamKeys","destPathCompiler","strOrArray","filter","appendParamsToQuery","actualValue","nextInternalLocale","dynamicParams","beforeFiles","afterFiles","matchesPage","fsPathnameNoSlash","normalizeQueryParams","routeParamKeys","normalizedKey","v","getParamsFromRouteMatches","routeMatchesHeader","routeMatches","obj","URLSearchParams","keyName","normalizeDynamicRouteParams","ignoreMissingOptional","hasValidParams","defaultValue","isOptional","isDefaultValue","defaultVal","normalizeCdnUrl","_parsedUrl","formatUrl","urlObj","querystring","interpolateDynamicPath","paramValue","builtParam","replaceAll","__NEXT_TRAILING_SLASH","addRequestMeta","request","rewriteParamKeys","paramsMatch","paramsResult","combinedParamKeys","originalValue","queryValue","queryResult","paramsToInterpolate","isDraftMode","config","normalizedSrcPage","resolvedPathname","seg","char","_","getResponseCache","responseCache","handleResponse","purpose","ReadonlyRequestCookiesError","RequestCookiesAdapter","SYMBOL_MODIFY_COOKIE_VALUES","appendMutableCookies","mutableCookies","modifiedCookieValues","getModifiedCookieValues","modified","resCookies","ResponseCookies","returnedCookies","MutableRequestCookiesAdapter","wrap","onUpdateCookies","responseCookies","modifiedValues","modifiedCookies","updateResponseCookies","pathWasRevalidated","allCookies","serializedCookies","tempCookies","wrappedCookies","ensureCookiesAreStillMutable","callingExpression","requestStore","getExpectedRequestStore","phase","DraftModeProvider","cookieValue","_isEnabled","_previewModeId","_mutableCookies","isEnabled","enable","disable","mergeMiddlewareCookies","existingCookies","setCookieValue","responseHeaders","splitCookiesString","cookiesString","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","skipWhitespace","charAt","withExecuteRevalidates","store","callback","savedRevalidationState","cloneRevalidationState","newRevalidates","diffRevalidationState","prev","curr","prevTags","prevRevalidateWrites","pendingRevalidateWrites","pendingRevalidates","executeRevalidates","revalidateTags","promises","handlers","getCacheHandlers","expireTags","sharedAsyncLocalStorageNotAvailableError","FakeAsyncLocalStorage","getStore","run","exit","enterWith","maybeGlobalAsyncLocalStorage","AsyncLocalStorage","AfterContext","onClose","onTaskError","workUnitStores","callbackQueue","PromiseQueue","pause","after","errorWaitUntilNotAvailable","reportTaskError","addCallback","afterTaskStore","afterTaskAsyncStorage","rootTaskSpawnPhase","runCallbacksOnClosePromise","runCallbacksOnClose","wrappedCallback","runCallbacks","size","onIdle","taskKind","handlerError","createLazyResult","pendingResult","onfulfilled","onrejected","HTTP_METHODS","getImplicitTags","fallbackRouteParams","hasFallbackRouteParams","getDerivedTags","derivedTags","pathnameParts","curPathname","expirationsByCacheKind","createTagsExpirationsByCacheKind","getExpiration","DYNAMIC_ERROR_CODE","DynamicServerError","description","isDynamicServerError","StaticGenBailoutError","code","HangingPromiseRejectionError","expression","abortListenersBySignal","makeHangingPromise","hangingPromise","boundRejection","currentListeners","listeners","addEventListener","ignoreReject","hasPostpone","React","createDynamicTrackingState","isDebugDynamicAccesses","dynamicAccesses","syncDynamicErrorWithStack","markCurrentScopeAsDynamic","forceDynamic","forceStatic","dynamicShouldError","postponeWithTracking","dynamicTracking","dynamicUsageDescription","dynamicUsageStack","stack","throwToInterruptStaticGeneration","prerenderStore","assertPostpone","createPostponeReason","isDynamicPostponeReason","reason","NEXT_PRERENDER_INTERRUPTED","createPrerenderInterruptedError","cloneResponse","body1","body2","tee","cloned1","Response","statusText","configurable","cloned2","NEXT_PATCH_SYMBOL","trackFetchMetric","requestEndedState","ended","NEXT_DEBUG_BUILD","NEXT_SSG_FETCH_METRICS","isStaticGeneration","fetchMetrics","idx","nextFetchId","stdout","enabled","NO_COLOR","FORCE_COLOR","isTTY","CI","TERM","replaceClose","nextIndex","formatter","open","bold","red","green","yellow","magenta","white","maxSize","calculateSize","sizes","totalSize","touch","evictIfNecessary","evictLeastRecentlyUsed","lruKey","next","lruSize","clear","remove","currentSize","AUTOMATIC_ROUTE_METHODS","handleMethodNotAllowedResponse","ALLOWED_CODES","NOT_FOUND","FORBIDDEN","UNAUTHORIZED","isHTTPAccessFallbackError","httpStatus","RedirectStatusCode","isRedirectError","errorCode","statusCode","at","printDebugThrownValueForProspectiveRender","thrownValue","getDigestForWellKnownError","originalErrorStack","stackStart","AppRouterContext","LayoutRouterContext","GlobalLayoutRouterContext","TemplateContext","MissingSlotContext","CacheSignal","count","earlyListeners","tickPending","taskPending","subscribedSignals","noMorePendingCaches","inputReady","cacheReady","beginRead","subscriber","endRead","trackRead","onFinally","subscribeToReads","unsubscribeFromReads","isDefinitelyAValidIdentifier","describeStringPropertyAccess","wellKnownProperties","errorRef","current","logErrorOrWarn","__NEXT_DYNAMIC_IO","createDedupedByCallsiteServerErrorLoggerDev","getMessage","CachedParams","fallbackParamsProxyHandler","originalMethod","dynamicAccessAsyncStorage","abortController","apply","makeUntrackedExoticParams","underlyingParams","cachedParams","missingProperties","describeListOfPropertyNames","properties","WrappedNextRouterError","AppRouteRouteModule","sharedModules","resolvedPagePath","nextConfigOutput","serverHooks","actionAsyncStorage","methods","autoImplementMethods","acc","implemented","GET","HEAD","allow","Allow","sort","OPTIONS","hasNonStaticMethods","dynamic","isStaticGenEnabled","generateStaticParams","do","actionStore","implicitTags","trackingState","dynamicIOEnabled","renderOpts","dynamicIO","patchFetch","createDedupeFetch","originalFetch","getCacheEntries","resource","keepalive","cacheEntries","createPatchedFetcher","originFetch","patched","toUpperCase","isInternal","internal","hideSpan","NEXT_OTEL_FETCH_DISABLED","fetchStart","cacheSignal","SpanKind","attributes","cacheWarning","cacheReasonOverride","finalRevalidate","isRequestInput","field","getNextField","originalFetchRevalidate","currentFetchRevalidate","validateTags","validTags","invalidTags","revalidateStore","collectedTags","pageFetchCacheMode","isUsingNoStore","isUnstableNoStore","currentFetchCacheConfig","cacheReason","hasExplicitFetchCacheOptOut","noFetchConfigAndForceDynamic","validateRevalidate","revalidateVal","normalizedRevalidate","_headers","initHeaders","hasUnCacheableHeader","isUnCacheableMethod","hasNoExplicitCacheConfig","autoNoCache","isBuildTimePrerendering","renderSignal","isCacheableRevalidate","useCacheOrRequestStore","serverComponentsHmrCache","handleUnlock","doOriginalFetch","requestInputFields","reqInput","reqOptions","otherInput","clonedInit","fetchType","cacheStatus","bodyBuffer","fetchedData","cacheSetPromise","finally","pendingRevalidateKey","isForegroundRevalidate","isHmrRefreshCache","cachedFetchData","isHmrRefresh","isRevalidate","pendingRevalidate","hasNextConfig","revalidatedResult","pendingResponse","__nextPatched","__nextGetStaticStore","_nextOriginalFetch","handlerContext","createServerParamsForRoute","createPrerenderParams","fallbackParams","hasSomeFallbackParams","augmentedUnderlying","newValue","makeUntrackedParams","parsedUrlQueryToParams","resolvePendingRevalidations","pendingWaitUntil","userlandRevalidate","defaultRevalidate","prospectiveResult","prospectiveController","prospectiveRenderIsDynamic","prospectiveRoutePrerenderStore","rootParams","allowEmptyStaticShell","stale","renderResumeDataCache","hmrRefreshHash","captureOwnerStack","__NEXT_VERBOSE_LOGGING","trackPendingModules","dynamicReason","finalController","finalRoutePrerenderStore","responseHandled","bodyHandled","createDynamicIOError","Location","isAction","getRedirectStatusCodeFromError","collectedRevalidate","collectedExpire","collectedStale","handle","staticGenerationContext","sharedContext","previouslyRevalidatedTags","isAppRoute","getServerActionRequestMetadata","actionId","isURLEncodedAction","isMultipartAction","isFetchAction","isPossibleServerAction","nextUrl","createRequestStoreImpl","defaultOnUpdateCookies","getHeaders","cleaned","header","requestCookies","getMutableCookies","userspaceMutableCookies","wrapWithMutableAccessCheck","draftMode","__serverComponentsHmrCache","createWorkStore","isPrefetchRequest","shouldWaitOnAllReady","supportsDynamicResponse","__incrementalCache","cacheLifeProfiles","nextExport","hasReadableErrorStacks","assetPrefix","afterContext","createAfterContext","onAfterTaskError","refreshTagsByCacheKind","createRefreshTagsByCacheKind","refreshTags","runInCleanSnapshot","snapshot","forceStaticRequestHandlers","requireStaticRequestHandlers","proxyNextRequest","nextUrlHandlers","trackDynamic","urlCloneSymbol","nextRequestHandlers","nextURLSymbol","requestCloneSymbol","getPathnameFromAbsolutePath","absolutePath","appDir","parts","relativePath","tracer","setRootSpanAttribute","POST","PUT","DELETE","PATCH","searchParamsSymbol","hrefSymbol","toStringSymbol","headersSymbol","cookiesSymbol","forceStaticNextUrlHandlers","cleanURL","u","requireStaticNextUrlHandlers","abortAndThrowOnSynchronousRequestDataAccess","errorWithStack","prerenderSignal"],"mappings":"uFACA,IAAI,EAAYA,OAAO,cAAc,CACjC,EAAmBA,OAAO,wBAAwB,CAClD,EAAoBA,OAAO,mBAAmB,CAC9C,EAAeA,OAAO,SAAS,CAAC,cAAc,CAgB9C,EAAc,CAAC,EAfK,EAgBF,CACpB,eAAgB,IAAM,EACtB,gBAAiB,IAAM,EACvB,YAAa,IAAM,EACnB,eAAgB,IAAM,EACtB,gBAAiB,IAAM,CACzB,EArBE,IAAK,IAAI,KAAQ,EACf,EAcK,EAda,EAAM,CAAE,IAAK,CAAG,CAAC,EAAK,CAAE,WAAY,EAAK,GAwB/D,SAAS,EAAgB,CAAC,EACxB,IAAI,EACJ,IAAM,EAAQ,CACZ,SAAU,GAAK,EAAE,IAAI,EAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC,CACzC,YAAa,GAAM,GAAE,OAAO,EAAI,AAAc,IAAd,EAAE,OAAO,AAAK,GAAM,CAAC,QAAQ,EAAE,AAAC,CAAqB,UAArB,OAAO,EAAE,OAAO,CAAgB,IAAIC,KAAK,EAAE,OAAO,EAAI,EAAE,OAAO,AAAD,EAAG,WAAW,GAAG,CAAC,CAChJ,WAAY,GAAK,AAAoB,UAApB,OAAO,EAAE,MAAM,EAAiB,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC,CACtE,WAAY,GAAK,EAAE,MAAM,EAAI,CAAC,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC,CACjD,WAAY,GAAK,EAAE,MAAM,EAAI,SAC7B,aAAc,GAAK,EAAE,QAAQ,EAAI,WACjC,aAAc,GAAK,EAAE,QAAQ,EAAI,CAAC,SAAS,EAAE,EAAE,QAAQ,CAAC,CAAC,CACzD,gBAAiB,GAAK,EAAE,WAAW,EAAI,cACvC,aAAc,GAAK,EAAE,QAAQ,EAAI,CAAC,SAAS,EAAE,EAAE,QAAQ,CAAC,CAAC,CAC1D,CAAC,MAAM,CAACC,SACH,EAAc,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAEC,mBAAmB,AAAkB,MAAjB,GAAK,EAAE,KAAK,AAAD,EAAa,EAAK,IAAI,CAAC,CACvF,OAAO,AAAiB,IAAjB,EAAM,MAAM,CAAS,EAAc,CAAC,EAAE,EAAY,EAAE,EAAE,EAAM,IAAI,CAAC,MAAM,CAAC,AACjF,CACA,SAAS,EAAY,CAAM,EACzB,IAAM,EAAsB,IAAIC,IAChC,IAAK,IAAM,KAAQ,EAAO,KAAK,CAAC,OAAQ,CACtC,GAAI,CAAC,EACH,SACF,IAAM,EAAU,EAAK,OAAO,CAAC,KAC7B,GAAI,AAAY,KAAZ,EAAgB,CAClB,EAAI,GAAG,CAAC,EAAM,QACd,QACF,CACA,GAAM,CAAC,EAAK,EAAM,CAAG,CAAC,EAAK,KAAK,CAAC,EAAG,GAAU,EAAK,KAAK,CAAC,EAAU,GAAG,CACtE,GAAI,CACF,EAAI,GAAG,CAAC,EAAKC,mBAAmB,AAAS,MAAT,EAAgB,EAAQ,QAC1D,CAAE,KAAM,CACR,CACF,CACA,OAAO,CACT,CACA,SAAS,EAAe,CAAS,EAC/B,GAAI,CAAC,EACH,OAEF,GAAM,CAAC,CAAC,EAAM,EAAM,CAAE,GAAG,EAAW,CAAG,EAAY,GAC7C,CACJ,QAAM,CACN,SAAO,CACP,UAAQ,CACR,QAAM,CACN,MAAI,CACJ,UAAQ,CACR,QAAM,CACNC,YAAAA,CAAW,CACX,UAAQ,CACT,CAAGN,OAAO,WAAW,CACpB,EAAW,GAAG,CAAC,CAAC,CAAC,EAAK,EAAO,GAAK,CAChC,EAAI,WAAW,GAAG,OAAO,CAAC,KAAM,IAChC,EACD,EAeI,MAYc,EAKA,EAfN,EAfA,CACb,OACA,MAAOK,mBAAmB,GAC1B,SACA,GAAG,GAAW,CAAE,QAAS,IAAIJ,KAAK,EAAS,CAAC,CAC5C,GAAG,GAAY,CAAE,SAAU,EAAK,CAAC,CACjC,GAAG,AAAkB,UAAlB,OAAO,GAAuB,CAAE,OAAQM,OAAO,EAAQ,CAAC,CAC3D,OACA,GAAG,GAAY,CAAE,QAAQ,CAmBpB,EAAU,QAAQ,CADzB,EAAS,CADY,EAjBsB,GAkB3B,WAAW,IACS,EAAS,KAAK,CAnBG,CAAC,CACpD,GAAG,GAAU,CAAE,OAAQ,EAAK,CAAC,CAC7B,GAAG,GAAY,CAAE,QAAQ,CAsBpB,EAAS,QAAQ,CADxB,EAAS,CADY,EApBsB,GAqB3B,WAAW,IACQ,EAAS,KAAK,CAtBI,CAAC,CACpD,GAAGD,GAAe,CAAE,YAAa,EAAK,CAAC,AACzC,EAIA,IAAM,EAAO,CAAC,EACd,IAAK,IAAM,KAAO,EACZ,CAAC,CAAC,EAAI,EACR,EAAI,CAAC,EAAI,CAAG,CAAC,CAAC,EAAI,AAAD,EAGrB,OAAO,CATc,CACvB,CAxEA,EAAO,OAAO,CAXc,AARV,EAAC,EAAI,EAAM,EAAQ,KACnC,GAAI,GAAQ,AAAgB,UAAhB,OAAO,GAAqB,AAAgB,YAAhB,OAAO,EAC7C,IAAK,IAAI,KAAO,EAAkB,GAC5B,AAAC,EAAa,IAAI,CAAC,EAAI,IAAQ,IAAQ,GACzC,EAAU,EAAI,EAAK,CAAE,IAAK,IAAM,CAAI,CAAC,EAAI,CAAE,WAAY,CAAE,GAAO,EAAiB,EAAM,EAAG,GAAM,EAAK,UAAU,AAAC,GAEtH,OAAO,CACT,GACwC,EAAU,CAAC,EAAG,aAAc,CAAE,MAAO,EAAK,GAWpD,GAkF9B,IAAI,EAAY,CAAC,SAAU,MAAO,OAAO,CAKrC,EAAW,CAAC,MAAO,SAAU,OAAO,CA0DpC,EAAiB,MACnB,YAAY,CAAc,CAAE,CAE1B,IAAI,CAAC,OAAO,CAAmB,IAAIF,IACnC,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAM,EAAS,EAAe,GAAG,CAAC,UAClC,GAAI,EAEF,IAAK,GAAM,CAAC,EAAM,EAAM,GADT,EAAY,GAEzB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAM,CAAE,OAAM,OAAM,EAG3C,CACA,CAACI,OAAO,QAAQ,CAAC,EAAG,CAClB,OAAO,IAAI,CAAC,OAAO,CAACA,OAAO,QAAQ,CAAC,EACtC,CAIA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,AAC1B,CACA,IAAI,GAAG,CAAI,CAAE,CACX,IAAM,EAAO,AAAmB,UAAnB,OAAO,CAAI,CAAC,EAAE,CAAgB,CAAI,CAAC,EAAE,CAAG,CAAI,CAAC,EAAE,CAAC,IAAI,CACjE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAC1B,CACA,OAAO,GAAG,CAAI,CAAE,CACd,IAAI,EACJ,IAAM,EAAMC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EACnC,GAAI,CAAC,EAAK,MAAM,CACd,OAAO,EAAI,GAAG,CAAC,CAAC,CAAC,EAAG,EAAM,GAAK,GAEjC,IAAMC,EAAO,AAAmB,UAAnB,OAAO,CAAI,CAAC,EAAE,CAAgB,CAAI,CAAC,EAAE,CAAG,AAAkB,MAAjB,GAAK,CAAI,CAAC,EAAE,AAAD,EAAa,KAAK,EAAI,EAAG,IAAI,CAC9F,OAAO,EAAI,MAAM,CAAC,CAAC,CAAC,EAAE,GAAK,IAAMA,GAAM,GAAG,CAAC,CAAC,CAAC,EAAG,EAAM,GAAK,EAC7D,CACA,IAAI,CAAI,CAAE,CACR,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAC1B,CACA,IAAI,GAAG,CAAI,CAAE,CACX,GAAM,CAAC,EAAM,EAAM,CAAG,AAAgB,IAAhB,EAAK,MAAM,CAAS,CAAC,CAAI,CAAC,EAAE,CAAC,IAAI,CAAE,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAG,EACpE,EAAM,IAAI,CAAC,OAAO,CAMxB,OALA,EAAI,GAAG,CAAC,EAAM,CAAE,OAAM,OAAM,GAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CACf,SACAD,MAAM,IAAI,CAAC,GAAK,GAAG,CAAC,CAAC,CAAC,EAAG,EAAO,GAAK,EAAgB,IAAS,IAAI,CAAC,OAE9D,IAAI,AACb,CAIA,OAAO,CAAK,CAAE,CACZ,IAAM,EAAM,IAAI,CAAC,OAAO,CAClBE,EAAS,AAACF,MAAM,OAAO,CAAC,GAA6B,EAAM,GAAG,CAAC,AAAC,GAAS,EAAI,MAAM,CAAC,IAAnD,EAAI,MAAM,CAAC,GAKlD,OAJA,IAAI,CAAC,QAAQ,CAAC,GAAG,CACf,SACAA,MAAM,IAAI,CAAC,GAAK,GAAG,CAAC,CAAC,CAAC,EAAG,EAAM,GAAK,EAAgB,IAAQ,IAAI,CAAC,OAE5DE,CACT,CAIA,OAAQ,CAEN,OADA,IAAI,CAAC,MAAM,CAACF,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,KACjC,IAAI,AACb,CAIA,CAACD,OAAO,GAAG,CAAC,+BAA+B,EAAG,CAC5C,MAAO,CAAC,eAAe,EAAEI,KAAK,SAAS,CAACZ,OAAO,WAAW,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,AAC7E,CACA,UAAW,CACT,MAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,AAAC,GAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAEG,mBAAmB,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,KAChG,CACF,EAGI,EAAkB,MACpB,YAAY,CAAe,CAAE,KAGvB,EAAI,EAAI,CADZ,KAAI,CAAC,OAAO,CAAmB,IAAIC,IAEnC,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAM,EAAY,AAAkJ,MAAjJ,GAAK,AAA0F,MAAzF,GAAK,AAAuC,MAAtC,GAAK,EAAgB,YAAY,AAAD,EAAa,KAAK,EAAI,EAAG,IAAI,CAAC,EAAe,EAAa,EAAK,EAAgB,GAAG,CAAC,aAAY,EAAa,EAAK,EAAE,CAElL,IAAK,IAAM,KADWK,MAAM,OAAO,CAAC,GAAa,EAAY,AA3IjE,SAA4B,CAAa,EACvC,GAAI,CAAC,EACH,MAAO,EAAE,CACX,IAEI,EACA,EACA,EACA,EACA,EANA,EAAiB,EAAE,CACnB,EAAM,EAMV,SAAS,IACP,KAAO,EAAM,EAAc,MAAM,EAAI,KAAK,IAAI,CAAC,EAAc,MAAM,CAAC,KAClE,GAAO,EAET,OAAO,EAAM,EAAc,MAAM,AACnC,CAKA,KAAO,EAAM,EAAc,MAAM,EAAE,CAGjC,IAFA,EAAQ,EACR,EAAwB,GACjB,KAEL,GAAI,AAAO,MADX,GAAK,EAAc,MAAM,CAAC,EAAG,EACb,CAKd,IAJA,EAAY,EACZ,GAAO,EACP,IACA,EAAY,EACL,EAAM,EAAc,MAAM,EAZ9B,AAAO,MADd,GAAK,EAAc,MAAM,CAAC,EAAG,GACR,AAAO,MAAP,GAAc,AAAO,MAAP,GAa7B,GAAO,CAEL,GAAM,EAAc,MAAM,EAAI,AAA8B,MAA9B,EAAc,MAAM,CAAC,IACrD,EAAwB,GACxB,EAAM,EACN,EAAe,IAAI,CAAC,EAAc,SAAS,CAAC,EAAO,IACnD,EAAQ,GAER,EAAM,EAAY,CAEtB,MACE,GAAO,CAGP,GAAC,GAAyB,GAAO,EAAc,MAAM,AAAD,GACtD,EAAe,IAAI,CAAC,EAAc,SAAS,CAAC,EAAO,EAAc,MAAM,EAE3E,CACA,OAAO,CACT,EAyFoF,GACtC,CACxC,IAAM,EAAS,EAAe,EAC1B,IACF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAO,IAAI,CAAE,EAClC,CACF,CAIA,IAAI,GAAG,CAAI,CAAE,CACX,IAAM,EAAM,AAAmB,UAAnB,OAAO,CAAI,CAAC,EAAE,CAAgB,CAAI,CAAC,EAAE,CAAG,CAAI,CAAC,EAAE,CAAC,IAAI,CAChE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAC1B,CAIA,OAAO,GAAG,CAAI,CAAE,CACd,IAAI,EACJ,IAAM,EAAMA,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,IAC1C,GAAI,CAAC,EAAK,MAAM,CACd,OAAO,EAET,IAAM,EAAM,AAAmB,UAAnB,OAAO,CAAI,CAAC,EAAE,CAAgB,CAAI,CAAC,EAAE,CAAG,AAAkB,MAAjB,GAAK,CAAI,CAAC,EAAE,AAAD,EAAa,KAAK,EAAI,EAAG,IAAI,CAC7F,OAAO,EAAI,MAAM,CAAC,AAAC,GAAM,EAAE,IAAI,GAAK,EACtC,CACA,IAAI,CAAI,CAAE,CACR,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAC1B,CAIA,IAAI,GAAG,CAAI,CAAE,CACX,GAAM,CAAC,EAAM,EAAO,EAAO,CAAG,AAAgB,IAAhB,EAAK,MAAM,CAAS,CAAC,CAAI,CAAC,EAAE,CAAC,IAAI,CAAE,CAAI,CAAC,EAAE,CAAC,KAAK,CAAE,CAAI,CAAC,EAAE,CAAC,CAAG,EACrF,EAAM,IAAI,CAAC,OAAO,CAGxB,OAFA,EAAI,GAAG,CAAC,EAAM,AAyBlB,SAAyB,EAAS,CAAE,KAAM,GAAI,MAAO,EAAG,CAAC,EAUvD,MATI,AAA0B,UAA1B,OAAO,EAAO,OAAO,EACvB,GAAO,OAAO,CAAG,IAAIR,KAAK,EAAO,OAAO,GAEtC,EAAO,MAAM,EACf,GAAO,OAAO,CAAG,IAAIA,KAAKA,KAAK,GAAG,GAAK,AAAgB,IAAhB,EAAO,MAAM,CAAM,EAExD,CAAgB,OAAhB,EAAO,IAAI,EAAa,AAAgB,KAAK,IAArB,EAAO,IAAI,AAAU,GAC/C,GAAO,IAAI,CAAG,GAAE,EAEX,CACT,EApCkC,CAAE,OAAM,QAAO,GAAG,CAAM,AAAC,IACvD,AAiBJ,SAAiB,CAAG,CAAE,CAAO,EAE3B,IAAK,GAAM,EAAG,EAAM,GADpB,EAAQ,MAAM,CAAC,cACS,GAAK,CAC3B,IAAM,EAAa,EAAgB,GACnC,EAAQ,MAAM,CAAC,aAAc,EAC/B,CACF,EAvBY,EAAK,IAAI,CAAC,QAAQ,EACnB,IAAI,AACb,CAIA,OAAO,GAAG,CAAI,CAAE,CACd,GAAM,CAAC,EAAM,EAAQ,CAAG,AAAmB,UAAnB,OAAO,CAAI,CAAC,EAAE,CAAgB,CAAC,CAAI,CAAC,EAAE,CAAC,CAAG,CAAC,CAAI,CAAC,EAAE,CAAC,IAAI,CAAE,CAAI,CAAC,EAAE,CAAC,CACzF,OAAO,IAAI,CAAC,GAAG,CAAC,CAAE,GAAG,CAAO,CAAE,OAAM,MAAO,GAAI,QAAyB,IAAIA,KAAK,EAAG,EACtF,CACA,CAACO,OAAO,GAAG,CAAC,+BAA+B,EAAG,CAC5C,MAAO,CAAC,gBAAgB,EAAEI,KAAK,SAAS,CAACZ,OAAO,WAAW,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,AAC9E,CACA,UAAW,CACT,MAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAiB,IAAI,CAAC,KAC9D,CACF,C,gDCvTA,AAAC,MAAK,YAAgB,AAA6B,cAA7B,OAAOa,qBAAkCA,CAAAA,oBAAoB,EAAE,CAACC,UAAU,GAAE,EAAE,IAMzD,EAAyB,EAAyB,EAAY,EAND,EAAE,CAAC,CAMxG,CANsH,EAMpH,KAAK,CAAyI,SAAeC,CAAC,CAACJ,CAAC,EAAE,GAAG,AAAW,UAAX,OAAOI,EAAc,MAAM,AAAIC,UAAU,iCAAyF,IAAI,IAAxD,EAAE,CAAC,EAAkB,EAAED,EAAE,KAAK,CAAC,GAAOE,EAAE,AAA7BN,CAAAA,GAAG,CAAC,GAA2B,MAAM,EAAE,EAAU,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAK,EAAE,EAAE,OAAO,CAAC,KAAK,IAAG,GAAE,IAAY,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,IAAI,GAAO,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAM,MAAK,CAAC,CAAC,EAAE,EAAE,GAAE,EAAE,KAAK,CAAC,EAAE,GAAE,EAAK,QAAW,CAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,CAAC,AAA2pC,SAAmBI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,EAAEA,EAAE,CAAC,MAAM,EAAE,CAAC,OAAOA,CAAC,CAAC,EAA3sC,EAAEE,EAAC,EAAE,CAAC,OAAO,CAAC,EAAtf,AANwG,EAMtG,SAAS,CAA4e,SAAmBF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAIG,EAAE,GAAG,CAAC,EAAM,EAAEA,EAAE,MAAM,EAAE,EAAE,GAAG,AAAW,YAAX,OAAO,EAAgB,MAAM,AAAIF,UAAU,4BAA4B,GAAG,CAAC,EAAE,IAAI,CAACD,GAAI,MAAM,AAAIC,UAAU,4BAA4B,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAI,MAAM,AAAIA,UAAU,2BAA2B,IAAI,EAAED,EAAE,IAAI,EAAE,GAAG,MAAMG,EAAE,MAAM,CAAC,CAAC,IAAI,EAAEA,EAAE,MAAM,CAAC,EAAE,GAAGC,MAAM,IAAI,CAACC,SAAS,GAAI,MAAM,AAAIJ,UAAU,4BAA4B,GAAG,aAAaK,KAAK,KAAK,CAAC,EAAE,CAAC,GAAGH,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAACA,EAAE,MAAM,EAAG,MAAM,AAAIF,UAAU,4BAA4B,GAAG,YAAYE,EAAE,MAAM,CAAC,GAAGA,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAACA,EAAE,IAAI,EAAG,MAAM,AAAIF,UAAU,0BAA0B,GAAG,UAAUE,EAAE,IAAI,CAAC,GAAGA,EAAE,OAAO,CAAC,CAAC,GAAG,AAA+B,YAA/B,OAAOA,EAAE,OAAO,CAAC,WAAW,CAAe,MAAM,AAAIF,UAAU,6BAA6B,GAAG,aAAaE,EAAE,OAAO,CAAC,WAAW,EAAE,CAA2D,GAAvDA,EAAE,QAAQ,EAAE,IAAG,YAAW,EAAKA,EAAE,MAAM,EAAE,IAAG,UAAS,EAAKA,EAAE,QAAQ,CAAyE,OAAjE,AAAoB,UAApB,OAAOA,EAAE,QAAQ,CAAYA,EAAE,QAAQ,CAAC,WAAW,GAAGA,EAAE,QAAQ,EAAW,IAAK,GAAsE,IAAI,SAArE,GAAG,oBAAoB,KAAM,KAAI,MAAM,GAAG,iBAAiB,KAAgD,KAAI,OAAO,GAAG,kBAAkB,KAAM,SAAQ,MAAM,AAAIF,UAAU,6BAA6B,CAAE,OAAO,CAAC,EAA9lD,EAAEX,mBAAuB,EAAEF,mBAAuB,EAAE,MAAU,EAAE,wCAA+lD,EAAO,OAAO,CAAC,CAAC,I,iDCN1tD,AAAC,MAAK,aAAa,IAAI,EAAE,CAAC,IAAIY,IAAI,IAAIO,EAAEtB,OAAO,SAAS,CAAC,cAAc,CAAC,EAAE,IAAI,SAAS,IAAS,CAA2F,SAAS,EAAGe,CAAC,CAACO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAACP,EAAE,IAAI,CAAC,OAAO,CAACO,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAK,CAAC,SAASJ,EAAYH,CAAC,CAACO,CAAC,CAAC,CAAC,CAAC,CAAC,CAACL,CAAC,EAAE,GAAG,AAAW,YAAX,OAAO,EAAgB,MAAM,AAAID,UAAU,mCAAmC,IAAIO,EAAE,IAAI,EAAG,EAAE,GAAGR,EAAEE,GAAG,EAAE,EAAE,EAAEK,EAAEA,EAAoI,OAA9HP,EAAE,OAAO,CAAC,EAAE,CAA0CA,EAAE,OAAO,CAAC,EAAE,CAAC,EAAE,CAA2BA,EAAE,OAAO,CAAC,EAAE,CAAC,CAACA,EAAE,OAAO,CAAC,EAAE,CAACQ,EAAE,CAAvDR,EAAE,OAAO,CAAC,EAAE,CAAC,IAAI,CAACQ,GAA3ER,CAAAA,EAAE,OAAO,CAAC,EAAE,CAACQ,EAAER,EAAE,YAAY,EAAC,EAA0FA,CAAC,CAAC,SAAS,EAAWA,CAAC,CAACO,CAAC,EAAK,AAAmB,GAAnB,EAAEP,EAAE,YAAY,CAAKA,EAAE,OAAO,CAAC,IAAI,EAAY,OAAOA,EAAE,OAAO,CAACO,EAAE,CAAC,SAAS,IAAe,IAAI,CAAC,OAAO,CAAC,IAAI,EAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAArlBtB,OAAO,MAAM,GAAE,EAAO,SAAS,CAACA,OAAO,MAAM,CAAC,MAAS,AAAC,AAAC,KAAI,CAAK,EAAG,SAAS,EAAC,GAAE,EAAI,GAAigB,EAAa,SAAS,CAAC,UAAU,CAAC,WAAsB,IAAS,EAAE,EAAP,EAAE,EAAE,CAAK,GAAG,AAAoB,IAApB,IAAI,CAAC,YAAY,CAAK,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,CAAC,OAAO,CAAKsB,EAAE,IAAI,CAAC,EAAE,IAAG,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,UAAG,AAAGtB,OAAO,qBAAqB,CAAS,EAAE,MAAM,CAACA,OAAO,qBAAqB,CAAC,IAAW,CAAC,EAAE,EAAa,SAAS,CAAC,SAAS,CAAC,SAAmBe,CAAC,EAAE,IAAIO,EAAE,EAAE,EAAEP,EAAEA,EAAE,EAAE,IAAI,CAAC,OAAO,CAACO,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,IAAIE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,AAAIf,MAAM,GAAGe,EAAE,EAAEA,IAAK,CAAC,CAACA,EAAE,CAAC,CAAC,CAACA,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAa,SAAS,CAAC,aAAa,CAAC,SAAuBT,CAAC,EAAE,IAAIO,EAAE,EAAE,EAAEP,EAAEA,EAAE,EAAE,IAAI,CAAC,OAAO,CAACO,EAAE,QAAC,AAAI,EAAc,EAAE,EAAE,CAAQ,EAAS,EAAE,MAAM,CAAlC,CAAkC,EAAE,EAAa,SAAS,CAAC,IAAI,CAAC,SAAcP,CAAC,CAACO,CAAC,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAET,EAAEA,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAO,GAAM,IAAyC,EAAE,EAAvC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAEU,UAAU,MAAM,CAAK,GAAG,EAAE,EAAE,CAAC,CAAsD,OAAlD,EAAE,IAAI,EAAC,IAAI,CAAC,cAAc,CAACV,EAAE,EAAE,EAAE,CAAC,OAAU,IAAa,GAAG,KAAK,EAAE,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,EAAK,MAAK,EAAE,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,CAACO,GAAG,EAAK,MAAK,EAAE,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,CAACA,EAAE,GAAG,EAAK,MAAK,EAAE,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,CAACA,EAAE,EAAEE,GAAG,EAAK,MAAK,EAAE,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,CAACF,EAAE,EAAEE,EAAE,GAAG,EAAK,MAAK,EAAE,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,CAACF,EAAE,EAAEE,EAAE,EAAE,GAAG,EAAI,CAAC,IAAI,EAAE,EAAE,EAAE,AAAIf,MAAM,EAAE,GAAG,EAAE,EAAE,IAAK,CAAC,CAAC,EAAE,EAAE,CAACgB,SAAS,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,EAAE,KAAK,CAAC,IAAe,EAAX,EAAE,EAAE,MAAM,CAAG,IAAI,EAAE,EAAE,EAAE,EAAE,IAAgE,OAAxD,CAAC,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,CAAC,cAAc,CAACV,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAU,IAAa,GAAG,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,KAAM,MAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAACO,GAAG,KAAM,MAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAACA,EAAE,GAAG,KAAM,MAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAACA,EAAE,EAAEE,GAAG,KAAM,SAAQ,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,AAAIf,MAAM,EAAE,GAAG,EAAE,EAAE,IAAK,CAAC,CAAC,EAAE,EAAE,CAACgB,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAE,CAAC,MAAO,EAAI,EAAE,EAAa,SAAS,CAAC,EAAE,CAAC,SAAYV,CAAC,CAACO,CAAC,CAAC,CAAC,EAAE,OAAOJ,EAAY,IAAI,CAACH,EAAEO,EAAE,EAAE,GAAM,EAAE,EAAa,SAAS,CAAC,IAAI,CAAC,SAAcP,CAAC,CAACO,CAAC,CAAC,CAAC,EAAE,OAAOJ,EAAY,IAAI,CAACH,EAAEO,EAAE,EAAE,GAAK,EAAE,EAAa,SAAS,CAAC,cAAc,CAAC,SAAwBP,CAAC,CAACO,CAAC,CAAC,CAAC,CAACE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAET,EAAEA,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,IAAI,CAAC,GAAG,CAACO,EAAsB,OAAnB,EAAW,IAAI,CAAC,GAAU,IAAI,CAAC,IAAIC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAGA,EAAE,EAAE,CAAKA,EAAE,EAAE,GAAGD,GAAI,AAACE,IAAGD,EAAE,IAAI,EAAI,AAAC,GAAGA,EAAE,OAAO,GAAG,GAAI,EAAW,IAAI,CAAC,OAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAEA,EAAE,MAAM,CAAC,EAAE,EAAE,IAAQA,CAAAA,CAAC,CAAC,EAAE,CAAC,EAAE,GAAGD,GAAGE,GAAG,CAACD,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAGA,CAAC,CAAC,EAAE,CAAC,OAAO,GAAG,IAAG,EAAE,IAAI,CAACA,CAAC,CAAC,EAAE,CAAM,GAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,AAAW,IAAX,EAAE,MAAM,CAAK,CAAC,CAAC,EAAE,CAAC,EAAO,EAAW,IAAI,CAAC,EAAE,CAAC,OAAO,IAAI,EAAE,EAAa,SAAS,CAAC,kBAAkB,CAAC,SAA4BR,CAAC,EAAE,IAAIO,EAAyG,OAApGP,GAAGO,EAAE,EAAE,EAAEP,EAAEA,EAAK,IAAI,CAAC,OAAO,CAACO,EAAE,EAAC,EAAW,IAAI,CAACA,KAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,EAAO,IAAI,CAAC,YAAY,CAAC,GAAS,IAAI,EAAE,EAAa,SAAS,CAAC,GAAG,CAAC,EAAa,SAAS,CAAC,cAAc,CAAC,EAAa,SAAS,CAAC,WAAW,CAAC,EAAa,SAAS,CAAC,EAAE,CAAC,EAAa,QAAQ,CAAC,EAAE,EAAa,YAAY,CAAC,EAAsBP,EAAE,OAAO,CAAC,CAAa,EAAE,IAAIA,IAAIA,EAAE,OAAO,CAAC,CAACA,EAAEO,KAAKA,EAAEA,GAAI,MAAK,GAAUP,EAAE,IAAI,CAAEA,GAAG,IAAIW,QAASX,IAAIA,EAAEO,IAAI,GAAI,IAAI,CAAE,IAAIP,GAAMA,GAAG,IAAIW,QAASX,IAAIA,EAAEO,IAAI,GAAI,IAAI,CAAE,KAAK,MAAMP,CAAC,IAAM,EAAE,IAAI,CAACA,EAAEO,KAAKtB,OAAO,cAAc,CAACsB,EAAE,aAAa,CAAC,MAAM,EAAI,GAAyIA,EAAE,OAAU,CAAlJ,SAAoBP,CAAC,CAACO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAME,EAAET,EAAE,MAAM,CAAC,KAAMS,EAAE,GAAE,CAAC,IAAM,EAAEA,EAAE,EAAE,EAAM,EAAE,EAAE,CAAK,AAAW,IAAX,EAAET,CAAC,CAAC,EAAE,CAACO,IAAO,EAAE,EAAE,EAAEE,GAAG,EAAE,GAAOA,EAAE,CAAE,CAAC,OAAO,CAAC,CAAwB,EAAE,IAAI,CAACT,EAAEO,EAAE,KAAKtB,OAAO,cAAc,CAACsB,EAAE,aAAa,CAAC,MAAM,EAAI,GAAG,IAAM,EAAE,EAAE,IAAggBA,CAAAA,EAAE,OAAU,CAAvgB,MAAoB,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQP,CAAC,CAACO,CAAC,CAAC,CAAiC,IAAM,EAAE,CAAC,SAAS,AAAlDA,CAAAA,EAAEtB,OAAO,MAAM,CAAC,CAAC,SAAS,CAAC,EAAEsB,EAAC,EAAsB,QAAQ,CAAC,IAAIP,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAEO,EAAE,QAAQ,CAAC,YAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAU,IAAME,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAG,CAACT,EAAEO,IAAIA,EAAE,QAAQ,CAACP,EAAE,QAAQ,EAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAACS,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,IAAMT,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,OAAOA,MAAAA,EAAqB,KAAK,EAAEA,EAAE,GAAG,CAAC,OAAOA,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAEO,GAAGA,EAAE,QAAQ,GAAGP,EAAE,QAAQ,EAAG,GAAG,CAAEA,GAAGA,EAAE,GAAG,CAAE,CAAC,IAAI,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAA2B,EAAE,IAAI,CAACA,EAAEO,EAAE,KAAK,IAAM,EAAE,EAAE,IAAK,OAAM,UAAqBK,MAAM,YAAYZ,CAAC,CAAC,CAAC,KAAK,CAACA,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAM,EAAS,CAACA,EAAEO,EAAE,IAAI,IAAII,QAAS,CAAC,EAAET,KAAK,GAAG,AAAW,UAAX,OAAOK,GAAcA,EAAE,EAAG,MAAM,AAAIN,UAAU,mDAAmD,GAAGM,IAAI,IAAS,YAAC,EAAEP,GAAU,IAAMQ,EAAEK,WAAY,KAAK,GAAG,AAAW,YAAX,OAAO,EAAe,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAMb,EAAE,CAACE,EAAEF,EAAE,CAAC,MAAM,CAAC,IAAM,EAAE,AAAW,UAAX,OAAO,EAAa,EAAE,CAAC,wBAAwB,EAAEO,EAAE,aAAa,CAAC,CAAOC,EAAE,aAAaI,MAAM,EAAE,IAAI,EAAa,EAAM,AAAkB,aAAlB,OAAOZ,EAAE,MAAM,EAAeA,EAAE,MAAM,GAAGE,EAAEM,EAAE,EAAGD,GAAG,EAAEP,EAAE,IAAI,CAAC,EAAEE,GAAI,KAAKY,aAAaN,EAAE,EAAG,EAAIR,CAAAA,EAAE,OAAO,CAAC,EAASA,EAAE,OAAO,CAAC,OAAU,CAAC,EAASA,EAAE,OAAO,CAAC,YAAY,CAAC,CAAY,CAAC,EAAM,EAAE,CAAC,EAAE,SAAS,EAAoB,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,AAAI,SAAJ,EAAe,OAAO,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAME,EAAE,GAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,GAAqBA,EAAE,EAAK,QAAQ,CAAIA,GAAE,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAA6C,EAAoB,EAAE,CAACH,UAAU,IAAI,IAAI,EAAE,CAAC,EAAE,AAAC,MAAad,OAAO,cAAc,CAAvB,EAA0B,aAAa,CAAC,MAAM,EAAI,GAAG,IAAM,EAAE,EAAoB,KAAW,EAAE,EAAoB,KAAW,EAAE,EAAoB,KAAW,EAAM,KAAK,EAAQiB,EAAE,IAAI,EAAE,YAAY,AAAszI,CAA3/I,EAA6/I,OAAU,CAAj0I,cAAqB,EAAE,YAAYF,CAAC,CAAC,CAAC,IAAIO,EAAEZ,EAAE,EAAEO,EAAwQ,GAAtQ,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,EAAM,IAAI,CAAC,YAAY,CAAC,EAAuJ,CAAE,CAAuB,UAAvB,MAAO,AAA1JF,CAAAA,EAAEf,OAAO,MAAM,CAAC,CAAC,0BAA0B,GAAM,YAAY,IAAS,SAAS,EAAE,YAAY,IAAS,UAAU,GAAK,WAAW,EAAE,OAAO,EAAEe,EAAC,EAAgB,WAAW,EAAaA,EAAE,WAAW,EAAE,GAAI,MAAM,AAAIC,UAAU,CAAC,6DAA6D,EAAE,MAACN,CAAAA,EAAE,MAACY,CAAAA,EAAEP,EAAE,WAAW,AAAD,EAAsB,KAAK,EAAEO,EAAE,QAAQ,EAAC,EAAsBZ,EAAE,GAAG,IAAI,EAAE,OAAOK,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,GAAGA,AAAa,SAAbA,EAAE,QAAQ,EAAc,CAAER,CAAAA,OAAO,QAAQ,CAACQ,EAAE,QAAQ,GAAGA,EAAE,QAAQ,EAAE,GAAI,MAAM,AAAIC,UAAU,CAAC,wDAAwD,EAAE,MAACC,CAAAA,EAAE,MAAC,GAAEF,EAAE,QAAQ,AAAD,EAAsB,KAAK,EAAE,EAAE,QAAQ,EAAC,EAAsBE,EAAE,GAAG,IAAI,EAAE,OAAOF,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAE,KAAI,CAAC,0BAA0B,CAACA,EAAE,yBAAyB,CAAC,IAAI,CAAC,kBAAkB,CAACA,EAAE,WAAW,GAAG,KAAUA,AAAa,IAAbA,EAAE,QAAQ,CAAK,IAAI,CAAC,YAAY,CAACA,EAAE,WAAW,CAAC,IAAI,CAAC,SAAS,CAACA,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAIA,EAAE,UAAU,CAAC,IAAI,CAAC,WAAW,CAACA,EAAE,UAAU,CAAC,IAAI,CAAC,WAAW,CAACA,EAAE,WAAW,CAAC,IAAI,CAAC,QAAQ,CAACA,EAAE,OAAO,CAAC,IAAI,CAAC,eAAe,CAACA,AAAmB,KAAnBA,EAAE,cAAc,CAAQ,IAAI,CAAC,SAAS,CAACA,AAAc,KAAdA,EAAE,SAAS,AAAQ,CAAC,IAAI,2BAA2B,CAAC,OAAO,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,6BAA6B,CAAC,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,EAA8B,IAArB,IAAI,CAAC,aAAa,GAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,EAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,UAAU,CAAC,MAAS,CAAC,mBAAmB,CAAC,IAAMA,EAAEd,KAAK,GAAG,GAAG,GAAG,AAAmB,SAAnB,IAAI,CAAC,WAAW,CAAa,CAAC,IAAMqB,EAAE,IAAI,CAAC,YAAY,CAACP,EAAE,IAAGO,CAAAA,EAAE,GAAgL,OAA5F,AAAkB,SAAlB,IAAI,CAAC,UAAU,EAAc,KAAI,CAAC,UAAU,CAACM,WAAY,KAAK,IAAI,CAAC,iBAAiB,EAAE,EAAGN,EAAC,EAAS,EAApL,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,aAAa,CAAC,CAAkH,CAAC,MAAO,EAAK,CAAC,oBAAoB,CAAC,GAAG,AAAmB,IAAnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAA8G,OAArG,IAAI,CAAC,WAAW,EAAEQ,cAAc,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,OAAU,IAAI,CAAC,gBAAgB,GAAU,GAAM,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAMf,EAAE,CAAC,IAAI,CAAC,iBAAiB,GAAG,GAAG,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,2BAA2B,CAAC,CAAC,IAAMO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,SAAG,CAAG,CAACA,IAAgB,IAAI,CAAC,IAAI,CAAC,UAAUA,IAAOP,GAAG,IAAI,CAAC,2BAA2B,GAAU,GAAI,CAAC,CAAC,MAAO,EAAK,CAAC,6BAA6B,CAAI,IAAI,CAAC,kBAAkB,EAAE,AAAmB,SAAnB,IAAI,CAAC,WAAW,GAAqB,IAAI,CAAC,WAAW,CAACgB,YAAa,KAAK,IAAI,CAAC,WAAW,EAAE,EAAG,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC9B,KAAK,GAAG,GAAG,IAAI,CAAC,SAAS,EAAC,aAAa,CAA0B,IAAtB,IAAI,CAAC,cAAc,EAAM,AAAqB,IAArB,IAAI,CAAC,aAAa,EAAM,IAAI,CAAC,WAAW,GAAE6B,cAAc,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,QAAU,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,eAAe,CAAC,KAAM,IAAI,CAAC,kBAAkB,KAAK,CAAC,IAAI,aAAa,CAAC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,YAAYf,CAAC,CAAC,CAAC,GAAG,CAAE,CAAW,UAAX,OAAOA,GAAcA,GAAG,GAAI,MAAM,AAAIC,UAAU,CAAC,6DAA6D,EAAED,EAAE,IAAI,EAAE,OAAOA,EAAE,CAAC,CAAC,CAAE,KAAI,CAAC,YAAY,CAACA,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,IAAIA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,IAAIW,QAAS,CAAChB,EAAEc,KAAK,IAAM,EAAI,UAAU,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,IAAM,EAAE,AAAgB,SAAhB,IAAI,CAAC,QAAQ,EAAc,AAAY,SAAZ,EAAE,OAAO,CAAaT,IAAI,EAAE,OAAO,CAACW,QAAQ,OAAO,CAACX,KAAK,AAAY,SAAZ,EAAE,OAAO,CAAa,IAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAE,KAAQ,CAAmB,SAAnB,EAAE,cAAc,CAAa,IAAI,CAAC,eAAe,CAAC,EAAE,cAAc,AAAD,GAAGS,EAAEP,EAAmB,GAAIP,EAAE,MAAM,EAAE,CAAC,MAAMK,EAAE,CAACS,EAAET,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAI,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAG,CAAC,MAAM,OAAOA,CAAC,CAACO,CAAC,CAAC,CAAC,OAAOI,QAAQ,GAAG,CAACX,EAAE,GAAG,CAAE,MAAMA,GAAG,IAAI,CAAC,GAAG,CAACA,EAAEO,IAAK,CAAC,OAAO,QAAK,IAAI,CAAC,SAAS,GAAc,IAAI,CAAC,SAAS,CAAC,GAAM,IAAI,CAAC,aAAa,IAA5C,IAAI,AAAsD,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,SAAS,CAAC,GAAG,AAAmB,IAAnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAa,OAAO,IAAII,QAASX,IAAI,IAAMO,EAAE,IAAI,CAAC,aAAa,AAAC,KAAI,CAAC,aAAa,CAAC,KAAKA,IAAIP,GAAG,CAAC,EAAG,CAAC,MAAM,QAAQ,CAAC,GAAG,AAAqB,IAArB,IAAI,CAAC,aAAa,EAAM,AAAmB,IAAnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAa,OAAO,IAAIW,QAASX,IAAI,IAAMO,EAAE,IAAI,CAAC,YAAY,AAAC,KAAI,CAAC,YAAY,CAAC,KAAKA,IAAIP,GAAG,CAAC,EAAG,CAAC,IAAI,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAOA,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAACA,GAAG,MAAM,CAAC,IAAI,SAAS,CAAC,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,UAAU,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,QAAQA,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAACA,CAAC,CAAC,CAAoB,KAAK,EAAO,OAAO,CAAC,CAAC,I,wDCA3rT,AAAC,MAAK,YAAgB,AAA6B,cAA7B,OAAOF,qBAAkCA,CAAAA,oBAAoB,EAAE,CAACC,UAAU,GAAE,EAAE,IAAI,EAAE,CAAC,EAAE,AAAC,MAAouC,SAAS,EAAMC,CAAC,CAAC,CAAC,EAAK,AAAI,KAAK,IAAT,GAAY,GAAE,CAAC,GAA+e,IAA7e,IAAI,EAAE,AAAltC,SAAeA,CAAC,EAAmB,IAAjB,IAAI,EAAE,EAAE,CAAK,EAAE,EAAQ,EAAEA,EAAE,MAAM,EAAC,CAAC,IAAI,EAAEA,CAAC,CAAC,EAAE,CAAC,GAAG,AAAI,MAAJ,GAAS,AAAI,MAAJ,GAAS,AAAI,MAAJ,EAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,WAAW,MAAM,EAAE,MAAMA,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,AAAI,OAAJ,EAAS,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,eAAe,MAAM,IAAI,MAAMA,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,AAAI,MAAJ,EAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,OAAO,MAAM,EAAE,MAAMA,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,AAAI,MAAJ,EAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,QAAQ,MAAM,EAAE,MAAMA,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,AAAI,MAAJ,EAAQ,CAAoB,IAAnB,IAAIS,EAAE,GAAON,EAAE,EAAE,EAAQA,EAAEH,EAAE,MAAM,EAAC,CAAC,IAAI,EAAEA,EAAE,UAAU,CAACG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,AAAI,KAAJ,EAAO,CAACM,GAAGT,CAAC,CAACG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAACM,EAAE,MAAM,AAAIR,UAAU,6BAA6B,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,OAAO,MAAM,EAAE,MAAMQ,CAAC,GAAG,EAAEN,EAAE,QAAQ,CAAC,GAAG,AAAI,MAAJ,EAAQ,CAAC,IAAI,EAAE,EAAM,EAAE,GAAOA,EAAE,EAAE,EAAE,GAAGH,AAAO,MAAPA,CAAC,CAACG,EAAE,CAAQ,MAAM,AAAIF,UAAU,oCAAoCE,GAAG,KAAMA,EAAEH,EAAE,MAAM,EAAC,CAAC,GAAGA,AAAO,OAAPA,CAAC,CAACG,EAAE,CAAQ,CAAC,GAAGH,CAAC,CAACG,IAAI,CAACH,CAAC,CAACG,IAAI,CAAC,QAAQ,CAAC,GAAGH,AAAO,MAAPA,CAAC,CAACG,EAAE,CAAY,IAAG,AAAI,KAAJ,EAAM,CAACA,IAAI,KAAK,OAAO,GAAGH,AAAO,MAAPA,CAAC,CAACG,EAAE,GAAQ,IAAOH,AAAS,MAATA,CAAC,CAACG,EAAE,EAAE,EAAQ,MAAM,AAAIF,UAAU,uCAAuCE,GAAI,GAAGH,CAAC,CAACG,IAAI,CAAC,GAAG,EAAE,MAAM,AAAIF,UAAU,yBAAyB,GAAG,GAAG,CAAC,EAAE,MAAM,AAAIA,UAAU,sBAAsB,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,UAAU,MAAM,EAAE,MAAM,CAAC,GAAG,EAAEE,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,OAAO,MAAM,EAAE,MAAMH,CAAC,CAAC,IAAI,EAAE,CAAuC,OAAtC,EAAE,IAAI,CAAC,CAAC,KAAK,MAAM,MAAM,EAAE,MAAM,EAAE,GAAU,CAAC,EAAqDA,GAAO,EAAE,EAAE,QAAQ,CAAC,EAAE,AAAI,KAAK,IAAT,EAAW,KAAK,EAAM,EAAE,KAAK,EAAa,EAAE,SAAS,EAAE,OAAO,MAAUQ,EAAE,EAAE,CAAK,EAAE,EAAM,EAAE,EAAM,EAAE,GAAO,EAAW,SAASR,CAAC,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,GAAGA,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,EAAM,EAAY,SAASA,CAAC,EAAE,IAAI,EAAE,EAAWA,GAAG,GAAG,AAAI,SAAJ,EAAc,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,AAAoB,OAAM,AAAIC,UAAU,cAArC,EAAE,IAAI,CAA+C,OAA5C,EAAE,KAAK,CAA8C,cAAcD,EAAE,EAAM,EAAY,WAA0B,IAAf,IAAa,EAAT,EAAE,GAAe,EAAE,EAAW,SAAS,EAAW,iBAAiB,GAAG,EAAE,OAAO,CAAC,EAAQ,EAAE,EAAE,MAAM,EAAC,CAAC,IAAI,EAAE,EAAW,QAAY,EAAE,EAAW,QAAY,EAAE,EAAW,WAAW,GAAG,GAAG,EAAE,CAAC,IAAI,EAAE,GAAG,EAAqB,MAAf,EAAE,OAAO,CAAC,KAAS,GAAG,EAAE,EAAE,IAAM,IAAGQ,EAAE,IAAI,CAAC,GAAG,EAAE,IAAGA,EAAE,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,EAAE,OAAO,GAAG,QAAQ,GAAG,EAAE,SAAS,EAAW,aAAa,EAAE,GAAG,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAW,gBAAgB,GAAG,EAAE,CAAC,GAAG,EAAE,QAAQ,CAA+C,GAA3C,IAAGA,EAAE,IAAI,CAAC,GAAG,EAAE,IAAS,EAAW,QAAa,CAAC,IAAI,EAAE,IAAkB,EAAE,EAAW,SAAS,GAAO,EAAE,EAAW,YAAY,GAAO,EAAE,IAAc,EAAY,SAASA,EAAE,IAAI,CAAC,CAAC,KAAK,GAAI,GAAE,IAAI,EAAC,EAAG,QAAQ,GAAG,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAW,aAAa,EAAE,GAAG,QAAQ,CAAC,EAAY,MAAM,CAAC,OAAOA,CAAC,CAA6F,SAAS,EAAiBR,CAAC,CAAC,CAAC,EAAK,AAAI,KAAK,IAAT,GAAY,GAAE,CAAC,GAAE,IAAI,EAAE,EAAM,GAAO,EAAE,EAAE,MAAM,CAACS,EAAE,AAAI,KAAK,IAAT,EAAW,SAAST,CAAC,EAAE,OAAOA,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAACQ,EAAE,AAAI,KAAK,IAAT,GAAgB,EAAM,EAAER,EAAE,GAAG,CAAE,SAASA,CAAC,EAAE,GAAG,AAAW,UAAX,OAAOA,EAAc,OAAO,AAAIiB,OAAO,OAAOjB,EAAE,OAAO,CAAC,KAAK,EAAG,GAAI,OAAO,SAAS,CAAC,EAAW,IAAI,IAAT,EAAE,GAAW,EAAE,EAAE,EAAEA,EAAE,MAAM,CAAC,IAAI,CAAC,IAAIG,EAAEH,CAAC,CAAC,EAAE,CAAC,GAAG,AAAW,UAAX,OAAOG,EAAa,CAAC,GAAGA,EAAE,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAACA,EAAE,IAAI,CAAC,CAAC,OAAc,EAAEA,AAAa,MAAbA,EAAE,QAAQ,EAAQA,AAAa,MAAbA,EAAE,QAAQ,CAAW,EAAEA,AAAa,MAAbA,EAAE,QAAQ,EAAQA,AAAa,MAAbA,EAAE,QAAQ,CAAO,GAAGT,MAAM,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,MAAM,AAAIO,UAAU,aAAaE,EAAE,IAAI,CAAC,qCAAqC,GAAG,AAAW,IAAX,EAAE,MAAM,CAAK,CAAC,GAAG,EAAE,QAAS,OAAM,AAAIF,UAAU,aAAaE,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAEM,EAAE,CAAC,CAAC,EAAE,CAACN,GAAG,GAAGK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAI,MAAM,AAAIP,UAAU,iBAAiBE,EAAE,IAAI,CAAC,eAAeA,EAAE,OAAO,CAAC,eAAe,EAAE,KAAK,GAAGA,EAAE,MAAM,CAAC,EAAEA,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,AAAW,UAAX,OAAO,GAAc,AAAW,UAAX,OAAO,EAAa,CAAC,IAAI,EAAEM,EAAES,OAAO,GAAGf,GAAG,GAAGK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAI,MAAM,AAAIP,UAAU,aAAaE,EAAE,IAAI,CAAC,eAAeA,EAAE,OAAO,CAAC,eAAe,EAAE,KAAK,GAAGA,EAAE,MAAM,CAAC,EAAEA,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAG,GAAW,IAAI,EAAE,EAAE,WAAW,UAAW,OAAM,AAAIF,UAAU,aAAaE,EAAE,IAAI,CAAC,WAAW,GAAE,CAAC,OAAO,CAAC,CAAC,CAAyI,SAAS,EAAiBH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAK,AAAI,KAAK,IAAT,GAAY,GAAE,CAAC,GAAE,IAAI,EAAE,EAAE,MAAM,CAACS,EAAE,AAAI,KAAK,IAAT,EAAW,SAAST,CAAC,EAAE,OAAOA,CAAC,EAAE,EAAE,OAAO,SAAS,CAAC,EAAE,IAAI,EAAEA,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,MAAO,GAA2Q,IAAI,IAArQG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAK,EAAElB,OAAO,MAAM,CAAC,MAAoO,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,KAAK,AAAtO,SAASe,CAAC,EAAE,GAAG,AAAO,SAAP,CAAC,CAACA,EAAE,EAA8B,IAAI,EAAE,CAAC,CAACA,EAAE,EAAE,AAAI,AAAa,OAAb,EAAE,QAAQ,EAAQ,AAAa,MAAb,EAAE,QAAQ,CAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAACA,EAAE,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,EAAE,GAAG,CAAE,SAASA,CAAC,EAAE,OAAOS,EAAET,EAAE,EAAE,GAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAACS,EAAE,CAAC,CAACT,EAAE,CAAC,GAAG,EAAsC,GAAG,MAAM,CAAC,KAAKG,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,CAAqC,SAAS,EAAaH,CAAC,EAAE,OAAOA,EAAE,OAAO,CAAC,4BAA4B,OAAO,CAAC,SAAS,EAAMA,CAAC,EAAE,OAAOA,GAAGA,EAAE,SAAS,CAAC,GAAG,GAAG,CAA0Y,SAAS,EAAeA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAK,AAAI,KAAK,IAAT,GAAY,GAAE,CAAC,GAA2P,IAAI,IAAzP,EAAE,EAAE,MAAM,CAAC,EAAE,AAAI,KAAK,IAAT,GAAiB,EAAE,EAAE,EAAE,KAAK,CAAqB,EAAE,EAAE,GAAG,CAAqB,EAAE,EAAE,MAAM,CAAC,EAAE,AAAI,KAAK,IAAT,EAAW,SAASA,CAAC,EAAE,OAAOA,CAAC,EAAE,EAAM,EAAE,IAAI,EAAa,EAAE,QAAQ,EAAE,IAAI,MAAU,EAAE,IAAI,EAAa,EAAE,SAAS,EAAE,OAAO,IAAQ,EAAE,AAAhM,AAAI,KAAK,IAAT,GAAgB,EAAkL,IAAI,GAAW,EAAE,EAAM,EAAE,AAAJA,EAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,AAAxBA,CAAyB,CAAC,EAAE,CAAC,GAAG,AAAW,UAAX,OAAO,EAAc,GAAG,EAAa,EAAE,QAAQ,CAAC,IAAI,EAAE,EAAa,EAAE,EAAE,MAAM,GAAO,EAAE,EAAa,EAAE,EAAE,MAAM,GAAG,GAAG,EAAE,OAAO,CAAiB,GAAZ,GAAE,EAAE,IAAI,CAAC,GAAM,GAAG,EAAG,GAAG,AAAa,MAAb,EAAE,QAAQ,EAAQ,AAAa,MAAb,EAAE,QAAQ,CAAO,CAAC,IAAI,EAAE,AAAa,MAAb,EAAE,QAAQ,CAAO,IAAI,GAAG,GAAG,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,MAAO,GAAG,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,QAAQ,MAAO,GAAG,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,AAAC,CAAC,CAAC,GAAznB,AAAI,KAAK,IAAT,GAAgB,EAAknB,AAAC,GAAE,IAAG,EAAE,GAAE,EAAE,GAAG,AAAC,EAAE,QAAQ,CAAK,MAAM,EAAE,IAAZ,QAAoB,CAAC,IAAI,EAAEA,CAAC,CAACA,EAAE,MAAM,CAAC,EAAE,CAAK,EAAE,AAAW,UAAX,OAAO,EAAa,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,AAAI,SAAJ,CAAiB,CAAC,GAAG,IAAG,MAAM,EAAE,MAAM,EAAE,KAAI,EAAK,AAAC,GAAG,IAAG,MAAM,EAAE,IAAI,EAAE,GAAE,CAAE,CAAC,OAAO,IAAIiB,OAAO,EAAE,EAAM,GAAG,CAAiC,SAAS,EAAa,CAAC,CAACrB,CAAC,CAACD,CAAC,EAAE,GAAG,aAAasB,OAAc,CAA36C,GAAG,CAAy7CrB,EAAt7C,OAAo7C,EAA36C,IAAI,EAAE,AAAq6C,EAAn6C,MAAM,CAAC,KAAK,CAAC,aAAa,GAAG,EAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAK,AAAy2CA,EAAv2C,IAAI,CAAC,CAAC,KAAK,EAAE,OAAO,GAAG,OAAO,GAAG,SAAS,GAAG,QAAQ,EAAE,GAAI,OAA0yC,CAAG,QAAE,AAAGF,MAAM,OAAO,CAAC,GAAptC,AAAIuB,OAAO,MAAM,AAAhF,AAA2yC,EAAzyC,GAAG,CAAE,SAASjB,CAAC,EAAE,OAAO,EAAaA,EAAswCJ,EAAED,GAAjwC,MAAM,GAA8B,IAAI,CAAC,KAAK,IAAI,EAA+sCA,IAA/pC,EAAe,EAAyqC,EAAIA,GAAFC,EAAED,EAAE,CAA34LV,OAAO,cAAc,CAAvB,EAA0B,aAAa,CAAC,MAAM,EAAI,GAAyzE,AAA32E,EAA62E,KAAK,CAAC,EAAkE,AAAr7E,EAAu7E,OAAO,CAArE,SAAiB,CAAC,CAAC,CAAC,EAAE,OAAO,EAAiB,EAAM,EAAE,GAAG,EAAE,EAA4pC,AAAhlH,EAAklH,gBAAgB,CAAC,EAAuG,AAA1sH,EAA4sH,KAAK,CAA7F,SAAee,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAA2B,OAAO,EAA3B,EAAaA,EAAE,EAAE,GAA6B,EAAE,EAAE,EAA2f,AAApsI,EAAssI,gBAAgB,CAAC,EAA2/C,AAAltL,EAAotL,cAAc,CAAC,EAA2K,AAA94L,EAAg5L,YAAY,CAAC,CAAY,KAAK,EAAO,OAAO,CAAC,CAAC,I,6ECWvjM,IAAI,EAAqBP,OAAO,GAAG,CAAC,8BAClC,EAAoBA,OAAO,GAAG,CAAC,gBAC/B,EAAsBA,OAAO,GAAG,CAAC,kBACjC,EAAyBA,OAAO,GAAG,CAAC,qBACpC,EAAsBA,OAAO,GAAG,CAAC,kBACjC,EAAsBA,OAAO,GAAG,CAAC,kBACjC,EAAqBA,OAAO,GAAG,CAAC,iBAChC,EAAyBA,OAAO,GAAG,CAAC,qBACpC,EAAsBA,OAAO,GAAG,CAAC,kBACjC,EAAkBA,OAAO,GAAG,CAAC,cAC7B,EAAkBA,OAAO,GAAG,CAAC,cAC7B,EAAwBA,OAAO,QAAQ,CAQrC,EAAuB,CACvB,UAAW,WACT,MAAO,CAAC,CACV,EACA,mBAAoB,WAAa,EACjC,oBAAqB,WAAa,EAClC,gBAAiB,WAAa,CAChC,EACA,EAASR,OAAO,MAAM,CACtB,EAAc,CAAC,EACjB,SAAS,EAAU,CAAK,CAAE,CAAO,CAAE,CAAO,EACxC,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,OAAO,CAAG,GAAW,CAC5B,CAgBA,SAAS,IAAkB,CAE3B,SAAS,EAAc,CAAK,CAAE,CAAO,CAAE,CAAO,EAC5C,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,OAAO,CAAG,GAAW,CAC5B,CAtBA,EAAU,SAAS,CAAC,gBAAgB,CAAG,CAAC,EACxC,EAAU,SAAS,CAAC,QAAQ,CAAG,SAAU,CAAY,CAAE,CAAQ,EAC7D,GACE,UAAa,OAAO,GACpB,YAAe,OAAO,GACtB,MAAQ,EAER,MAAM2B,MACJ,0GAEJ,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAE,EAAc,EAAU,WAC7D,EACA,EAAU,SAAS,CAAC,WAAW,CAAG,SAAU,CAAQ,EAClD,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAE,EAAU,cAClD,EAEA,EAAe,SAAS,CAAG,EAAU,SAAS,CAO9C,IAAI,EAA0B,EAAc,SAAS,CAAG,IAAI,CAC5D,GAAuB,WAAW,CAAG,EACrC,EAAO,EAAwB,EAAU,SAAS,EAClD,EAAuB,oBAAoB,CAAG,CAAC,EAC/C,IAAI,EAAclB,MAAM,OAAO,CAC/B,SAAS,IAAQ,CACjB,IAAIyB,EAAuB,CAAE,EAAG,KAAM,EAAG,KAAM,EAAG,KAAM,EAAG,IAAK,EAC9D,EAAiBlC,OAAO,SAAS,CAAC,cAAc,CAClD,SAAS,EAAa,CAAI,CAAE,CAAG,CAAE,CAAI,CAAE,CAAM,CAAE,CAAK,CAAE,CAAK,EAEzD,MAAO,CACL,SAAU,EACV,KAAM,EACN,IAAK,EACL,IAAK,KAAK,IALZ,GAAO,EAAM,GAAG,AAAD,EAKU,EAAO,KAC9B,MAAO,CACT,CACF,CAWA,SAAS,EAAe,CAAM,EAC5B,MACE,UAAa,OAAO,GACpB,OAAS,GACT,EAAO,QAAQ,GAAK,CAExB,CAUA,IAAI,EAA6B,OACjC,SAAS,EAAce,CAAO,CAAE,CAAK,MAVrB,EACV,EAUJ,MAAO,UAAa,OAAOA,GAAW,OAASA,GAAW,MAAQA,EAAQ,GAAG,EAX/D,EAYH,GAAKA,EAAQ,GAAG,CAXvB,EAAgB,CAAE,IAAK,KAAM,IAAK,IAAK,EAEzC,IACA,EAAI,OAAO,CAAC,QAAS,SAAU,CAAK,EAClC,OAAO,CAAa,CAAC,EAAM,AAC7B,IAOE,EAAM,QAAQ,CAAC,GACrB,CA8IA,SAAS,EAAY,CAAQ,CAAE,CAAI,CAAE,CAAO,EAC1C,GAAI,MAAQ,EAAU,OAAO,EAC7B,IAAI,EAAS,EAAE,CACb,EAAQ,EAIV,OAHA,AAjHF,SAAS,EAAa,CAAQ,CAAE,CAAK,CAAE,CAAa,CAAE,CAAS,CAAE,CAAQ,EACvE,IAjE0B,EAAY,EAhEjB,EAiIjB,EAAO,OAAO,CACd,gBAAgB,GAAQ,YAAc,CAAG,GAAG,GAAW,IAAG,EAC9D,IAAI,EAAiB,CAAC,EACtB,GAAI,OAAS,EAAU,EAAiB,CAAC,OAEvC,OAAQ,GACN,IAAK,SACL,IAAK,SACL,IAAK,SACH,EAAiB,CAAC,EAClB,KACF,KAAK,SACH,OAAQ,EAAS,QAAQ,EACvB,KAAK,EACL,KAAK,EACH,EAAiB,CAAC,EAClB,KACF,MAAK,EACH,OACE,AACA,EACE,AAFD,GAAiB,EAAS,KAAK,AAAD,EAEd,EAAS,QAAQ,EAChC,EACA,EACA,EACA,EAGR,CACJ,CACF,GAAI,EACF,OACE,AAAC,EAAW,EAAS,GACpB,EACC,KAAO,EAAY,IAAM,EAAc,EAAU,GAAK,EACxD,EAAY,GACP,CAAC,EAAgB,GAClB,MAAQ,GACL,GACC,EAAe,OAAO,CAAC,EAA4B,OAAS,GAAE,EAClE,EAAa,EAAU,EAAO,EAAe,GAAI,SAAU,CAAC,EAC1D,OAAO,CACT,EAAC,EACD,MAAQ,GACP,GAAe,KA7GE,EA+Gd,EA/G0B,EAgH1B,EACG,OAAQ,EAAS,GAAG,EACpB,GAAY,EAAS,GAAG,GAAK,EAAS,GAAG,CACtC,GACA,AAAC,IAAK,EAAS,GAAG,AAAD,EAAG,OAAO,CACzB,EACA,OACE,GAAE,EACV,EAVH,EA7GJ,EACL,EAAW,IAAI,CACf,EACA,KAAK,EACL,KAAK,EACL,KAAK,EACL,EAAW,KAAK,GAmHV,EAAM,IAAI,CAAC,EAAQ,EACvB,EAEJ,EAAiB,EACjB,IAAI,EAAiB,KAAO,EAAY,IAAM,EAAY,IAC1D,GAAI,EAAY,GACd,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAE,IACnC,AACG,EAAO,EAAiB,EAD1B,EAAY,CAAQ,CAAC,EAAE,CAC4B,GACjD,GAAkB,EACjB,EACA,EACA,EACA,EACA,QAEH,GAAK,AAA+B,YAAe,MAA7C,GAzMX,AAAI,QADiB,EA0MQ,IAzMC,UAAa,OAAO,EAAsB,KAIjE,YAAe,MAHtB,GACE,AAAC,GAAyB,CAAa,CAAC,EAAsB,EAC9D,CAAa,CAAC,aAAa,AAAD,EACiB,EAAgB,IAqMxB,EACnC,IACE,EAAW,EAAE,IAAI,CAAC,GAAW,EAAI,EACjC,CAAC,AAAC,GAAY,EAAS,IAAI,EAAC,EAAG,IAAI,EAGnC,AACG,EAAO,EAAiB,EAD1B,EAAY,EAAU,KAAK,CACwB,KACjD,GAAkB,EACjB,EACA,EACA,EACA,EACA,QAEH,GAAI,WAAa,EAAM,CAC1B,GAAI,YAAe,OAAO,EAAS,IAAI,CACrC,OAAO,EACL,AA5HR,SAAyB,CAAQ,EAC/B,OAAQ,EAAS,MAAM,EACrB,IAAK,YACH,OAAO,EAAS,KAAK,AACvB,KAAK,WACH,MAAM,EAAS,MAAM,AACvB,SACE,OACG,UAAa,OAAO,EAAS,MAAM,CAChC,EAAS,IAAI,CAAC,EAAM,GACnB,CAAC,EAAS,MAAM,CAAG,UACpB,EAAS,IAAI,CACX,SAAU,CAAc,EACtB,YAAc,EAAS,MAAM,EAC1B,CAAC,EAAS,MAAM,CAAG,YACnB,EAAS,KAAK,CAAG,CAAc,CACpC,EACA,SAAU,CAAK,EACb,YAAc,EAAS,MAAM,EAC1B,CAAC,EAAS,MAAM,CAAG,WAAc,EAAS,MAAM,CAAG,CAAK,CAC7D,EACF,EACJ,EAAS,MAAM,EAEf,IAAK,YACH,OAAO,EAAS,KAAK,AACvB,KAAK,WACH,MAAM,EAAS,MAAM,AACzB,CACJ,CACA,MAAM,CACR,EA6FwB,GAChB,EACA,EACA,EACA,EAGJ,OAAMY,MACJ,kDACG,qBAHL,GAAQM,OAAO,EAAQ,EAIf,qBAAuBjC,OAAO,IAAI,CAAC,GAAU,IAAI,CAAC,MAAQ,IAC1D,CAAI,EACR,4EAEN,CACA,OAAO,CACT,EAKe,EAAU,EAAQ,GAAI,GAAI,SAAU,CAAK,EACpD,OAAO,EAAK,IAAI,CAAC,EAAS,EAAO,IACnC,GACO,CACT,CACA,SAAS,EAAgB,CAAO,EAC9B,GAAI,KAAO,EAAQ,OAAO,CAAE,CAC1B,IAAI,EAAO,EAAQ,OAAO,CAE1B,AADA,GAAO,GAAK,EACP,IAAI,CACP,SAAU,CAAY,EAChB,KAAM,EAAQ,OAAO,EAAI,KAAO,EAAQ,OAAO,AAAD,GAChD,CAAC,EAAQ,OAAO,CAAG,EAAK,EAAQ,OAAO,CAAG,CAAY,CAC1D,EACA,SAAU,CAAK,EACT,KAAM,EAAQ,OAAO,EAAI,KAAO,EAAQ,OAAO,AAAD,GAChD,CAAC,EAAQ,OAAO,CAAG,EAAK,EAAQ,OAAO,CAAG,CAAK,CACnD,GAEF,KAAO,EAAQ,OAAO,EAAK,CAAC,EAAQ,OAAO,CAAG,EAAK,EAAQ,OAAO,CAAG,CAAI,CAC3E,CACA,GAAI,IAAM,EAAQ,OAAO,CAAE,OAAO,EAAQ,OAAO,CAAC,OAAO,AACzD,OAAM,EAAQ,OAAO,AACvB,CACA,IAAI,EACF,YAAe,OAAOmC,YAClBA,YACA,SAAUpB,CAAK,EAiBN,GACL,UAAa,OAAOqB,SACpB,YAAe,OAAOA,QAAQ,IAAI,CAClC,YACAA,QAAQ,IAAI,CAAC,oBAAqBrB,GAGpCsB,QAAQ,KAAK,CAACtB,EAChB,CACN,GAAQ,QAAQ,CAAG,CACjB,IAAK,EACL,QAAS,SAAU,CAAQ,CAAE,CAAW,CAAE,CAAc,EACtD,EACE,EACA,WACE,EAAY,KAAK,CAAC,IAAI,CAAEU,UAC1B,EACA,EAEJ,EACA,MAAO,SAAU,CAAQ,EACvB,IAAI,EAAI,EAIR,OAHA,EAAY,EAAU,WACpB,GACF,GACO,CACT,EACA,QAAS,SAAU,CAAQ,EACzB,OACE,EAAY,EAAU,SAAU,CAAK,EACnC,OAAO,CACT,IAAM,EAAE,AAEZ,EACA,KAAM,SAAU,CAAQ,EACtB,GAAI,CAAC,EAAe,GAClB,MAAME,MACJ,yEAEJ,OAAO,CACT,CACF,EACA,EAAQ,SAAS,CAAG,EACpB,EAAQ,QAAQ,CAAG,EACnB,EAAQ,QAAQ,CAAG,EACnB,EAAQ,aAAa,CAAG,EACxB,EAAQ,UAAU,CAAG,EACrB,EAAQ,QAAQ,CAAG,EACnB,EAAQ,+DAA+D,CACrEO,EACF,EAAQ,kBAAkB,CAAG,CAC3B,UAAW,KACX,EAAG,SAAU,CAAI,EACf,OAAOA,EAAqB,CAAC,CAAC,YAAY,CAAC,EAC7C,CACF,EACA,EAAQ,KAAK,CAAG,SAAU,CAAE,EAC1B,OAAO,WACL,OAAO,EAAG,KAAK,CAAC,KAAMT,UACxB,CACF,EACA,EAAQ,WAAW,CAAG,WACpB,OAAO,IACT,EACA,EAAQ,YAAY,CAAG,SAAUV,CAAO,CAAE,CAAM,CAAE,CAAQ,EACxD,GAAI,MAASA,EACX,MAAMY,MACJ,wDAA0DZ,EAAU,KAExE,IAAI,EAAQ,EAAO,CAAC,EAAGA,EAAQ,KAAK,EAClC,EAAMA,EAAQ,GAAG,CACjB,EAAQ,KAAK,EACf,GAAI,MAAQ,EACV,IAAK,KAAa,KAAK,IAAM,EAAO,GAAG,EAAK,GAAQ,KAAK,GACzD,KAAK,IAAM,EAAO,GAAG,EAAK,GAAM,GAAK,EAAO,GAAG,AAAD,EAC9C,EACE,AAAC,EAAe,IAAI,CAAC,EAAQ,IAC3B,QAAU,GACV,WAAa,GACb,aAAe,GACd,SAAU,GAAY,KAAK,IAAM,EAAO,GAAG,AAAD,GAC1C,EAAK,CAAC,EAAS,CAAG,CAAM,CAAC,EAAS,AAAD,EACxC,IAAI,EAAWU,UAAU,MAAM,CAAG,EAClC,GAAI,IAAM,EAAU,EAAM,QAAQ,CAAG,OAChC,GAAI,EAAI,EAAU,CACrB,IAAK,IAAI,EAAahB,MAAM,GAAW,EAAI,EAAG,EAAI,EAAU,IAC1D,CAAU,CAAC,EAAE,CAAGgB,SAAS,CAAC,EAAI,EAAE,AAClC,GAAM,QAAQ,CAAG,CACnB,CACA,OAAO,EAAaV,EAAQ,IAAI,CAAE,EAAK,KAAK,EAAG,KAAK,EAAG,EAAO,EAChE,EACA,EAAQ,aAAa,CAAG,SAAU,CAAY,EAc5C,MALA,AARA,GAAe,CACb,SAAU,EACV,cAAe,EACf,eAAgB,EAChB,aAAc,EACd,SAAU,KACV,SAAU,IACZ,GACa,QAAQ,CAAG,EACxB,EAAa,QAAQ,CAAG,CACtB,SAAU,EACV,SAAU,CACZ,EACO,CACT,EACA,EAAQ,aAAa,CAAG,SAAU,CAAI,CAAE,CAAM,CAAE,CAAQ,EACtD,IAAI,EACF,EAAQ,CAAC,EACT,EAAM,KACR,GAAI,MAAQ,EACV,IAAK,KAAa,KAAK,IAAM,EAAO,GAAG,EAAK,GAAM,GAAK,EAAO,GAAG,AAAD,EAAI,EAClE,EAAe,IAAI,CAAC,EAAQ,IAC1B,QAAU,GACV,WAAa,GACb,aAAe,GACd,EAAK,CAAC,EAAS,CAAG,CAAM,CAAC,EAAS,AAAD,EACxC,IAAI,EAAiBU,UAAU,MAAM,CAAG,EACxC,GAAI,IAAM,EAAgB,EAAM,QAAQ,CAAG,OACtC,GAAI,EAAI,EAAgB,CAC3B,IAAK,IAAI,EAAahB,MAAM,GAAiB,EAAI,EAAG,EAAI,EAAgB,IACtE,CAAU,CAAC,EAAE,CAAGgB,SAAS,CAAC,EAAI,EAAE,AAClC,GAAM,QAAQ,CAAG,CACnB,CACA,GAAI,GAAQ,EAAK,YAAY,CAC3B,IAAK,KAAc,EAAiB,EAAK,YAAY,CACnD,KAAK,IAAM,CAAK,CAAC,EAAS,EACvB,EAAK,CAAC,EAAS,CAAG,CAAc,CAAC,EAAS,AAAD,EAChD,OAAO,EAAa,EAAM,EAAK,KAAK,EAAG,KAAK,EAAG,KAAM,EACvD,EACA,EAAQ,SAAS,CAAG,WAClB,MAAO,CAAE,QAAS,IAAK,CACzB,EACA,EAAQ,UAAU,CAAG,SAAU,CAAM,EACnC,MAAO,CAAE,SAAU,EAAwB,OAAQ,CAAO,CAC5D,EACA,EAAQ,cAAc,CAAG,EACzB,EAAQ,IAAI,CAAG,SAAU,CAAI,EAC3B,MAAO,CACL,SAAU,EACV,SAAU,CAAE,QAAS,GAAI,QAAS,CAAK,EACvC,MAAO,CACT,CACF,EACA,EAAQ,IAAI,CAAG,SAAU,CAAI,CAAE,CAAO,EACpC,MAAO,CACL,SAAU,EACV,KAAM,EACN,QAAS,KAAK,IAAM,EAAU,KAAO,CACvC,CACF,EACA,EAAQ,eAAe,CAAG,SAAU,CAAK,EACvC,IAAI,EAAiBS,EAAqB,CAAC,CACzC,EAAoB,CAAC,CACvBA,CAAAA,EAAqB,CAAC,CAAG,EACzB,GAAI,CACF,IAAI,EAAc,IAChB,EAA0BA,EAAqB,CAAC,AAClD,QAAS,GACP,EAAwB,EAAmB,GAC7C,UAAa,OAAO,GAClB,OAAS,GACT,YAAe,OAAO,EAAY,IAAI,EACtC,EAAY,IAAI,CAAC,EAAM,EAC3B,CAAE,MAAOnB,EAAO,CACd,EAAkBA,EACpB,QAAU,CACR,OAAS,GACP,OAAS,EAAkB,KAAK,EAC/B,GAAe,KAAK,CAAG,EAAkB,KAAK,AAAD,EAC7CmB,EAAqB,CAAC,CAAG,CAC9B,CACF,EACA,EAAQ,wBAAwB,CAAG,WACjC,OAAOA,EAAqB,CAAC,CAAC,eAAe,EAC/C,EACA,EAAQ,GAAG,CAAG,SAAU,CAAM,EAC5B,OAAOA,EAAqB,CAAC,CAAC,GAAG,CAAC,EACpC,EACA,EAAQ,cAAc,CAAG,SAAU,CAAM,CAAE,CAAY,CAAE,CAAS,EAChE,OAAOA,EAAqB,CAAC,CAAC,cAAc,CAAC,EAAQ,EAAc,EACrE,EACA,EAAQ,WAAW,CAAG,SAAU,CAAQ,CAAE,CAAI,EAC5C,OAAOA,EAAqB,CAAC,CAAC,WAAW,CAAC,EAAU,EACtD,EACA,EAAQ,UAAU,CAAG,SAAU,CAAO,EACpC,OAAOA,EAAqB,CAAC,CAAC,UAAU,CAAC,EAC3C,EACA,EAAQ,aAAa,CAAG,WAAa,EACrC,EAAQ,gBAAgB,CAAG,SAAU,CAAK,CAAE,CAAY,EACtD,OAAOA,EAAqB,CAAC,CAAC,gBAAgB,CAAC,EAAO,EACxD,EACA,EAAQ,SAAS,CAAG,SAAU,CAAM,CAAE,CAAI,EACxC,OAAOA,EAAqB,CAAC,CAAC,SAAS,CAAC,EAAQ,EAClD,EACA,EAAQ,KAAK,CAAG,WACd,OAAOA,EAAqB,CAAC,CAAC,KAAK,EACrC,EACA,EAAQ,mBAAmB,CAAG,SAAU,CAAG,CAAE,CAAM,CAAE,CAAI,EACvD,OAAOA,EAAqB,CAAC,CAAC,mBAAmB,CAAC,EAAK,EAAQ,EACjE,EACA,EAAQ,kBAAkB,CAAG,SAAU,CAAM,CAAE,CAAI,EACjD,OAAOA,EAAqB,CAAC,CAAC,kBAAkB,CAAC,EAAQ,EAC3D,EACA,EAAQ,eAAe,CAAG,SAAU,CAAM,CAAE,CAAI,EAC9C,OAAOA,EAAqB,CAAC,CAAC,eAAe,CAAC,EAAQ,EACxD,EACA,EAAQ,OAAO,CAAG,SAAU,CAAM,CAAE,CAAI,EACtC,OAAOA,EAAqB,CAAC,CAAC,OAAO,CAAC,EAAQ,EAChD,EACA,EAAQ,aAAa,CAAG,SAAU,CAAW,CAAE,CAAO,EACpD,OAAOA,EAAqB,CAAC,CAAC,aAAa,CAAC,EAAa,EAC3D,EACA,EAAQ,UAAU,CAAG,SAAU,CAAO,CAAE,CAAU,CAAE,CAAI,EACtD,OAAOA,EAAqB,CAAC,CAAC,UAAU,CAAC,EAAS,EAAY,EAChE,EACA,EAAQ,MAAM,CAAG,SAAU,CAAY,EACrC,OAAOA,EAAqB,CAAC,CAAC,MAAM,CAAC,EACvC,EACA,EAAQ,QAAQ,CAAG,SAAU,CAAY,EACvC,OAAOA,EAAqB,CAAC,CAAC,QAAQ,CAAC,EACzC,EACA,EAAQ,oBAAoB,CAAG,SAC7B,CAAS,CACT,CAAW,CACX,CAAiB,EAEjB,OAAOA,EAAqB,CAAC,CAAC,oBAAoB,CAChD,EACA,EACA,EAEJ,EACA,EAAQ,aAAa,CAAG,WACtB,OAAOA,EAAqB,CAAC,CAAC,aAAa,EAC7C,EACA,EAAQ,OAAO,CAAG,iC,+DC9hBhB,GAAO,OAAO,CAAGvB,EAAjB,gD,qDCHF,AAAC,MAAK,aAAa,IAAI,EAAE,CAAC,IAAII,IAA0FA,EAAE,OAAO,CAA/F,SAAcA,CAAC,EAAwB,IAAtB,IAAI,EAAE,KAAK,EAAEA,EAAE,MAAM,CAAO,GAAG,EAAE,AAAE,GAAF,EAAKA,EAAE,UAAU,CAAC,EAAE,GAAG,OAAO,IAAI,CAAC,CAAe,CAAC,EAAMJ,EAAE,CAAC,EAAE,SAAS,EAAoB,CAAC,EAAE,IAAI,EAAEA,CAAC,CAAC,EAAE,CAAC,GAAG,AAAI,SAAJ,EAAe,OAAO,EAAE,OAAO,CAAC,IAAI,EAAEA,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAM,EAAE,GAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,GAAqB,EAAE,EAAK,QAAQ,CAAI,GAAE,OAAOA,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAA6C,EAAoB,EAAE,CAACG,UAAU,IAAmC,EAAO,OAAO,CAAvC,EAAoB,IAAqB,I,wOCExd,IAAMwB,EAA0B,OAC1BC,EAAkC,OAGlCC,EAA8B,yBAC9BC,EACX,sCAEWC,EAAsB,gBACtBC,EAA0B,YAC1BC,EAAqB,eACrBC,EAAa,OAEbC,EAAmB,QACnBC,EAAmB,QAGnBC,EAAyB,oBACzBC,EAAqC,0BACrCC,EACX,8BAMWC,EAA2B,IAC3BC,EAA4B,IAE5BC,EAA6B,QAG7BC,EAAiB,QAKjBC,EAAiB,WAgExBC,EAAuB,CAI3BC,OAAQ,SAKRC,sBAAuB,MAIvBC,oBAAqB,MAIrBC,cAAe,iBAIfC,QAAS,WAITC,QAAS,WAITC,WAAY,aAIZC,WAAY,aAIZC,UAAW,aAIXC,gBAAiB,oBAIjBC,gBAAiB,oBAIjBC,aAAc,iBAIdC,aAAc,gBAChB,EAKuB,EACrB,GAAGb,CAAoB,CACvBc,MAAO,CACLC,aAAc,CACZf,EAAqBE,qBAAqB,CAC1CF,EAAqBI,aAAa,CACnC,CACDY,WAAY,CACVhB,EAAqBE,qBAAqB,CAC1CF,EAAqBI,aAAa,CAClCJ,EAAqBQ,UAAU,CAC/BR,EAAqBO,UAAU,CAChC,CACDU,cAAe,CAEbjB,EAAqBK,OAAO,CAC5BL,EAAqBM,OAAO,CAC7B,CACDY,WAAY,CACVlB,EAAqBG,mBAAmB,CACxCH,EAAqBU,eAAe,CACrC,CACDS,QAAS,CACPnB,EAAqBE,qBAAqB,CAC1CF,EAAqBI,aAAa,CAClCJ,EAAqBG,mBAAmB,CACxCH,EAAqBU,eAAe,CACpCV,EAAqBC,MAAM,CAC3BD,EAAqBQ,UAAU,CAC/BR,EAAqBO,UAAU,CAChC,CACDa,SAAU,CAERpB,EAAqBE,qBAAqB,CAC1CF,EAAqBG,mBAAmB,CACxCH,EAAqBU,eAAe,CACpCV,EAAqBI,aAAa,CACnC,AACH,CACF,E,0KC9LaiB,EAA0B,CAACC,EAAaC,KACnD,IAAMC,EAAmBC,IAAAA,UAAe,CAACF,GACrCA,EACAE,IAAAA,IAAS,CAACH,EAAKC,GAGnB,MAF0BG,AAAAA,GAAAA,EAAAA,aAAAA,AAAAA,EAAcF,GAAkBG,QAAQ,EAGpE,C,2UC4DO,SAASC,EACdC,CAAgD,CAChDC,CAA+B,EAK/B,IAAMC,EAAUC,EAAAA,CAAAA,CAAAA,IAAmB,CAACH,EAAIE,OAAO,EAS/C,MAAO,CAAEE,qBANoBC,AADPH,EAAQI,GAAG,CAACnD,EAAAA,EAA2BA,IACd8C,EAAaI,aAAa,CAM1CE,wBAJCL,EAAQM,GAAG,CACzCpD,EAAAA,EAA0CA,CAGW,CACzD,C,4BAEO,IAAMqD,EAA+B,qBAC/BC,EAA6B,sBAI7BC,EAAsBxF,OAAOuF,GAC7BE,EAAyBzF,OAAOsF,GAEtC,SAASI,EACdC,CAAuB,CACvBC,EAEI,CAAC,CAAC,EAEN,GAAIH,KAA0BE,EAC5B,OAAOA,EAGT,GAAM,CAAEE,UAAAA,CAAS,CAAE,CACjBC,EAAQ,mCACJC,EAAWJ,EAAIK,SAAS,CAAC,cAuC/B,OAtCAL,EAAIM,SAAS,CAAC,aAAc,IACtB,AAAoB,UAApB,OAAOF,EACP,CAACA,EAAS,CACV9F,MAAMiG,OAAO,CAACH,GACZA,EACA,EAAE,CACRF,EAAUP,EAA8B,GAAI,CAI1Ca,QAAS,IAAI1G,KAAK,GAClB2G,SAAU,GACVC,SAAmD,OACnDC,OAAQ1E,GACR6C,KAAM,IACN,GAAImB,AAAiBW,SAAjBX,EAAQnB,IAAI,CACX,CAAEA,KAAMmB,EAAQnB,IAAI,AAAC,EACtB8B,MAAS,AACf,GACAV,EAAUN,EAA4B,GAAI,CAIxCY,QAAS,IAAI1G,KAAK,GAClB2G,SAAU,GACVC,SAAmD,OACnDC,OAAQ1E,GACR6C,KAAM,IACN,GAAImB,AAAiBW,SAAjBX,EAAQnB,IAAI,CACX,CAAEA,KAAMmB,EAAQnB,IAAI,AAAC,EACtB8B,MAAS,AACf,GACD,EAED/G,OAAOgH,cAAc,CAACb,EAAKF,EAAwB,CACjDgB,MAAO,GACPC,WAAY,EACd,GACOf,CACT,C,ySC7IO,SAASgB,EACd9B,CAAgD,CAChDc,CAAsC,CACtCC,CAA0B,CAC1BgB,CAA2B,MAiBLC,EACGA,MAwCrBC,EAtDJ,GAAIlB,GAAWhB,AAAAA,GAAAA,EAAAA,yBAAAA,AAAAA,EAA0BC,EAAKe,GAASX,oBAAoB,CACzE,MAAO,GAKT,GAAIO,EAAAA,mBAAmBA,IAAIX,EACzB,OAAQA,CAAW,CAACW,EAAAA,mBAAmBA,CAAC,CAG1C,IAAMT,EAAUC,EAAAA,CAAAA,CAAAA,IAAmB,CAACH,EAAIE,OAAO,EACzC8B,EAAU,IAAIE,EAAAA,EAAcA,CAAChC,GAE7BG,EAAgB,AAAwCI,MAAxCuB,CAAAA,EAAAA,EAAQ1B,GAAG,CAACG,EAAAA,4BAA4BA,GAAAA,KAAAA,EAAxCuB,EAA2CJ,KAAK,CAChEO,EAAmB,AAAsCzB,MAAtCsB,CAAAA,EAAAA,EAAQ1B,GAAG,CAACI,EAAAA,0BAA0BA,GAAAA,KAAAA,EAAtCsB,EAAyCJ,KAAK,CAGvE,GACEvB,GACA,CAAC8B,GACD9B,IAAkBU,EAAQV,aAAa,CACvC,CAIA,IAAM+B,EAAO,CAAC,EAKd,OAJAzH,OAAOgH,cAAc,CAAC3B,EAAKW,EAAAA,mBAAmBA,CAAE,CAC9CiB,MAAOQ,EACPP,WAAY,EACd,GACOO,CACT,CAGA,GAAI,CAAC/B,GAAiB,CAAC8B,EACrB,MAAO,GAIT,GAAI,CAAC9B,GAAiB,CAAC8B,GAQnB9B,IAAkBU,EAAQV,aAAa,CAJzC,OAHI,AAAC0B,GACHlB,AAAAA,GAAAA,EAAAA,gBAAAA,AAAAA,EAAiBC,GAEZ,GAcT,GAAI,CAGFmB,EAAuBI,AADrBpB,EAAQ,mCAC0BqB,MAAM,CACxCH,EACApB,EAAQwB,qBAAqB,CAEjC,CAAE,KAAM,CAGN,MADA1B,AAAAA,GAAAA,EAAAA,gBAAAA,AAAAA,EAAiBC,GACV,EACT,CAEA,GAAM,CAAE0B,kBAAAA,CAAiB,CAAE,CACzBvB,EAAQ,qCACJwB,EAAuBD,EAC3BE,OAAOC,IAAI,CAAC5B,EAAQ6B,wBAAwB,EAC5CX,EAAqBG,IAAI,EAG3B,GAAI,CAEF,IAAMA,EAAO7G,KAAKsH,KAAK,CAACJ,GAMxB,OAJA9H,OAAOgH,cAAc,CAAC3B,EAAKW,EAAAA,mBAAmBA,CAAE,CAC9CiB,MAAOQ,EACPP,WAAY,EACd,GACOO,CACT,CAAE,KAAM,CACN,MAAO,EACT,CACF,C,8JC5GA,IAAMU,EAAmB,cAQlB,SAASC,EAAkBC,CAAc,CAAEZ,CAAY,EAC5D,IAAMa,EAAKC,IAAAA,WAAkB,CAPV,IAQbC,EAAOD,IAAAA,WAAkB,CANV,IASfE,EAAMF,IAAAA,UAAiB,CAC3BF,EACAG,EATsB,IALJ,GAiBlB,UAGIE,EAASH,IAAAA,cAAqB,CAACJ,EAAkBM,EAAKH,GACtDK,EAAYZ,OAAOa,MAAM,CAAC,CAACF,EAAOG,MAAM,CAACpB,EAAM,QAASiB,EAAOI,KAAK,GAAG,EAGvEC,EAAML,EAAOM,UAAU,GAE7B,OAAOjB,OAAOa,MAAM,CAAC,CAKnBJ,EACAF,EACAS,EACAJ,EACD,EAAExD,QAAQ,CAAC,MACd,CAEO,SAAS0C,EACdQ,CAAc,CACdY,CAAqB,EAErB,IAAMC,EAASnB,OAAOC,IAAI,CAACiB,EAAe,OAEpCT,EAAOU,EAAOC,KAAK,CAAC,EAzCL,IA0Cfb,EAAKY,EAAOC,KAAK,CA1CF,GA4CnBC,IAEIL,EAAMG,EAAOC,KAAK,CACtBC,GACAA,IAEIT,EAAYO,EAAOC,KAAK,CAC5BC,IAIIX,EAAMF,IAAAA,UAAiB,CAC3BF,EACAG,EAvDsB,IALJ,GA+DlB,UAGIa,EAAWd,IAAAA,gBAAuB,CAACJ,EAAkBM,EAAKH,GAGhE,OAFAe,EAASC,UAAU,CAACP,GAEbM,EAASR,MAAM,CAACF,GAAaU,EAASP,KAAK,CAAC,OACrD,C,4HCxEO,IAAMS,EAAkB,CAC7BC,WAAYC,AAAAA,IAAAA,UAAa,CACzBC,SAAUD,AAAAA,IAAAA,QAAAA,CAAAA,QAAoB,CAC9BE,aAAcF,AAAAA,IAAAA,YAAe,CAC7BG,UAAW,CAACC,EAAGC,IAAML,IAAAA,QAAAA,CAAAA,SAAqB,CAACI,EAAGC,GAC9CC,MAAO,AAACjF,GAAQ2E,IAAAA,QAAAA,CAAAA,KAAiB,CAAC3E,EAAK,CAAEkF,UAAW,EAAK,GACzDC,KAAM,AAACJ,GAAMJ,IAAAA,QAAAA,CAAAA,IAAgB,CAACI,EAChC,C,8KCJO,OAAMK,UAA6BvI,MACxCwI,aAAc,CACZ,KAAK,CACH,qGAEJ,CAEA,OAAcC,UAAW,CACvB,MAAM,IAAIF,CACZ,CACF,CAUO,MAAM1E,UAAuB6E,QAGlCF,YAAY5E,CAA4B,CAAE,CAGxC,KAAK,GAEL,IAAI,CAACA,OAAO,CAAG,IAAI+E,MAAM/E,EAAS,CAChCI,IAAI4E,CAAM,CAAEC,CAAI,CAAEC,CAAQ,EAIxB,GAAI,AAAgB,UAAhB,OAAOD,EACT,OAAOE,EAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMC,GAG1C,IAAME,EAAaH,EAAKI,WAAW,GAK7BC,EAAW7K,OAAO8K,IAAI,CAACvF,GAASwF,IAAI,CACxC,AAACxJ,GAAMA,EAAEqJ,WAAW,KAAOD,GAI7B,GAAI,AAAoB,SAAbE,EAGX,OAAOH,EAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQM,EAAUJ,EAC9C,EACAO,IAAIT,CAAM,CAAEC,CAAI,CAAEvD,CAAK,CAAEwD,CAAQ,EAC/B,GAAI,AAAgB,UAAhB,OAAOD,EACT,OAAOE,EAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMvD,EAAOwD,GAGjD,IAAME,EAAaH,EAAKI,WAAW,GAK7BC,EAAW7K,OAAO8K,IAAI,CAACvF,GAASwF,IAAI,CACxC,AAACxJ,GAAMA,EAAEqJ,WAAW,KAAOD,GAI7B,OAAOD,EAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQM,GAAYL,EAAMvD,EAAOwD,EAC7D,EACA5E,IAAI0E,CAAM,CAAEC,CAAI,EACd,GAAI,AAAgB,UAAhB,OAAOA,EAAmB,OAAOE,EAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,GAEhE,IAAMG,EAAaH,EAAKI,WAAW,GAK7BC,EAAW7K,OAAO8K,IAAI,CAACvF,GAASwF,IAAI,CACxC,AAACxJ,GAAMA,EAAEqJ,WAAW,KAAOD,UAI7B,AAAwB,SAAbE,GAGJH,EAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQM,EACpC,EACAI,eAAeV,CAAM,CAAEC,CAAI,EACzB,GAAI,AAAgB,UAAhB,OAAOA,EACT,OAAOE,EAAAA,CAAAA,CAAAA,cAA6B,CAACH,EAAQC,GAE/C,IAAMG,EAAaH,EAAKI,WAAW,GAK7BC,EAAW7K,OAAO8K,IAAI,CAACvF,GAASwF,IAAI,CACxC,AAACxJ,GAAMA,EAAEqJ,WAAW,KAAOD,UAI7B,AAAwB,SAAbE,GAGJH,EAAAA,CAAAA,CAAAA,cAA6B,CAACH,EAAQM,EAC/C,CACF,EACF,CAMA,OAAcK,KAAK3F,CAAgB,CAAmB,CACpD,OAAO,IAAI+E,MAAuB/E,EAAS,CACzCI,IAAI4E,CAAM,CAAEC,CAAI,CAAEC,CAAQ,EACxB,OAAQD,GACN,IAAK,SACL,IAAK,SACL,IAAK,MACH,OAAON,EAAqBE,QAAQ,AACtC,SACE,OAAOM,EAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMC,EAC5C,CACF,CACF,EACF,CASQU,MAAMlE,CAAwB,CAAU,QAC9C,AAAIxG,MAAMiG,OAAO,CAACO,GAAeA,EAAMmE,IAAI,CAAC,MAErCnE,CACT,CAQA,OAAce,KAAKzC,CAAsC,CAAW,QAClE,AAAIA,aAAmB8E,QAAgB9E,EAEhC,IAAIC,EAAeD,EAC5B,CAEO8F,OAAOC,CAAY,CAAErE,CAAa,CAAQ,CAC/C,IAAMsE,EAAW,IAAI,CAAChG,OAAO,CAAC+F,EAAK,AAC/B,AAAoB,WAApB,OAAOC,EACT,IAAI,CAAChG,OAAO,CAAC+F,EAAK,CAAG,CAACC,EAAUtE,EAAM,CAC7BxG,MAAMiG,OAAO,CAAC6E,GACvBA,EAASC,IAAI,CAACvE,GAEd,IAAI,CAAC1B,OAAO,CAAC+F,EAAK,CAAGrE,CAEzB,CAEOwE,OAAOH,CAAY,CAAQ,CAChC,OAAO,IAAI,CAAC/F,OAAO,CAAC+F,EAAK,AAC3B,CAEO3F,IAAI2F,CAAY,CAAiB,CACtC,IAAMrE,EAAQ,IAAI,CAAC1B,OAAO,CAAC+F,EAAK,QAChC,AAAI,AAAiB,SAAVrE,EAA8B,IAAI,CAACkE,KAAK,CAAClE,GAE7C,IACT,CAEOpB,IAAIyF,CAAY,CAAW,CAChC,OAAO,AAA8B,SAAvB,IAAI,CAAC/F,OAAO,CAAC+F,EAAK,AAClC,CAEON,IAAIM,CAAY,CAAErE,CAAa,CAAQ,CAC5C,IAAI,CAAC1B,OAAO,CAAC+F,EAAK,CAAGrE,CACvB,CAEOyE,QACLC,CAAkE,CAClEC,CAAa,CACP,CACN,IAAK,GAAM,CAACN,EAAMrE,EAAM,GAAI,IAAI,CAAC4E,OAAO,GACtCF,EAAWG,IAAI,CAACF,EAAS3E,EAAOqE,EAAM,IAAI,CAE9C,CAEA,CAAQO,SAA6C,CACnD,IAAK,IAAMpD,KAAOzI,OAAO8K,IAAI,CAAC,IAAI,CAACvF,OAAO,EAAG,CAC3C,IAAM+F,EAAO7C,EAAImC,WAAW,GAGtB3D,EAAQ,IAAI,CAACtB,GAAG,CAAC2F,EAEvB,MAAM,CAACA,EAAMrE,EAAM,AACrB,CACF,CAEA,CAAQ6D,MAAgC,CACtC,IAAK,IAAMrC,KAAOzI,OAAO8K,IAAI,CAAC,IAAI,CAACvF,OAAO,EAAG,CAC3C,IAAM+F,EAAO7C,EAAImC,WAAW,EAC5B,OAAMU,CACR,CACF,CAEA,CAAQS,QAAkC,CACxC,IAAK,IAAMtD,KAAOzI,OAAO8K,IAAI,CAAC,IAAI,CAACvF,OAAO,EAAG,CAG3C,IAAM0B,EAAQ,IAAI,CAACtB,GAAG,CAAC8C,EAEvB,OAAMxB,CACR,CACF,CAEO,CAACzG,OAAOwL,QAAQ,CAAC,EAAsC,CAC5D,OAAO,IAAI,CAACH,OAAO,EACrB,CACF,C,0GCtOO,OAAMnB,EACX,OAAO/E,IACL4E,CAAS,CACTC,CAAqB,CACrBC,CAAiB,CACZ,CACL,IAAMxD,EAAQgF,QAAQtG,GAAG,CAAC4E,EAAQC,EAAMC,SACxC,AAAI,AAAiB,YAAjB,OAAOxD,EACFA,EAAMiF,IAAI,CAAC3B,GAGbtD,CACT,CAEA,OAAO+D,IACLT,CAAS,CACTC,CAAqB,CACrBvD,CAAU,CACVwD,CAAa,CACJ,CACT,OAAOwB,QAAQjB,GAAG,CAACT,EAAQC,EAAMvD,EAAOwD,EAC1C,CAEA,OAAO5E,IAAsB0E,CAAS,CAAEC,CAAqB,CAAW,CACtE,OAAOyB,QAAQpG,GAAG,CAAC0E,EAAQC,EAC7B,CAEA,OAAOS,eACLV,CAAS,CACTC,CAAqB,CACZ,CACT,OAAOyB,QAAQhB,cAAc,CAACV,EAAQC,EACxC,CACF,C,iQCpBA2B,EAAO,OAAO,CAHL7F,EAAQ,O,oECMjB6F,EAAO,OAAO,CARqB,CACjC,YACA,UACA,aACA,WACA,YACD,A,24BCdghY,IAAI7K,CAAlF,AAA6B,cAA7B,OAAOT,qBAAkCA,CAAAA,oBAAoB,EAAE,CAACC,UAAU,GAAE,EAAW,AAA9gY,EAAC,IAAI,SAASC,CAAC,CAACO,CAAC,EAAsB,AAAe,UAASP,CAAC,EAAE,YAAa,OAAM,UAAoBC,UAAU,YAAYD,CAAC,CAACO,CAAC,CAAC,CAAO,IAAF,EAAO,CAAC,QAAQ,CAAC,CAAC,YAAYE,CAAC,CAAC,GAAG,EAAE,CAACT,EAAO,CAAC,KAAK,CAAC,CAAC,CAACA,EAAQ,EAAE,AAAW,IAAX,EAAE,MAAM,CAAK,EAAE,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC,KAAK,CAACS,GAAG,GAAMA,AAAG,MAAHA,GAAQ,KAAI,CAAC,KAAK,CAAC,GAAExB,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAI,GAAE,CAACe,KAAKO,IAAI,AAAD,CAAE,CAAC,CAAmF,SAAS,EAASP,CAAC,EAAE,MAAO,AAAW,UAAX,OAAOA,GAAcA,AAAG,MAAHA,CAAO,CAAC,SAAS,EAAcA,CAAC,EAAE,GAAGf,AAAoC,oBAApCA,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAACe,GAAwB,MAAO,GAAM,IAAMO,EAAEtB,OAAO,cAAc,CAACe,GAAG,OAAOO,AAAI,OAAJA,GAAUA,IAAItB,OAAO,SAAS,CAAC,SAAS,EAAMe,CAAC,QAAE,AAAG,AAAW,UAAX,OAAOA,EAAqBA,EAAE,QAAQ,GAAU,AAAW,UAAX,OAAOA,EAAaH,KAAK,SAAS,CAACG,GAAG,CAAC,EAAEA,EAAE,CAAC,CAAsc,SAAS,EAAWA,CAAC,CAACO,CAAC,CAACZ,CAAC,CAAC,CAAC,MAAj3B,EAA44B,IAAI,IAAM,KAAhC,AAA52B,EAAV,EAAk4BK,IAA32B,AAA4B,YAA5B,OAAO,CAAC,CAACP,OAAO,QAAQ,CAAC,EAAs1BO,CAAAA,EAAE,CAACA,EAAE,AAAD,EAAiBA,GAAE,CAAC,IAAMA,EAAE,AAAvc,SAAmBA,CAAC,CAACO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAGP,AAAI,KAAJA,EAAU,MAAeA,AAAI,MAAJA,EAAWA,EAAE,CAAC,EAAU,AAAW,UAAX,OAAOA,GAAcA,CAAAA,EAAE,CAAC,QAAQA,CAAC,GAAE,GAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAACO,EAAO,CAAC,KAAKC,CAAC,CAAC,CAAC,EAAO,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,CAAC,2BAA2B,EAAEA,EAAE,EAAE,EAAE,EAAE,CAAC,mBAAmB,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,kBAAkB,EAAE,EAAM,GAAG,EAAE,CAAC,CAAC,CAACR,EAAE,MAAM,CAAC,MAAM,EAAE,KAAKQ,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,GAAGR,CAAC,CAAC,QAAQ,CAAC,CAAC,EAA2F,EAAEO,EAAEZ,EAAE,EAAMK,CAAAA,GAAG,OAAMA,CAAAA,CAAE,CAAC,CAAC,SAAS,EAAIA,CAAC,CAACO,CAAC,CAACZ,EAAE,CAAC,CAAC,EAAE,GAAK,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,EAAE,CAACK,EAAE,CAAC,OAAO,EAAE,EAAK,CAAC,KAAK,EAAE,EAAK,CAAC,CAACL,EAAQ,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,GAAG,IAAGK,EAAEO,EAAE,OAAO,CAACP,EAAE,GAAM,GAAGO,AAAS,SAATA,EAAE,IAAI,EAAW,EAASA,EAAE,MAAM,GAAG,EAASP,IAAI,CAACN,MAAM,OAAO,CAACM,IAAI,IAAI,IAAM,KAAKA,EAAMO,AAAc,SAAdA,EAAE,MAAM,CAAC,EAAE,EAAc,OAAOP,CAAC,CAAC,EAAE,CAAI,IAAI,EAAE,QAAQ,IAAI,IAAMJ,KAAKW,EAAE,SAAS,CAACP,EAAE,GAAIJ,EAAE,WAAW,CAACD,EAAE,OAAO,CAAC,EAAE,YAAY,KAAK,CAACC,EAAE,OAAU,CAAC,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,GAAGW,EAAE,OAAO,CAACP,EAAE,GAAuH,IAAI,IAAM,KAArH,EAAI,EAAE,EAAE,CAAC,KAAK,AAAI,SAAJ,EAAc,EAAE,IAAI,EAAE,EAAE,CAAC,OAAO,AAAI,SAAJ,EAAc,EAAE,IAAI,EAAE,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQL,EAAE,OAAO,GAAwB,CAAC,CAAC,EAAE,EAAE,EAAE,AAAiB,MAAjB,CAAC,CAAC,EAAE,CAAC,UAAU,CAAO,cAAc,YAAY,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAU,EAAS,IAAG,EAAE,CAAC,CAAC,EAAE,CAAI,AAAI,SAAJ,EAAeK,EAAE,EAAUA,aAAaX,IAAKW,EAAE,GAAG,CAAC,EAAE,GAAWA,aAAaqL,IAAKrL,EAAE,GAAG,CAAC,GAAW,EAASA,IAAO,CAAI,SAAJ,GAAe,KAAKA,CAAAA,GAAEA,CAAAA,CAAC,CAAC,EAAE,CAAC,IAAK,GAAG,AAAI,cAAJ,EAAiB,IAAI,IAAMJ,KAAKW,EAAE,OAAO,CAACP,EAAE,GAAIJ,EAAE,WAAW,CAACD,EAAE,OAAO,CAAC,EAAE,cAAc,KAAK,CAACC,EAAE,OAAU,AAAK,AAAI,WAAJ,GAAa,MAAK,CAAC,OAAUI,EAAE,AAAD,CAAE,CAAC,MAAM,EAAO,YAAYA,CAAC,CAAC,CAAC,GAAK,CAAC,KAAKO,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,QAAQE,CAAC,CAAC,QAAQ,EAAGT,GAAGA,CAAE,CAAC,QAAQQ,EAAE,YAAY,CAAC,CAAC,CAACR,CAAE,KAAI,CAAC,IAAI,CAACO,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAACC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAK,EAAG,IAAI,CAAC,SAAS,CAAC,CAACR,EAAEO,IAA2B,EAAd,EAAEP,EAAEO,GAAuBA,EAAE,IAAI,CAACP,GAAS,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAIS,EAAG,IAAI,CAAC,OAAO,CAAC,CAACT,EAAEO,IAA2B,EAAdE,EAAET,EAAEO,GAAuBA,EAAE,IAAI,CAACP,GAAS,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,AAAC,CAAC,OAAOA,CAAC,CAACO,CAAC,CAAC,CAAC,OAAO,EAAOP,EAAE,IAAI,CAACO,EAAE,CAAC,OAAOP,CAAC,CAACO,CAAC,CAAC,CAAC,OAAO+K,EAAOtL,EAAE,IAAI,CAACO,EAAE,CAAC,GAAGP,CAAC,CAAC,CAAC,OAAO,EAAGA,EAAE,IAAI,CAAC,CAAC,KAAKA,CAAC,CAACO,CAAC,CAAC,CAAC,OAAO,EAAKP,EAAE,IAAI,CAACO,EAAE,CAAC,SAASP,CAAC,CAACO,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,EAASP,EAAE,IAAI,CAACO,EAAE,CAAC,CAAC,SAAS,EAAOP,CAAC,CAACO,CAAC,CAAC,CAAC,EAAE,IAAM,EAAE,EAASP,EAAEO,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAE,MAAM,CAAC,CAAC,EAAE,AAAC,CAAC,SAAS+K,EAAOtL,CAAC,CAACO,CAAC,CAAC,CAAC,EAAE,IAAM,EAAE,EAASP,EAAEO,EAAE,CAAC,OAAO,GAAK,QAAQ,CAAC,GAAG,IAAG,CAAC,CAAC,EAAE,CAAkB,OAAO,CAAC,CAAC,EAAE,AAA3B,OAAM,CAAC,CAAC,EAAE,AAAkB,CAAC,SAAS,EAAKP,CAAC,CAACO,CAAC,CAAC,CAAC,EAAE,IAAM,EAAE,EAASP,EAAEO,EAAE,CAAC,OAAO,GAAK,KAAK,GAAK,QAAQ,CAAC,GAAG,IAAG,CAAC,CAAC,EAAE,CAAkB,OAAO,CAAC,CAAC,EAAE,AAA3B,OAAM,CAAC,CAAC,EAAE,AAAkB,CAAC,SAAS,EAAGP,CAAC,CAACO,CAAC,EAAwB,MAAM,CAAC,AAArB,EAASP,EAAEO,EAAW,CAAC,EAAE,CAAC,SAAS,EAASP,CAAC,CAAC,CAAC,CAACL,EAAE,CAAC,CAAC,EAAE,IAAM,EAAE,EAAIK,EAAE,EAAEL,GAAS,EAAE,AAAr5E,SAAuBK,CAAC,EAAE,GAAK,CAAC,KAAKO,CAAC,CAAC,MAAM,CAAC,CAAC,CAACP,EAAE,IAAI,GAAG,OAAOO,EAAE,OAAU,CAAC,EAAs1E,UAAG,AAAG,CAAC,CAAC,EAAE,CAA6F,CAAnF,IAAI,EAAY,CAAC,CAAC,EAAE,CAAE,YAAY,IAAI,IAAMP,KAAK,EAAMA,CAAC,CAAC,EAAE,EAAE,OAAMA,CAAC,CAAC,EAAE,AAAD,CAAG,GAAa,OAAU,CAAyB,CAAC,OAAZ,CAAC,CAAC,EAAE,CAAoB,AAAC,CAAyI,SAAS,EAAOA,CAAC,CAACO,CAAC,EAAE,OAAO,IAAI,EAAO,CAAC,KAAKP,EAAE,OAAO,KAAK,UAAUO,CAAC,EAAE,CAAspG,SAAS,IAAQ,OAAO,EAAO,QAAS,IAAI,GAAO,CAAkQ,SAAS,EAAOP,CAAC,EAAE,IAAMO,EAAEP,EAAEf,OAAO,IAAI,CAACe,GAAG,EAAE,CAAOL,EAAE,IAAQ,OAAO,IAAI,EAAO,CAAC,KAAK,SAAS,OAAOK,GAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,GAAGA,GAAG,EAAS,GAAG,CAAC,IAAM,EAAE,IAAIqL,IAAIpM,OAAO,IAAI,CAAC,IAAI,IAAI,IAAMU,KAAKY,EAAG,EAAE,MAAM,CAACZ,GAAG,KAAK,CAACA,EAAE,CAAC,CAACA,EAAE,CAACK,CAAC,CAACL,EAAE,CAAC,CAAC,IAAI,IAAMK,KAAK,EAAG,KAAK,CAACA,EAAE,CAAC,CAACA,EAAE,CAACL,EAAE,AAAC,CAAC,EAAE,UAAUK,GAAU,EAASA,IAAI,CAAC,kCAAkC,EAAE,EAAMA,GAAG,CAAC,CAAE,QAAQA,GAAU,EAASA,GAAG,CAAC,GAAGA,CAAC,EAAEA,CAAE,EAAE,CAAC,SAAS,EAASA,CAAC,EAAE,OAAO,IAAI,EAAO,CAAC,GAAGA,CAAC,CAAC,UAAU,CAACO,EAAE,IAAIA,AAAI,SAAJA,GAAeP,EAAE,SAAS,CAACO,EAAE,GAAG,QAAQ,CAACA,EAAE,IAAIA,AAAI,SAAJA,GAAeP,EAAE,OAAO,CAACO,EAAE,EAAE,EAAE,CAAmkB,SAAS,IAAS,OAAO,EAAO,SAAUP,GAAG,AAAW,UAAX,OAAOA,GAAc,CAAC,iCAAiC,EAAE,EAAMA,GAAG,CAAC,CAAE,CAA0R,SAAS,EAAKA,CAAC,EAAE,IAAMO,EAAEtB,OAAO,IAAI,CAACe,GAAG,OAAO,IAAI,EAAO,CAAC,KAAK,OAAO,OAAOA,EAAE,CAAC,QAAQL,CAAC,EAAE,GAAG,EAASA,GAAI,IAAI,IAAMC,KAAKW,EAAG,KAAK,CAACX,EAAED,CAAC,CAACC,EAAE,CAACI,CAAC,CAACJ,EAAE,CAAC,AAAE,EAAE,UAAUI,GAAU,EAASA,IAAI,CAAC,kCAAkC,EAAE,EAAMA,GAAG,CAAC,CAAE,QAAQA,GAAU,EAASA,GAAG,CAAC,GAAGA,CAAC,EAAEA,CAAE,EAAE,CAA+a,SAAS,IAAU,OAAO,EAAO,UAAW,IAAI,GAAM,CAAC,SAAS,EAAOA,CAAC,CAACO,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,EAAO,CAAC,GAAGP,CAAC,CAAC,QAAQ,CAAC,EAAES,IAAI,EAAG,EAAEF,GAAGP,EAAE,OAAO,CAAC,EAAE,EAAES,GAAGA,GAAGT,EAAE,OAAO,CAAC,EAAES,EAAE,EAAE,CAAof,SAAS,EAAQT,CAAC,SAAE,AAAGA,aAAaX,KAAKW,aAAaqL,IAAYrL,EAAE,IAAI,CAAaA,EAAE,MAAM,AAAC,CAAylC,SAAS,EAAOA,CAAC,CAACO,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,EAAO,CAAC,GAAGP,CAAC,CAAC,CAAC,QAAQ,CAAC,CAACS,CAAC,EAAkE,IAAI,IAAM,KAA1E,MAAMT,EAAE,OAAO,CAAC,EAAES,GAA0B,EAAf,EAAE,EAAEA,GAAwBA,EAAET,EAAE,IAAqB,KAAK,CAAC,GAAG,CAAC,CAAC,WAAWO,CAAC,CAAE,CAAC,EAAE,CAACP,EAAE,MAAM,CAAC,EAAOA,EAAE,WAAW,CAAC,EAAYA,EAAE,GAAG,CAAr9M,WAAe,OAAO,EAAO,MAAO,IAAI,GAAM,EAA46MA,EAAE,KAAK,CAAl7M,SAAeA,CAAC,EAAE,OAAO,IAAI,EAAO,CAAC,KAAK,QAAQ,OAAOA,EAAE,CAAC,QAAQO,CAAC,EAAE,GAAGP,GAAGN,MAAM,OAAO,CAACa,GAAI,IAAI,GAAK,CAAC,EAAE,EAAE,GAAGA,EAAE,OAAO,GAAI,KAAK,CAAC,EAAE,EAAEP,EAAE,AAAE,EAAE,QAAQA,GAAUN,MAAM,OAAO,CAACM,GAAGA,EAAE,KAAK,GAAGA,EAAG,UAAUA,GAAUN,MAAM,OAAO,CAACM,IAAI,CAAC,uCAAuC,EAAE,EAAMA,GAAG,CAAC,AAAC,EAAE,EAA+pMA,EAAE,MAAM,CAAC,EAAOA,EAAE,MAAM,CAAv4P,SAAgB,GAAGA,CAAC,EAAE,IAAMO,EAAEP,AAAY,SAAZA,CAAC,CAAC,EAAE,CAAC,IAAI,CAA6CJ,EAAEX,OAAO,MAAM,CAAC,CAAC,KAA5Ce,EAAE,GAAG,CAAEA,GAAGA,EAAE,MAAM,GAAkC,OAAOO,EAAE,EAAKX,GAAG,EAAOA,EAAE,EAAwwPI,EAAE,MAAM,CAAtsM,WAAkB,OAAO,EAAO,SAAUA,GAAG,AAAW,UAAX,OAAOA,EAAc,EAA4oMA,EAAE,OAAO,CAAppM,WAAmB,OAAO,EAAO,UAAWA,GAAG,AAAW,WAAX,OAAOA,EAAe,EAAwlMA,EAAE,MAAM,CAAC,EAAOA,EAAE,MAAM,CAACsL,EAAOtL,EAAE,IAAI,CAA7nM,WAAgB,OAAO,EAAO,OAAQA,GAAGA,aAAad,MAAM,CAACkB,MAAMJ,EAAE,OAAO,KAAK,CAAC,gDAAgD,EAAE,EAAMA,GAAG,CAAC,CAAE,EAAm/LA,EAAE,SAAS,CAAjhE,SAAmBA,CAAC,CAACO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAOP,EAAE,IAAWA,IAAI,IAAM,EAAE,AAAW,YAAX,OAAOO,EAAeA,IAAIA,EAAE,GAAGP,AAAI,SAAJA,EAAe,OAAO,EAAE,GAAG,CAAC,EAAE,MAAM,EAAE,EAAcA,IAAI,EAAc,GAAG,CAAC,IAAMO,EAAE,CAAC,GAAGP,CAAC,EAAM,EAAE,GAAM,IAAI,IAAMA,KAAK,EAAa,SAAPO,CAAC,CAACP,EAAE,GAAcO,CAAC,CAACP,EAAE,CAAC,CAAC,CAACA,EAAE,CAAC,EAAE,IAAM,GAAG,EAAG,OAAOO,CAAE,CAAC,OAAOP,CAAC,EAAG,EAAgwDA,EAAE,MAAM,CAAC,EAAOA,EAAE,UAAU,CAA9zP,SAAoBA,CAAC,CAACO,CAAC,EAAE,OAAO,IAAI,EAAO,CAAC,GAAGP,CAAC,CAAC,QAAQ,CAACO,EAAE,IAAIA,AAAI,SAAJA,GAAeP,EAAE,OAAO,CAACO,EAAE,GAAG,WAAU,EAAE,IAAG,AAAO,SAAJ,IAAgCA,EAAE,EAAE,GAAUP,EAAE,SAAS,CAAC,EAAE,GAAI,EAAE,EAAwpPA,EAAE,OAAO,CAAhqP,SAAiBA,CAAC,EAAE,OAAO,IAAI,EAAO,CAAC,KAAK,UAAU,OAAO,KAAK,CAAC,QAAQO,CAAC,CAAC,CAAC,EAAE,IAAM,EAAEP,EAAEO,EAAE,EAAG,OAAM,EAAE,OAAO,CAACA,EAAE,EAAE,EAAE,WAAUA,EAAE,IAAyB,AAAdP,EAAEO,EAAE,GAAY,SAAS,CAACA,EAAE,GAAI,SAAQA,EAAE,IAAyB,AAAdP,EAAEO,EAAE,GAAY,OAAO,CAACA,EAAE,GAAI,SAAQA,EAAE,IAAyB,AAAdP,EAAEO,EAAE,GAAY,OAAO,CAACA,EAAE,EAAG,EAAE,EAAs5OP,EAAE,KAAK,CAApwD,SAAeA,CAAC,EAAE,OAAO,EAAOA,EAAE,QAASO,IAAI,IAAM,EAAE,EAAQA,GAAG,OAAO,AAAI,IAAJ,GAAO,CAAC,kBAAkB,EAAEP,EAAE,IAAI,CAAC,mCAAmC,EAAE,EAAE,EAAE,CAAC,EAAG,EAAknDA,EAAE,KAAK,CAAvlM,SAAeA,CAAC,EAAE,IAAMO,EAAE,CAAC,EAAQ,EAAEP,EAAE,GAAG,CAAEA,GAAG,EAAMA,IAAK,IAAI,GAAG,IAAI,IAAM,KAAKA,EAAGO,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,IAAI,EAAO,CAAC,KAAK,QAAQ,OAAOA,EAAE,UAAUA,GAAUP,EAAE,QAAQ,CAACO,IAAI,CAAC,kBAAkB,EAAE,EAAE,kBAAkB,EAAE,EAAMA,GAAG,CAAC,AAAC,EAAE,EAAg4LP,EAAE,IAAI,CAAr4L,WAAgB,OAAO,EAAO,OAAQA,GAAG,AAAW,YAAX,OAAOA,GAAgB,CAAC,mCAAmC,EAAE,EAAMA,GAAG,CAAC,CAAE,EAAyxLA,EAAE,QAAQ,CAAlyL,SAAkBA,CAAC,EAAE,OAAO,EAAO,WAAYO,GAAGA,aAAaP,GAAG,CAAC,aAAa,EAAEA,EAAE,IAAI,CAAC,2BAA2B,EAAE,EAAMO,GAAG,CAAC,CAAE,EAA0qLP,EAAE,OAAO,CAAlrL,WAAmB,OAAO,EAAO,UAAWA,GAAG,AAAW,UAAX,OAAOA,GAAc,CAACI,MAAMJ,IAAIR,OAAO,SAAS,CAACQ,IAAI,CAAC,mCAAmC,EAAE,EAAMA,GAAG,CAAC,CAAE,EAAqiLA,EAAE,YAAY,CAAljL,SAAsBA,CAAC,EAAE,OAAO,IAAI,EAAO,CAAC,KAAK,eAAe,OAAO,KAAK,CAAC,QAAQO,CAAC,CAAC,CAAC,EAAE,IAAI,IAAM,KAAKP,EAAG,MAAM,EAAE,OAAO,CAACO,EAAE,EAAG,EAAE,CAAC,UAAUA,CAAC,CAAC,CAAC,EAAE,IAAI,IAAM,KAAKP,EAAG,MAAM,EAAE,SAAS,CAACO,EAAE,EAAG,EAAE,CAAC,QAAQA,CAAC,CAAC,CAAC,EAAE,IAAI,IAAM,KAAKP,EAAG,MAAM,EAAE,OAAO,CAACO,EAAE,EAAG,CAAC,EAAE,EAA00KP,EAAE,EAAE,CAAC,EAAGA,EAAE,IAAI,CAA7gP,SAAcA,CAAC,EAAE,IAAIO,EAAE,OAAO,IAAI,EAAO,CAAC,KAAK,OAAO,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAEA,GAAIA,CAAAA,EAAEP,GAAE,EAAG,MAAMO,EAAE,OAAO,CAAC,EAAE,EAAE,EAAE,WAAU,EAAE,KAAGA,GAAIA,CAAAA,EAAEP,GAAE,EAAUO,EAAE,SAAS,CAAC,EAAE,IAAI,SAAQ,EAAE,KAAGA,GAAIA,CAAAA,EAAEP,GAAE,EAAUO,EAAE,OAAO,CAAC,EAAE,IAAI,SAAQ,EAAE,KAAGA,GAAIA,CAAAA,EAAEP,GAAE,EAAUO,EAAE,OAAO,CAAC,EAAE,GAAG,EAAE,EAAgxOP,EAAE,OAAO,CAAt2K,SAAiBA,CAAC,EAAE,IAAMO,EAAE,EAAMP,GAAS,EAAE,OAAOA,EAAE,OAAO,IAAI,EAAO,CAAC,KAAK,UAAU,OAAO,AAAI,WAAJ,GAAc,AAAI,WAAJ,GAAc,AAAI,YAAJ,EAAcA,EAAE,KAAK,UAAU,GAAU,IAAIA,GAAG,CAAC,uBAAuB,EAAEO,EAAE,kBAAkB,EAAE,EAAM,GAAG,CAAC,AAAC,EAAE,EAAuoKP,EAAE,GAAG,CAA3oK,SAAaA,CAAC,CAACO,CAAC,EAAE,OAAO,IAAI,EAAO,CAAC,KAAK,MAAM,OAAO,KAAK,CAAC,QAAQ,CAAC,EAAE,GAAGP,GAAGO,GAAG,aAAalB,IAAK,IAAI,GAAK,CAAC,EAAEoB,EAAE,GAAG,EAAE,OAAO,GAAI,KAAK,CAAC,EAAE,EAAET,EAAE,CAAC,KAAK,CAAC,EAAES,EAAEF,EAAE,AAAE,EAAE,QAAQP,GAAUA,aAAaX,IAAI,IAAIA,IAAIW,GAAGA,EAAG,UAAUA,GAAUA,aAAaX,KAAK,CAAC,yCAAyC,EAAE,EAAMW,GAAG,CAAC,AAAC,EAAE,EAAk2JA,EAAE,IAAI,CAAC,EAAKA,EAAE,GAAG,CAA/qD,SAAaA,CAAC,CAACO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,OAAO,EAAOP,EAAE,MAAO,GAAG,EAAE,EAAEO,EAAE,GAAGA,GAAG,CAAC,WAAW,EAAEP,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,GAAG,eAAe,EAAEO,EAAE,gBAAgB,EAAE,EAAE,EAAE,CAAC,CAAE,EAA+gDP,EAAE,GAAG,CAAnhD,SAAaA,CAAC,CAACO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,OAAO,EAAOP,EAAE,MAAO,GAAG,EAAE,EAAEO,EAAE,GAAGA,GAAG,CAAC,WAAW,EAAEP,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,GAAG,eAAe,EAAEO,EAAE,gBAAgB,EAAE,EAAE,EAAE,CAAC,CAAE,EAAg3CP,EAAE,KAAK,CAAC,EAAMA,EAAE,QAAQ,CAAv4C,SAAkBA,CAAC,EAAE,OAAO,EAAOA,EAAE,WAAYO,GAA8B,AAAlB,EAAQA,GAAY,GAAG,CAAC,oBAAoB,EAAEP,EAAE,IAAI,CAAC,0BAA0B,CAAC,CAAG,EAAiwCA,EAAE,QAAQ,CAAz3J,SAAkBA,CAAC,EAAE,OAAO,IAAI,EAAO,CAAC,GAAGA,CAAC,CAAC,UAAU,CAACO,EAAE,IAAIA,AAAI,OAAJA,GAAUP,EAAE,SAAS,CAACO,EAAE,GAAG,QAAQ,CAACA,EAAE,IAAIA,AAAI,OAAJA,GAAUP,EAAE,OAAO,CAACO,EAAE,EAAE,EAAE,EAAiwJP,EAAE,MAAM,CAAxwJ,WAAkB,OAAO,EAAO,SAAUA,GAAG,AAAW,UAAX,OAAOA,GAAc,CAACI,MAAMJ,IAAI,CAAC,iCAAiC,EAAE,EAAMA,GAAG,CAAC,CAAE,EAAmpJA,EAAE,MAAM,CAAC,EAAOA,EAAE,IAAI,CAAv6O,SAAcA,CAAC,CAACO,CAAC,EAAE,GAAK,CAAC,OAAO,CAAC,CAAC,CAACP,EAAQ,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,IAAMA,KAAKO,EAAG,OAAO,CAAC,CAACP,EAAE,OAAC,AAAmB,SAAZA,EAAE,IAAI,CAAoB,EAAK,GAAkB,EAAO,EAAG,EAAyxOA,EAAE,QAAQ,CAAC,EAASA,EAAE,OAAO,CAArzO,SAAiBA,CAAC,EAAE,IAAMO,EAAEP,aAAa,EAAO,CAAC,GAAGA,EAAE,MAAM,EAAE,CAAC,GAAGA,CAAC,EAAE,IAAI,IAAMA,KAAKO,EAAGA,CAAC,CAACP,EAAE,CAAC,EAASO,CAAC,CAACP,EAAE,EAAE,OAAO,EAAOO,EAAE,EAAmsOP,EAAE,OAAO,CAA/2C,SAAiBA,CAAC,CAACO,CAAC,EAAE,OAAO,EAAOP,EAAE,UAAW,GAAGO,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAEP,EAAE,IAAI,CAAC,aAAa,EAAEO,EAAE,MAAM,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAE,EAAkvCP,EAAE,IAAI,CAA1tO,SAAcA,CAAC,CAACO,CAAC,EAAE,GAAK,CAAC,OAAO,CAAC,CAAC,CAACP,EAAQ,EAAE,CAAC,EAAE,IAAI,IAAMA,KAAKO,EAAG,CAAC,CAACP,EAAE,CAAC,CAAC,CAACA,EAAE,CAAC,OAAO,EAAO,EAAE,EAAooOA,EAAE,MAAM,CAA5uI,SAAgBA,CAAC,CAACO,CAAC,EAAE,OAAO,IAAI,EAAO,CAAC,KAAK,SAAS,OAAO,KAAK,CAAC,QAAQZ,CAAC,EAAE,GAAG,EAASA,GAAI,IAAI,IAAMC,KAAKD,EAAE,CAAC,IAAMc,EAAEd,CAAC,CAACC,EAAE,AAAC,MAAK,CAACA,EAAEA,EAAEI,EAAE,CAAC,KAAK,CAACJ,EAAEa,EAAEF,EAAE,CAAE,EAAE,UAAUP,GAAU,EAASA,IAAI,CAAC,kCAAkC,EAAE,EAAMA,GAAG,CAAC,AAAC,EAAE,EAAugIA,EAAE,MAAM,CAAC,EAAOA,EAAE,MAAM,CAA9hI,WAAkB,OAAO,EAAO,SAAUA,GAAGA,aAAaiB,OAAQ,EAAo+HjB,EAAE,GAAG,CAAx+H,SAAaA,CAAC,EAAE,OAAO,IAAI,EAAO,CAAC,KAAK,MAAM,OAAO,KAAK,CAAC,QAAQO,CAAC,EAAE,GAAGP,GAAGO,aAAa8K,IAAK,IAAI,IAAM,KAAK9K,EAAG,KAAK,CAAC,EAAE,EAAEP,EAAE,AAAE,EAAE,QAAQA,GAAUA,aAAaqL,IAAI,IAAIA,IAAIrL,GAAGA,EAAG,UAAUA,GAAUA,aAAaqL,KAAK,CAAC,yCAAyC,EAAE,EAAMrL,GAAG,CAAC,AAAC,EAAE,EAA6tHA,EAAE,IAAI,CAA7zC,SAAcA,CAAC,CAACO,CAAC,CAAC,EAAEA,CAAC,EAAE,IAAM,EAAE,CAAC,WAAW,EAAEP,EAAE,IAAI,CAAC,CAAC,CAAOS,EAAEF,IAAI,EAAE,CAAC,KAAK,EAAEA,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,EAAEA,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,EAAOP,EAAE,OAAQA,IAAI,GAAG,AAAW,UAAX,OAAOA,GAAcA,aAAad,KAAM,OAAOqB,GAAGP,GAAGA,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,EAAES,EAAE,gBAAgB,EAAET,EAAE,EAAE,CAAC,CAAM,GAAGA,aAAaX,KAAKW,aAAaqL,IAAI,CAAC,GAAK,CAAC,KAAK,CAAC,CAAC,CAACrL,EAAE,OAAOO,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,aAAa,EAAEE,EAAE,mCAAmC,EAAE,EAAE,EAAE,CAAC,CAAK,CAAC,GAAK,CAAC,OAAO,CAAC,CAAC,CAACT,EAAE,OAAOO,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,eAAe,EAAEE,EAAE,qCAAqC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAG,EAAm1BT,EAAE,MAAM,CAAC,EAAOA,EAAE,MAAM,CAAjuO,SAAgBA,CAAC,CAACO,CAAC,EAAuF,OAArFe,QAAQ,IAAI,CAAC,wEAA+E,EAAOtB,EAAEO,EAAE,EAA6mOP,EAAE,OAAO,CAAxwE,SAAiBA,CAAC,EAAE,OAAO,EAAOA,EAAE,IAAUA,GAAGA,EAAE,IAAI,GAAI,EAAstEA,EAAE,KAAK,CAA9qH,SAAeA,CAAC,EAAE,IAAMO,EAAE,IAAQ,OAAO,IAAI,EAAO,CAAC,KAAK,QAAQ,OAAO,KAAK,CAAC,QAAQ,CAAC,EAAE,GAAGb,MAAM,OAAO,CAAC,GAAG,CAAC,IAAM,EAAEY,KAAK,GAAG,CAACN,EAAE,MAAM,CAAC,EAAE,MAAM,EAAE,IAAI,IAAIS,EAAE,EAAEA,EAAE,EAAEA,IAAK,KAAK,CAACA,EAAE,CAAC,CAACA,EAAE,CAACT,CAAC,CAACS,EAAE,EAAEF,EAAE,AAAC,CAAC,EAAE,UAAUP,GAAUN,MAAM,OAAO,CAACM,IAAI,CAAC,iCAAiC,EAAE,EAAMA,GAAG,CAAC,AAAC,EAAE,EAA65GA,EAAE,IAAI,CAAC,EAAKA,EAAE,KAAK,CAA/pG,SAAeA,CAAC,EAAE,IAAMO,EAAEP,EAAE,GAAG,CAAEA,GAAGA,EAAE,IAAI,EAAG,IAAI,CAAC,OAAO,OAAO,IAAI,EAAO,CAAC,KAAK,QAAQ,OAAO,KAAK,QAAQO,CAAC,EAAE,IAAI,IAAM,KAAKP,EAAE,CAAC,GAAK,CAACA,EAAE,EAAE,CAAC,EAAE,QAAQ,CAACO,EAAE,CAAC,OAAO,EAAI,GAAG,GAAG,CAACP,EAAG,OAAO,CAAE,CAAC,OAAOO,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,IAAM,EAAE,EAAE,CAAC,IAAI,IAAMA,KAAKP,EAAE,CAAC,GAAK,CAAC,GAAGA,EAAE,CAAC,EAAI,EAAEO,EAAE,GAAQ,CAAC,EAAE,CAACP,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAE,MAAM,EAAE,CAAM,IAAI,GAAK,CAACO,EAAE,GAAGP,EAAMO,GAAG,EAAE,IAAI,CAACA,EAAK,CAAC,MAAM,CAAC,CAAC,2CAA2C,EAAEA,EAAE,kBAAkB,EAAE,EAAM,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,EAAyvFP,EAAE,OAAO,CAAC,EAAQA,EAAE,QAAQ,CAAC,CAAQ,GAAr4XO,EAAw4X,CAAC,EAA6F,CAAC,IAAI,CAAC,EAAZA,EAAE,CAAC,GAAc,EAAO,OAAO,CAACA,C,6HCCrjY,EAAoB,CAAC,CAAG,AAAC,IACxB,IAAI,EAAS,GAAU,EAAO,UAAU,CACvC,IAAO,EAAO,OAAU,CACxB,IAAO,EAER,OADA,EAAoB,CAAC,CAAC,EAAQ,CAAE,EAAG,CAAO,GACnC,CACR,E,MCPA,IACI,EADA,EAAWtB,OAAO,cAAc,CAAG,AAAC,GAASA,OAAO,cAAc,CAAC,GAAQ,AAAC,GAAS,EAAI,SAAS,AAQtG,GAAoB,CAAC,CAAG,SAAS,CAAK,CAAE,CAAI,EAE3C,GADG,AAAO,EAAP,GAAU,GAAQ,IAAI,CAAC,EAAK,EACrB,EAAP,GACA,AAAiB,UAAjB,OAAO,GAAsB,IACpB,EAAP,GAAa,EAAM,UAAU,EAC9B,AAAQ,GAAP,GAAc,AAAsB,YAAtB,OAAO,EAAM,IAAI,EAHvB,OAAO,EAKpB,IAAI,EAAKA,OAAO,MAAM,CAAC,MACtB,EAAoB,CAAC,CAAC,GACvB,IAAI,EAAM,CAAC,EACX,EAAiB,GAAkB,CAAC,KAAM,EAAS,CAAC,GAAI,EAAS,EAAE,EAAG,EAAS,GAAU,CACzF,IAAI,IAAI,EAAU,AAAO,EAAP,GAAY,EAAO,AAAkB,UAAlB,OAAO,GAAuB,CAAC,CAAC,EAAe,OAAO,CAAC,GAAU,EAAU,EAAS,GACxHA,OAAO,mBAAmB,CAAC,GAAS,OAAO,CAAC,AAAC,IAAU,CAAG,CAAC,EAAI,CAAG,IAAO,CAAK,CAAC,EAAI,AAAE,GAItF,OAFA,EAAI,OAAU,CAAG,IAAO,EACxB,EAAoB,CAAC,CAAC,EAAI,GACnB,CACR,C,KCzBA,EAAoB,CAAC,CAAG,CAACe,EAAS,KACjC,IAAI,IAAI,KAAO,EACL,EAAoB,CAAC,CAAC,EAAY,IAAQ,CAAC,EAAoB,CAAC,CAACA,EAAS,IACzEf,OAAO,cAAc,CAACe,EAAS,EAAK,CAAE,WAAY,GAAM,IAAK,CAAU,CAAC,EAAI,AAAC,EAGzF,ECNA,EAAoB,CAAC,CAAG,CAAC,EAAK,IAAUf,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAK,GCClF,EAAoB,CAAC,CAAG,AAACe,IACrB,AAAkB,aAAlB,OAAOP,QAA0BA,OAAO,WAAW,EACrDR,OAAO,cAAc,CAACe,EAASP,OAAO,WAAW,CAAE,CAAE,MAAO,QAAS,GAEtER,OAAO,cAAc,CAACe,EAAS,aAAc,CAAE,MAAO,EAAK,EAC5D,E,mJCYwBuL,E,kVCZjB,IAAMC,EAAiB,CAC5BC,OAAQ,SACRC,OAAQ,SACRC,WAAY,aACd,ECOO,SAASC,EAAYC,CAAW,EACrC,IAAMC,EAA6BC,AAT9B,SAAkBF,CAAW,EAClC,IAAIG,EACJ,GAAI,CACFA,EAAS,IAAIC,IAAIJ,EATA,WAUnB,CAAE,KAAM,CAAC,CACT,OAAOG,CACT,EAG8CH,GAE5C,GAAI,CAACC,EACH,OAGF,IAAMI,EAA2C,CAAC,EAElD,IAAK,IAAMxE,KAAOoE,EAAUK,YAAY,CAACpC,IAAI,GAAI,CAC/C,IAAMiB,EAASc,EAAUK,YAAY,CAACC,MAAM,CAAC1E,EAC7CwE,CAAAA,CAAK,CAACxE,EAAI,CAAGsD,EAAOqB,MAAM,CAAG,EAAIrB,EAASA,CAAM,CAAC,EAAE,AACrD,CAgBA,MAdsC,CACpCkB,MAAAA,EACAI,KAAMR,EAAUQ,IAAI,CACpBC,OAAQT,EAAUS,MAAM,CACxBrI,KAAM4H,EAAUU,QAAQ,CACxBA,SAAUV,EAAUU,QAAQ,CAC5BC,KAAM,CAAC,EAAEX,EAAUU,QAAQ,CAAC,EAAEV,EAAUS,MAAM,CAAC,EAAET,EAAUQ,IAAI,CAAC,CAAC,CACjEI,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,SAAU,GACVC,QAAS,KACTC,KAAM,EACR,CAEF,CD7BGvB,EAAeC,MAAM,CACrBD,EAAeE,MAAM,CACrBF,EAAeG,UAAU,CA0EgClM,OADP,aElFrD,IAAMuN,EAAQ,IAAIC,QAWX,SAASC,EACdV,CAAgB,CAChBW,CAA2B,MAYvBC,EATJ,GAAI,CAACD,EAAS,MAAO,CAAEX,SAAAA,CAAS,EAGhC,IAAIa,EAAoBL,EAAMpI,GAAG,CAACuI,GAC7BE,IACHA,EAAoBF,EAAQG,GAAG,CAAC,AAACC,GAAWA,EAAO1D,WAAW,IAC9DmD,EAAM/C,GAAG,CAACkD,EAASE,IAOrB,IAAMG,EAAWhB,EAASiB,KAAK,CAAC,IAAK,GAIrC,GAAI,CAACD,CAAQ,CAAC,EAAE,CAAE,MAAO,CAAEhB,SAAAA,CAAS,EAGpC,IAAMkB,EAAUF,CAAQ,CAAC,EAAE,CAAC3D,WAAW,GAIjC8D,EAAQN,EAAkBO,OAAO,CAACF,UACxC,AAAIC,EAAQ,EAAU,CAAEnB,SAAAA,CAAS,GAGjCY,EAAiBD,CAAO,CAACQ,EAAM,CAKxB,CAAEnB,SAFTA,EAAWA,EAASpE,KAAK,CAACgF,EAAef,MAAM,CAAG,IAAM,IAErCe,eAAAA,CAAe,EACpC,CCxDO,SAASS,EAAmB3J,CAAY,EAC7C,OAAOA,EAAK4J,UAAU,CAAC,KAAO5J,EAAQ,IAAGA,CAC3C,CCgBO,SAAS6J,EAAiBC,CAAa,EAC5C,OAAOH,EACLG,EAAMP,KAAK,CAAC,KAAKQ,MAAM,CAAC,CAACzB,EAAUkB,EAASC,EAAOH,IAEjD,AAAKE,EAKL,AC3BkB,MAAfA,AD2BgBA,CC3BT,CAAC,EAAE,EAAYA,AD2BNA,EC3BcQ,QAAQ,CAAC,MDgCtCR,AAAe,MAAfA,CAAO,CAAC,EAAE,EAMXA,AAAAA,CAAAA,AAAY,SAAZA,GAAsBA,AAAY,UAAZA,CAAkB,GACzCC,IAAUH,EAASnB,MAAM,CAAG,EAXrBG,EAgBCA,EAAS,IAAGkB,EArBblB,EAsBR,IAEP,CAMO,SAAS2B,EAAgBtC,CAAW,EACzC,OAAOA,EAAIuC,OAAO,CAChB,cAEA,KAEJ,CE5DO,IAAMC,EAA6B,CACxC,WACA,MACA,OACA,QACD,CAEM,SAASC,EAA2BpK,CAAY,EAErD,OACEA,AAIQ8B,SAJR9B,EACGuJ,KAAK,CAAC,KACNzD,IAAI,CAAC,AAAC0D,GACLW,EAA2BrE,IAAI,CAAC,AAACuE,GAAMb,EAAQI,UAAU,CAACS,IAGlE,CCbA,IAAMC,EAAa,gCAGbC,EAAoB,sBASnB,SAASC,EAAeV,CAAa,CAAEW,CAAsB,QAKlE,CAL4CA,AAAAA,KAAAA,IAAAA,GAAAA,CAAAA,EAAkB,EAAG,EAC7DL,EAA2BN,IAC7BA,CAAAA,EAAQY,ADCL,SAA6C1K,CAAY,EAC9D,IAAI2K,EACFC,EACAC,EAEF,IAAK,IAAMrB,KAAWxJ,EAAKuJ,KAAK,CAAC,KAE/B,GADAqB,EAAST,EAA2BrE,IAAI,CAAC,AAACuE,GAAMb,EAAQI,UAAU,CAACS,IACvD,CACT,CAACM,EAAmBE,EAAiB,CAAG7K,EAAKuJ,KAAK,CAACqB,EAAQ,GAC5D,KACF,CAGF,GAAI,CAACD,GAAqB,CAACC,GAAU,CAACC,EACpC,MAAM,qBAEL,CAFK,AAAInO,MACP,+BAA8BsD,EAAK,qFADhC,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAKF,OAFA2K,EAAoBd,EAAiBc,GAE7BC,GACN,IAAK,MAGDC,EADEF,AAAsB,MAAtBA,EACkB,IAAGE,EAEJF,EAAoB,IAAME,EAE/C,KACF,KAAK,OAEH,GAAIF,AAAsB,MAAtBA,EACF,MAAM,qBAEL,CAFK,AAAIjO,MACP,+BAA8BsD,EAAK,gEADhC,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAEF6K,EAAmBF,EAChBpB,KAAK,CAAC,KACNrF,KAAK,CAAC,EAAG,IACTP,MAAM,CAACkH,GACP1E,IAAI,CAAC,KACR,KACF,KAAK,QAEH0E,EAAmB,IAAMA,EACzB,KACF,KAAK,WAGH,IAAMC,EAAyBH,EAAkBpB,KAAK,CAAC,KACvD,GAAIuB,EAAuB3C,MAAM,EAAI,EACnC,MAAM,qBAEL,CAFK,AAAIzL,MACP,+BAA8BsD,EAAK,mEADhC,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAGF6K,EAAmBC,EAChB5G,KAAK,CAAC,EAAG,IACTP,MAAM,CAACkH,GACP1E,IAAI,CAAC,KACR,KACF,SACE,MAAM,qBAAyC,CAAzC,AAAIzJ,MAAM,gCAAV,qB,MAAA,O,WAAA,G,aAAA,EAAwC,EAClD,CAEA,MAAO,CAAEiO,kBAAAA,EAAmBE,iBAAAA,CAAiB,CAC/C,ECpEgDf,GAAOe,gBAAgB,AAAD,EAGhEJ,GACKF,EAAkBQ,IAAI,CAACjB,GAGzBQ,EAAWS,IAAI,CAACjB,EACzB,CCvBO,SAASkB,EAAUhL,CAAY,EACpC,IAAMiL,EAAYjL,EAAK0J,OAAO,CAAC,KACzBwB,EAAalL,EAAK0J,OAAO,CAAC,KAC1ByB,EAAWD,EAAa,IAAOD,CAAAA,EAAY,GAAKC,EAAaD,CAAQ,SAE3E,AAAIE,GAAYF,EAAY,GACnB,CACL3C,SAAUtI,EAAKoL,SAAS,CAAC,EAAGD,EAAWD,EAAaD,GACpDjD,MAAOmD,EACHnL,EAAKoL,SAAS,CAACF,EAAYD,EAAY,GAAKA,EAAYnJ,QACxD,GACJsG,KAAM6C,EAAY,GAAKjL,EAAKkE,KAAK,CAAC+G,GAAa,EACjD,EAGK,CAAE3C,SAAUtI,EAAMgI,MAAO,GAAII,KAAM,EAAG,CAC/C,CCZO,SAASiD,EAAcrL,CAAY,CAAEsL,CAAc,EACxD,GAAI,AAAgB,UAAhB,OAAOtL,EACT,MAAO,GAGT,GAAM,CAAEsI,SAAAA,CAAQ,CAAE,CAAG0C,EAAUhL,GAC/B,OAAOsI,IAAagD,GAAUhD,EAASsB,UAAU,CAAC0B,EAAS,IAC7D,CCNO,SAASC,EAAiBvL,CAAY,CAAEsL,CAAc,EAa3D,GAAI,CAACD,EAAcrL,EAAMsL,GACvB,OAAOtL,EAIT,IAAMwL,EAAgBxL,EAAKkE,KAAK,CAACoH,EAAOnD,MAAM,SAG9C,AAAIqD,EAAc5B,UAAU,CAAC,KACpB4B,EAKD,IAAGA,CACb,C,sFCrCA,IAAMC,EAAc,sBACdC,EAAkB,uBAEjB,SAASC,EAAmBC,CAAW,SAE5C,AAAIH,EAAYV,IAAI,CAACa,GACZA,EAAI1B,OAAO,CAACwB,EAAiB,QAE/BE,CACT,CCHO,SAASC,EAAoB/B,CAAa,EAC/C,OAAOA,EAAMI,OAAO,CAAC,MAAO,KAAO,GACrC,CC+EA,IAAM4B,EAAoB,2CAmC1B,SAASC,EAAsBC,CAAa,EAC1C,IAAMC,EAAWD,EAAMpC,UAAU,CAAC,MAAQoC,EAAMhC,QAAQ,CAAC,IACrDiC,CAAAA,GACFD,CAAAA,EAAQA,EAAM9H,KAAK,CAAC,EAAG,GAAE,EAE3B,IAAMgI,EAASF,EAAMpC,UAAU,CAAC,OAIhC,OAHIsC,GACFF,CAAAA,EAAQA,EAAM9H,KAAK,CAAC,EAAC,EAEhB,CAAEV,IAAKwI,EAAOE,OAAAA,EAAQD,SAAAA,CAAS,CACxC,CAqGA,SAASE,EAAsB,CAc9B,EAd8B,IAsDzBC,EAtDyB,CAC7BC,mBAAAA,CAAkB,CAClBC,gBAAAA,CAAe,CACf9C,QAAAA,CAAO,CACP+C,UAAAA,CAAS,CACTC,UAAAA,CAAS,CACTC,2BAAAA,CAA0B,CAQ3B,CAd8B,EAevB,CAAEjJ,IAAAA,CAAG,CAAEyI,SAAAA,CAAQ,CAAEC,OAAAA,CAAM,CAAE,CAAGH,EAAsBvC,GAIpDkD,EAAalJ,EAAI0G,OAAO,CAAC,MAAO,GAEhCsC,CAAAA,GACFE,CAAAA,EAAc,GAAEF,EAAYE,CAAS,EAEvC,IAAIC,EAAa,EAIbD,CAAAA,CAAAA,AAAsB,IAAtBA,EAAWvE,MAAM,EAAUuE,EAAWvE,MAAM,CAAG,EAAC,GAClDwE,CAAAA,EAAa,EAAG,EAEd,AAACzQ,MAAM0Q,SAASF,EAAWxI,KAAK,CAAC,EAAG,MACtCyI,CAAAA,EAAa,EAAG,EAGdA,GACFD,CAAAA,EAAaJ,GAAgB,EAG/B,IAAMO,EAAeH,KAAcH,EAE/BC,EACFD,CAAS,CAACG,EAAW,CAAI,GAAEF,EAAYhJ,EAEvC+I,CAAS,CAACG,EAAW,CAAGlJ,EAM1B,IAAMsJ,EAAqBT,EACvBV,EAAmBU,GACnB,GAaJ,OAPED,EAHES,GAAgBJ,EAGP,OAAMC,EAAW,IACnBR,EACE,MAAKQ,EAAW,QAEhB,MAAKA,EAAW,WAGtBT,EACF,OAAMa,EAAqBV,EAAQ,KACnC,IAAGU,EAAqBV,CAC/B,CCiHEW,AAFuC,aAAvB,OAAOC,aAGtB,CAAC,OAAQ,UAAW,mBAAmB,CAAWC,KAAK,CACtD,AAACC,GAAW,AAA+B,YAA/B,OAAOF,WAAW,CAACE,EAAO,CAGnC,OAAMC,UAAoBzQ,MAAO,CACjC,MAAM0Q,UAAuB1Q,MAAO,CCtZpC,SAAS2Q,EAAgB,CAGV,EAHU,IAC9BC,GAAAA,CAAE,CACFC,OAAAA,CAAM,CACc,CAHU,EAI9B,OAAO,AAACjF,IACN,IAAMkF,EAAaF,EAAGG,IAAI,CAACnF,GAC3B,GAAI,CAACkF,EAAY,MAAO,GAExB,IAAME,EAAS,AAAC1B,IACd,GAAI,CACF,OAAO5Q,mBAAmB4Q,EAC5B,CAAE,QAAM,CACN,MAAM,qBAAyC,CAAzC,IAAImB,EAAY,0BAAhB,qB,MAAA,O,WAAA,G,aAAA,EAAwC,EAChD,CACF,EAEMQ,EAAiB,CAAC,EACxB,IAAK,GAAM,CAACnK,EAAKoK,EAAM,GAAI7S,OAAO6L,OAAO,CAAC2G,GAAS,CACjD,IAAMM,EAAQL,CAAU,CAACI,EAAME,GAAG,CAAC,AACrBhM,UAAV+L,IACED,EAAM1B,MAAM,CACdyB,CAAM,CAACnK,EAAI,CAAGqK,EAAMtE,KAAK,CAAC,KAAKH,GAAG,CAAC,AAAC2E,GAAUL,EAAOK,IAErDJ,CAAM,CAACnK,EAAI,CAAGkK,EAAOG,GAG3B,CAEA,OAAOF,CACT,CACF,CC3CO,SAASK,EACd/F,CAA6B,EAE7B,IAAMD,EAAwB,CAAC,EAC/B,IAAK,GAAM,CAACxE,EAAKxB,EAAM,GAAIiG,EAAarB,OAAO,GAAI,CACjD,IAAMN,EAAW0B,CAAK,CAACxE,EAAI,AACvB,AAAoB,UAAb8C,EACT0B,CAAK,CAACxE,EAAI,CAAGxB,EACJxG,MAAMiG,OAAO,CAAC6E,GACvBA,EAASC,IAAI,CAACvE,GAEdgG,CAAK,CAACxE,EAAI,CAAG,CAAC8C,EAAUtE,EAAM,AAElC,CACA,OAAOgG,CACT,CAEA,SAASiG,EAAuBjC,CAAc,QAC5C,AAAI,AAAiB,UAAjB,OAAOA,EACFA,EAIN,CAAiB,UAAjB,OAAOA,GAAuB9P,MAAM8P,EAAK,GAC1C,AAAiB,WAAjB,OAAOA,EAIA,GAFAhP,OAAOgP,EAIlB,CCWA,SAASkC,EAAiBtC,CAAW,EACnC,OAAOA,EAAI1B,OAAO,CAAC,iBAAkB,IACvC,CAiFO,SAASiE,EAAenM,CAAa,CAAE2L,CAAc,EAC1D,GAAI,CAAC3L,EAAMoM,QAAQ,CAAC,KAClB,OAAOpM,EAGT,IAAK,IAAMwB,KAAOzI,OAAO8K,IAAI,CAAC8H,GACxB3L,EAAMoM,QAAQ,CAAE,IAAG5K,IACrBxB,CAAAA,EAAQA,EACLkI,OAAO,CACN,AAAInN,OAAQ,IAAGyG,EAAI,MAAM,KACxB,IAAGA,EAAI,6BAET0G,OAAO,CACN,AAAInN,OAAQ,IAAGyG,EAAI,MAAM,KACxB,IAAGA,EAAI,4BAET0G,OAAO,CAAC,AAAInN,OAAQ,IAAGyG,EAAI,MAAM,KAAO,IAAGA,EAAI,wBAC/C0G,OAAO,CACN,AAAInN,OAAQ,IAAGyG,EAAI,UAAU,KAC5B,wBAAuBA,EAAG,EAanC,OATAxB,EAAQA,EACLkI,OAAO,CAAC,4BAA6B,QACrCA,OAAO,CAAC,wBAAyB,KACjCA,OAAO,CAAC,yBAA0B,KAClCA,OAAO,CAAC,4BAA6B,KACrCA,OAAO,CAAC,6BAA8B,KAIlCmE,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EAAS,IAAGrM,EAAS,CAAEsM,SAAU,EAAM,GAAGX,GAAQzJ,KAAK,CAAC,EACjE,CCFO,SAASqK,EAAwB/K,CAAW,EAEjD,IAAK,IAAM8H,IADM,CAACjO,EAAAA,EAAuBA,CAAEC,EAAAA,EAA+BA,CAAC,CAEzE,GAAIkG,IAAQ8H,GAAU9H,EAAIoG,UAAU,CAAC0B,GACnC,OAAO9H,EAAI4H,SAAS,CAACE,EAAOnD,MAAM,EAGtC,OAAO,IACT,CC/JO,SAASqG,EAAyBxM,CAAa,EAGpD,GAAI,CACF,OAAO5G,mBAAmB4G,EAC5B,CAAE,KAAM,CACN,OAAOA,CACT,CACF,CCYA,IAAMyM,EAAmB,yB,0DCMzB,IAAMC,EAA0B1S,IAAAA,KAAO,CAAC,CAAC,IAAK,KAAM,KAAM,IAAK,KAAK,EAI9D2S,EAAgB3S,IAAAA,KAAO,CAAC,CAC5BA,IAAAA,MAAQ,GACRA,IAAAA,KAAO,CAAC,CAACA,IAAAA,MAAQ,GAAIA,IAAAA,MAAQ,GAAI0S,EAAwB,EAC1D,EAOYE,EAA2C5S,IAAAA,KAAO,CAAC,CAC9D2S,EACA3S,IAAAA,MAAQ,CACNA,IAAAA,MAAQ,GACRA,IAAAA,IAAM,CAAC,IAAM4S,IAEf5S,IAAAA,QAAU,CAACA,IAAAA,QAAU,CAACA,IAAAA,MAAQ,KAC9BA,IAAAA,QAAU,CACRA,IAAAA,QAAU,CACRA,IAAAA,KAAO,CAAC,CACNA,IAAAA,OAAS,CAAC,WACVA,IAAAA,OAAS,CAAC,WACVA,IAAAA,OAAS,CAAC,wBACX,IAGLA,IAAAA,QAAU,CAACA,IAAAA,OAAS,IACrB,EC9DY6S,EAAgB,cAIhBC,EAAgC,yBAahCC,EAAiB,CAlBJ,MAoBxBD,EAdyC,uBAOJ,mBADrC,+BAYD,CCUD,SAASE,EACPhH,CAAoD,CACpDiH,CAAmB,EAMnB,IAAK,IAAMzL,KAFX,OAAOwE,EAAM,kBAAqB,CAEhBA,EAAO,CACvB,IAAMkH,EACJ1L,IAAQnG,EAAAA,EAAuBA,EAAImG,EAAIoG,UAAU,CAACvM,EAAAA,EAAuBA,EAErE8R,EACJ3L,IAAQlG,EAAAA,EAA+BA,EACvCkG,EAAIoG,UAAU,CAACtM,EAAAA,EAA+BA,CAG9C4R,CAAAA,CAAAA,GACAC,GACAF,EAAUb,QAAQ,CAAC5K,EAAG,GAEtB,OAAOwE,CAAK,CAACxE,EAAI,AAErB,CACF,CCxDO,SAAS4L,EACdC,CAAqC,CACrC5G,CAAiB,CACjBS,CAAuB,EAEvB,GAAKmG,EAML,IAAK,IAAMC,KAJPpG,GACFA,CAAAA,EAAiBA,EAAevD,WAAW,EAAC,EAG3B0J,GAAa,C,IAEPC,EAIrBA,EAHF,GACE7G,IAFqB,CAAW,MAAX6G,CAAAA,EAAAA,EAAKC,MAAM,AAAD,EAAC,OAAXD,EAAa/F,KAAK,CAAC,IAAK,EAAE,CAAC,EAAE,CAAC5D,WAAW,EAAC,GAG/DuD,IAAmBoG,EAAKE,aAAa,CAAC7J,WAAW,KACrC,MAAZ2J,CAAAA,EAAAA,EAAKrG,OAAO,AAAD,EAAC,OAAZqG,EAAcG,IAAI,CAAC,AAACpG,GAAWA,EAAO1D,WAAW,KAAOuD,EAAc,EAEtE,OAAOoG,CAEX,CACF,CChBO,SAASI,EACd5H,CAAoC,CACpCxH,CAA6B,EAI7B,IAAImI,EACJ,GAAInI,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASkI,IAAI,AAAD,GAAK,CAAChN,MAAMiG,OAAO,CAACnB,EAAQkI,IAAI,EAC9CC,EAAWnI,EAAQkI,IAAI,CAACtI,QAAQ,GAAGqJ,KAAK,CAAC,IAAK,EAAE,CAAC,EAAE,MAC9C,IAAIzB,EAAOW,QAAQ,CAEnB,OADLA,EAAWX,EAAOW,QAAQ,CAG5B,OAAOA,EAAS9C,WAAW,EAC7B,C,gDCnBO,SAASgK,EAAkBrH,CAAgB,QAKhD,AAAIA,AAAa,WAJjBA,CAAAA,EAAWA,EACR4B,OAAO,CAAC,0BAA2B,IACnCA,OAAO,CAAC,UAAW,GAAE,EAGf,IAEF5B,CACT,CCAO,IAAMsH,EAAoBrU,OAAOsU,GAAG,CAAC,2BAoPrC,SAASC,GACd1P,CAAwB,CACxBoD,CAAO,EAEP,IAAMuM,EAAO3P,CAAG,CAACwP,EAAkB,EAAI,CAAC,EACxC,MAAO,AAAe,UAAf,OAAOpM,EAAmBuM,CAAI,CAACvM,EAAI,CAAGuM,CAC/C,CCzPO,SAASC,GAAkBC,CAAY,EAC5C,IAAMC,EACJ,iBAAiBnF,IAAI,CAACkF,IAAS,CAACzF,EAAeyF,GAC1C,SAAQA,EACTA,AAAS,MAATA,EACE,SACAtG,EAAmBsG,EAEc,EACvC,GAAM,CAAEE,MAAAA,CAAK,CAAE,CAAG9O,EAAQ,QACpB+O,EAAeD,EAAME,SAAS,CAACH,GACrC,GAAIE,IAAiBF,EACnB,MAAM,IAAI9C,EACP,yCAAwC8C,EAAW,IAAGE,EAG7D,CAEA,OAAOF,CACT,CC3BO,IAAMI,GAAyB,CACpCC,KAAM,CACJC,SAAU,OACVC,WAAY,CAAC,MAAO,MAAO,OAAQ,MAAO,MAAM,AAClD,EACAC,MAAO,CACLF,SAAU,aACVC,WAAY,CAAC,MAAO,OAAQ,MAAM,AACpC,EAKAE,UAAW,CACTH,SAAU,kBACVC,WAAY,CAAC,MAAO,OAAQ,MAAO,MAAM,AAC3C,EACAG,QAAS,CACPJ,SAAU,gBACVC,WAAY,CAAC,MAAO,OAAQ,MAAO,MAAM,AAC3C,CACF,EASaI,GAA0B,CACrCC,EACAC,IAGA,AAAI,AAACA,GAAqBA,AAA6B,IAA7BA,EAAkB5I,MAAM,CAG3C,CAAC,OAAO,EAAE2I,EAAiB3K,IAAI,CAAC,KAAK,OAAO,EAAE4K,EAAkB5K,IAAI,CAAC,KAAK,GAAG,CAAC,CAF5E,CAAC,OAAO,EAAE2K,EAAiB3K,IAAI,CAAC,KAAK,EAAE,CAAC,ACnC5C,OAAM6K,GAKX9L,aAAc,CACZ,IAAI+L,EACAC,CAGJ,KAAI,CAACC,OAAO,CAAG,IAAI1U,QAAW,CAACyE,EAAKkQ,KAClCH,EAAU/P,EACVgQ,EAASE,CACX,GAIA,IAAI,CAACH,OAAO,CAAGA,EACf,IAAI,CAACC,MAAM,CAAGA,CAChB,CACF,CCJO,MAAMG,GAGX,YACmBC,CAA6B,CAM7BC,EAAiC,AAACC,GAAOA,GAAI,CAC9D,C,KAPiBF,UAAU,CAAVA,E,KAMAC,WAAW,CAAXA,E,KATFE,OAAO,CAAG,IAAItW,GAU5B,CAcH,OAAcuW,OACZvQ,CAA8B,CACZ,CAClB,OAAO,IAAIkQ,GAAiBlQ,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASmQ,UAAU,CAAEnQ,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASoQ,WAAW,CACvE,CAYA,MAAaI,MAAMnO,CAAM,CAAEgO,CAAgB,CAAc,CACvD,IAAMI,EAAY,IAAI,CAACN,UAAU,CAAG,MAAM,IAAI,CAACA,UAAU,CAAC9N,GAAOA,EACjE,GAAIoO,AAAa,OAAbA,EACF,OAAOJ,EAAGI,EAAUnV,QAAQwU,OAAO,EAGrC,IAAMQ,EAAU,IAAI,CAACA,OAAO,CAAC/Q,GAAG,CAACkR,GACjC,GAAIH,EAAS,OAAOA,EAEpB,GAAM,CAAEN,QAAAA,CAAO,CAAEF,QAAAA,CAAO,CAAEC,OAAAA,CAAM,CAAE,CAAG,IAAIF,GAiBzC,OAhBA,IAAI,CAACS,OAAO,CAAC1L,GAAG,CAAC6L,EAAUT,GAE3B,IAAI,CAACI,WAAW,CAAC,UACf,GAAI,CACF,IAAMM,EAAS,MAAML,EAAGI,EAAUX,GAIlCA,EAAQY,EACV,CAAE,MAAOC,EAAK,CACZZ,EAAOY,EACT,QAAU,CACR,IAAI,CAACL,OAAO,CAACjL,MAAM,CAACoL,EACtB,CACF,GAEOT,CACT,CACF,CClFO,IAAMY,GAAqB,AAACC,IAOjCvV,QAAQwU,OAAO,GAAGgB,IAAI,CAAC,KAInB9U,QAAQ+U,QAAQ,CAACF,EAErB,EACF,EAQaG,GAAoB,AAACH,IAI9BI,aAAaJ,EAEjB,ECUO,IAAWK,GAAeA,SAAfA,CAAe,E,2HAAfA,C,MAiJAC,GAAoBA,SAApBA,CAAoB,E,qGAApBA,C,qCCnLlB,SAASC,KAIT,CCbU,IAAIC,WAAW,CAAC,GAAI,IAAK,IAAK,IAAK,IAAI,EAEvC,IAAIA,WAAW,CAAC,GAAI,GAAI,IAAK,IAAK,IAAI,EAItC,IAAIA,WAAW,CAAC,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAG,EAE9C,IAAIA,WAAW,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAG,EAE9C,IAAIA,WAAW,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAG,EAEtC,IAAIA,WAAW,CAC5B,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAC5D,EAEG,IAIWA,WAAW,CACxB,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IACrE,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GACvC,EDDL,IAAMC,GAAU,IAAIC,YAmDb,SAASC,GAAiBC,CAAa,EAC5C,OAAO,IAAIC,eAAe,CACxBC,MAAMC,CAAU,EACdA,EAAWC,OAAO,CAACJ,GACnBG,EAAWE,KAAK,EAClB,CACF,EACF,CAEO,eAAeC,GACpBC,CAAkC,EAElC,IAAMC,EAASD,EAAOE,SAAS,GACzBC,EAAuB,EAAE,CAE/B,OAAa,CACX,GAAM,CAAEC,KAAAA,CAAI,CAAEvR,MAAAA,CAAK,CAAE,CAAG,MAAMoR,EAAOI,IAAI,GACzC,GAAID,EACF,MAGFD,EAAO/M,IAAI,CAACvE,EACd,CAEA,OAAOc,OAAOa,MAAM,CAAC2P,EACvB,CAEO,eAAeG,GACpBN,CAAkC,CAClCO,CAAoB,EAEpB,IAAMC,EAAU,IAAIC,YAAY,QAAS,CAAEC,MAAO,EAAK,GACnDC,EAAS,GAEb,UAAW,IAAMlB,KAASO,EAAQ,CAChC,GAAIO,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAQK,OAAO,CACjB,OAAOD,EAGTA,GAAUH,EAAQjG,MAAM,CAACkF,EAAO,CAAEO,OAAQ,EAAK,EACjD,CAIA,OAFAW,EAAUH,EAAQjG,MAAM,EAG1B,CEpHO,SAASsG,GAAchU,CAAY,CAAEsL,CAAe,EACzD,GAAI,CAACtL,EAAK4J,UAAU,CAAC,MAAQ,CAAC0B,EAC5B,OAAOtL,EAGT,GAAM,CAAEsI,SAAAA,CAAQ,CAAEN,MAAAA,CAAK,CAAEI,KAAAA,CAAI,CAAE,CAAG4C,EAAUhL,GAC5C,MAAQ,GAAEsL,EAAShD,EAAWN,EAAQI,CACxC,CCNO,SAAS6L,GAAcjU,CAAY,CAAEkU,CAAe,EACzD,GAAI,CAAClU,EAAK4J,UAAU,CAAC,MAAQ,CAACsK,EAC5B,OAAOlU,EAGT,GAAM,CAAEsI,SAAAA,CAAQ,CAAEN,MAAAA,CAAK,CAAEI,KAAAA,CAAI,CAAE,CAAG4C,EAAUhL,GAC5C,MAAQ,GAAEsI,EAAW4L,EAASlM,EAAQI,CACxC,CCOA,IAAM+L,GACJ,2FAEF,SAASC,GAASzM,CAAiB,CAAE0M,CAAmB,EACtD,OAAO,IAAItM,IACT/K,OAAO2K,GAAKuC,OAAO,CAACiK,GAA0B,aAC9CE,GAAQrX,OAAOqX,GAAMnK,OAAO,CAACiK,GAA0B,aAE3D,CAEA,IAAMG,GAAW/Y,OAAO,kBAEjB,OAAMgZ,GAeXrP,YACEsP,CAAmB,CACnBC,CAAmC,CACnCC,CAAc,CACd,CACA,IAAIL,EACAlT,CAGD,AAAsB,WAAtB,OAAOsT,GAA2B,aAAcA,GACjD,AAAsB,UAAtB,OAAOA,GAEPJ,EAAOI,EACPtT,EAAUuT,GAAQ,CAAC,GAEnBvT,EAAUuT,GAAQD,GAAc,CAAC,EAGnC,IAAI,CAACH,GAAS,CAAG,CACf3M,IAAKyM,GAASI,EAAOH,GAAQlT,EAAQkT,IAAI,EACzClT,QAASA,EACTwT,SAAU,EACZ,EAEA,IAAI,CAACC,OAAO,EACd,CAEQA,SAAU,C,IAcV,EAAAvY,EAKJ,EACA,IAnBF,IAAMwY,EAAOC,ACxBV,SACLxM,CAAgB,CAChBnH,CAAgB,MAE0BA,EAyCxB0Q,EAzClB,GAAM,CAAE8C,SAAAA,CAAQ,CAAEI,KAAAA,CAAI,CAAEC,cAAAA,CAAa,CAAE,CAAG7T,AAAkB,MAAlBA,CAAAA,EAAAA,EAAQ8T,UAAU,AAAD,EAAjB9T,EAAsB,CAAC,EAC3D0T,EAAyB,CAC7BvM,SAAAA,EACA0M,cAAe1M,AAAa,MAAbA,EAAmBA,EAAS0B,QAAQ,CAAC,KAAOgL,CAC7D,EAEIL,GAAYtJ,EAAcwJ,EAAKvM,QAAQ,CAAEqM,KAC3CE,EAAKvM,QAAQ,CAAGiD,EAAiBsJ,EAAKvM,QAAQ,CAAEqM,GAChDE,EAAKF,QAAQ,CAAGA,GAElB,IAAIO,EAAuBL,EAAKvM,QAAQ,CAExC,GACEuM,EAAKvM,QAAQ,CAACsB,UAAU,CAAC,iBACzBiL,EAAKvM,QAAQ,CAAC0B,QAAQ,CAAC,SACvB,CACA,IAAMmL,EAAQN,EAAKvM,QAAQ,CACxB4B,OAAO,CAAC,mBAAoB,IAC5BA,OAAO,CAAC,UAAW,IACnBX,KAAK,CAAC,IAGTsL,CAAAA,EAAKO,OAAO,CADID,CAAK,CAAC,EAAE,CAExBD,EACEC,AAAa,UAAbA,CAAK,CAAC,EAAE,CAAgB,IAAGA,EAAMjR,KAAK,CAAC,GAAGiC,IAAI,CAAC,KAAS,IAItDhF,AAAsB,KAAtBA,EAAQkU,SAAS,EACnBR,CAAAA,EAAKvM,QAAQ,CAAG4M,CAAmB,CAEvC,CAIA,GAAIH,EAAM,CACR,IAAIlD,EAAS1Q,EAAQmU,YAAY,CAC7BnU,EAAQmU,YAAY,CAACV,OAAO,CAACC,EAAKvM,QAAQ,EAC1CU,EAAoB6L,EAAKvM,QAAQ,CAAEyM,EAAK9L,OAAO,CAEnD4L,CAAAA,EAAKxL,MAAM,CAAGwI,EAAO3I,cAAc,CACnC2L,EAAKvM,QAAQ,CAAGuJ,AAAe,MAAfA,CAAAA,EAAAA,EAAOvJ,QAAQ,AAAD,EAAduJ,EAAmBgD,EAAKvM,QAAQ,CAE5C,CAACuJ,EAAO3I,cAAc,EAAI2L,EAAKO,OAAO,EAKpCvD,AAJJA,CAAAA,EAAS1Q,EAAQmU,YAAY,CACzBnU,EAAQmU,YAAY,CAACV,OAAO,CAACM,GAC7BlM,EAAoBkM,EAAsBH,EAAK9L,OAAO,GAE/CC,cAAc,EACvB2L,CAAAA,EAAKxL,MAAM,CAAGwI,EAAO3I,cAAc,AAAD,CAGxC,CACA,OAAO2L,CACT,EDlCqC,IAAI,CAACP,GAAS,CAAC3M,GAAG,CAACW,QAAQ,CAAE,CAC5D2M,WAAY,IAAI,CAACX,GAAS,CAACnT,OAAO,CAAC8T,UAAU,CAC7CI,UAAW,CAAClY,QAAQoY,GAAG,CAACC,kCAAkC,CAC1DF,aAAc,IAAI,CAAChB,GAAS,CAACnT,OAAO,CAACmU,YAAY,AACnD,GAEM7M,EAAWiH,EACf,IAAI,CAAC4E,GAAS,CAAC3M,GAAG,CAClB,IAAI,CAAC2M,GAAS,CAACnT,OAAO,CAACb,OAAO,CAEhC,KAAI,CAACgU,GAAS,CAACmB,YAAY,CAAG,IAAI,CAACnB,GAAS,CAACnT,OAAO,CAACmU,YAAY,CAC7D,IAAI,CAAChB,GAAS,CAACnT,OAAO,CAACmU,YAAY,CAAClG,kBAAkB,CAAC3G,GACvD2G,EACmC,MAAjC/S,CAAAA,EAAA,IAAI,CAACiY,GAAS,CAACnT,OAAO,CAAC8T,UAAU,AAAD,GAAC,AAAM,MAAvC,GAAA5Y,EAAmC0Y,IAAI,AAAD,EAAC,OAAvC,EAAyCW,OAAO,CAChDjN,GAGN,IAAM+G,EACJ,CAA2B,MAA3B,OAAI,CAAC8E,GAAS,CAACmB,YAAY,AAAD,EAAC,OAA3B,EAA6BjG,aAAa,AAAD,IACR,MAAjC,OAAI,CAAC8E,GAAS,CAACnT,OAAO,CAAC8T,UAAU,AAAD,GAAC,AAAM,MAAvC,KAAmCF,IAAI,AAAD,EAAC,OAAvC,EAAyCvF,aAAa,CAExD,KAAI,CAAC8E,GAAS,CAAC3M,GAAG,CAACW,QAAQ,CAAGuM,EAAKvM,QAAQ,CAC3C,IAAI,CAACgM,GAAS,CAAC9E,aAAa,CAAGA,EAC/B,IAAI,CAAC8E,GAAS,CAACK,QAAQ,CAAGE,EAAKF,QAAQ,EAAI,GAC3C,IAAI,CAACL,GAAS,CAACc,OAAO,CAAGP,EAAKO,OAAO,CACrC,IAAI,CAACd,GAAS,CAACjL,MAAM,CAAGwL,EAAKxL,MAAM,EAAImG,EACvC,IAAI,CAAC8E,GAAS,CAACU,aAAa,CAAGH,EAAKG,aAAa,AACnD,CAEQW,gBAAiB,KE9FYd,MACjCvM,EF8FF,OE9FEA,EAAWsN,ACJV,SACL5V,CAAY,CACZqJ,CAAuB,CACvBmG,CAAsB,CACtBqG,CAAsB,EAItB,GAAI,CAACxM,GAAUA,IAAWmG,EAAe,OAAOxP,EAEhD,IAAM8V,EAAQ9V,EAAK2F,WAAW,SAI9B,AAAI,CAACkQ,IACCxK,EAAcyK,EAAO,SACrBzK,EAAcyK,EAAQ,IAAGzM,EAAO1D,WAAW,KADN3F,EAKpCgU,GAAchU,EAAO,IAAGqJ,EACjC,EDhBIwL,CAFmCA,EF+FL,CAC5BF,SAAU,IAAI,CAACL,GAAS,CAACK,QAAQ,CACjCS,QAAS,IAAI,CAACd,GAAS,CAACc,OAAO,CAC/B5F,cAAe,AAAC,IAAI,CAAC8E,GAAS,CAACnT,OAAO,CAAC4U,WAAW,CAE9CjU,OADA,IAAI,CAACwS,GAAS,CAAC9E,aAAa,CAEhCnG,OAAQ,IAAI,CAACiL,GAAS,CAACjL,MAAM,CAC7Bf,SAAU,IAAI,CAACgM,GAAS,CAAC3M,GAAG,CAACW,QAAQ,CACrC0M,cAAe,IAAI,CAACV,GAAS,CAACU,aAAa,AAC7C,GEtGK1M,QAAQ,CACbuM,EAAKxL,MAAM,CACXwL,EAAKO,OAAO,CAAGtT,OAAY+S,EAAKrF,aAAa,CAC7CqF,EAAKgB,YAAY,EAGfhB,CAAAA,EAAKO,OAAO,EAAI,CAACP,EAAKG,aAAa,AAAD,GACpC1M,CAAAA,EAAWuD,EAAoBvD,EAAQ,EAGrCuM,EAAKO,OAAO,EACd9M,CAAAA,EAAW2L,GACTD,GAAc1L,EAAW,eAAcuM,EAAKO,OAAO,EACnDP,AAAkB,MAAlBA,EAAKvM,QAAQ,CAAW,aAAe,QAAO,EAIlDA,EAAW0L,GAAc1L,EAAUuM,EAAKF,QAAQ,EACzC,CAACE,EAAKO,OAAO,EAAIP,EAAKG,aAAa,CACtC,AAAC1M,EAAS0B,QAAQ,CAAC,KAEjB1B,EADA2L,GAAc3L,EAAU,KAE1BuD,EAAoBvD,EFiFxB,CAEQ0N,cAAe,CACrB,OAAO,IAAI,CAAC1B,GAAS,CAAC3M,GAAG,CAACU,MAAM,AAClC,CAEA,IAAW+M,SAAU,CACnB,OAAO,IAAI,CAACd,GAAS,CAACc,OAAO,AAC/B,CAEA,IAAWA,QAAQA,CAA2B,CAAE,CAC9C,IAAI,CAACd,GAAS,CAACc,OAAO,CAAGA,CAC3B,CAEA,IAAW/L,QAAS,CAClB,OAAO,IAAI,CAACiL,GAAS,CAACjL,MAAM,EAAI,EAClC,CAEA,IAAWA,OAAOA,CAAc,CAAE,C,IAG7BhN,EAAA,EAFH,GACE,CAAC,IAAI,CAACiY,GAAS,CAACjL,MAAM,EACtB,EAAkC,MAAjC,OAAI,CAACiL,GAAS,CAACnT,OAAO,CAAC8T,UAAU,AAAD,GAAC,AAAM,MAAvC5Y,CAAAA,EAAA,EAAmC0Y,IAAI,AAAD,EAAC,OAAvC1Y,EAAyC4M,OAAO,CAACmF,QAAQ,CAAC/E,IAE3D,MAAM,qBAEL,CAFK,AAAItN,UACR,CAAC,8CAA8C,EAAEsN,EAAO,CAAC,CAAC,EADtD,qB,MAAA,O,WAAA,G,aAAA,EAEN,EAGF,KAAI,CAACiL,GAAS,CAACjL,MAAM,CAAGA,CAC1B,CAEA,IAAImG,eAAgB,CAClB,OAAO,IAAI,CAAC8E,GAAS,CAAC9E,aAAa,AACrC,CAEA,IAAIiG,cAAe,CACjB,OAAO,IAAI,CAACnB,GAAS,CAACmB,YAAY,AACpC,CAEA,IAAIxN,cAAe,CACjB,OAAO,IAAI,CAACqM,GAAS,CAAC3M,GAAG,CAACM,YAAY,AACxC,CAEA,IAAIO,MAAO,CACT,OAAO,IAAI,CAAC8L,GAAS,CAAC3M,GAAG,CAACa,IAAI,AAChC,CAEA,IAAIA,KAAKxG,CAAa,CAAE,CACtB,IAAI,CAACsS,GAAS,CAAC3M,GAAG,CAACa,IAAI,CAAGxG,CAC5B,CAEA,IAAIyG,UAAW,CACb,OAAO,IAAI,CAAC6L,GAAS,CAAC3M,GAAG,CAACc,QAAQ,AACpC,CAEA,IAAIA,SAASzG,CAAa,CAAE,CAC1B,IAAI,CAACsS,GAAS,CAAC3M,GAAG,CAACc,QAAQ,CAAGzG,CAChC,CAEA,IAAI6G,MAAO,CACT,OAAO,IAAI,CAACyL,GAAS,CAAC3M,GAAG,CAACkB,IAAI,AAChC,CAEA,IAAIA,KAAK7G,CAAa,CAAE,CACtB,IAAI,CAACsS,GAAS,CAAC3M,GAAG,CAACkB,IAAI,CAAG7G,CAC5B,CAEA,IAAI2G,UAAW,CACb,OAAO,IAAI,CAAC2L,GAAS,CAAC3M,GAAG,CAACgB,QAAQ,AACpC,CAEA,IAAIA,SAAS3G,CAAa,CAAE,CAC1B,IAAI,CAACsS,GAAS,CAAC3M,GAAG,CAACgB,QAAQ,CAAG3G,CAChC,CAEA,IAAIuG,MAAO,CACT,IAAMD,EAAW,IAAI,CAACqN,cAAc,GAC9BtN,EAAS,IAAI,CAAC2N,YAAY,GAChC,MAAO,CAAC,EAAE,IAAI,CAACrN,QAAQ,CAAC,EAAE,EAAE,IAAI,CAACH,IAAI,CAAC,EAAEF,EAAS,EAAED,EAAO,EAAE,IAAI,CAACD,IAAI,CAAC,CAAC,AACzE,CAEA,IAAIG,KAAKZ,CAAW,CAAE,CACpB,IAAI,CAAC2M,GAAS,CAAC3M,GAAG,CAAGyM,GAASzM,GAC9B,IAAI,CAACiN,OAAO,EACd,CAEA,IAAIqB,QAAS,CACX,OAAO,IAAI,CAAC3B,GAAS,CAAC3M,GAAG,CAACsO,MAAM,AAClC,CAEA,IAAI3N,UAAW,CACb,OAAO,IAAI,CAACgM,GAAS,CAAC3M,GAAG,CAACW,QAAQ,AACpC,CAEA,IAAIA,SAAStG,CAAa,CAAE,CAC1B,IAAI,CAACsS,GAAS,CAAC3M,GAAG,CAACW,QAAQ,CAAGtG,CAChC,CAEA,IAAIoG,MAAO,CACT,OAAO,IAAI,CAACkM,GAAS,CAAC3M,GAAG,CAACS,IAAI,AAChC,CAEA,IAAIA,KAAKpG,CAAa,CAAE,CACtB,IAAI,CAACsS,GAAS,CAAC3M,GAAG,CAACS,IAAI,CAAGpG,CAC5B,CAEA,IAAIqG,QAAS,CACX,OAAO,IAAI,CAACiM,GAAS,CAAC3M,GAAG,CAACU,MAAM,AAClC,CAEA,IAAIA,OAAOrG,CAAa,CAAE,CACxB,IAAI,CAACsS,GAAS,CAAC3M,GAAG,CAACU,MAAM,CAAGrG,CAC9B,CAEA,IAAIkU,UAAW,CACb,OAAO,IAAI,CAAC5B,GAAS,CAAC3M,GAAG,CAACuO,QAAQ,AACpC,CAEA,IAAIA,SAASlU,CAAa,CAAE,CAC1B,IAAI,CAACsS,GAAS,CAAC3M,GAAG,CAACuO,QAAQ,CAAGlU,CAChC,CAEA,IAAImU,UAAW,CACb,OAAO,IAAI,CAAC7B,GAAS,CAAC3M,GAAG,CAACwO,QAAQ,AACpC,CAEA,IAAIA,SAASnU,CAAa,CAAE,CAC1B,IAAI,CAACsS,GAAS,CAAC3M,GAAG,CAACwO,QAAQ,CAAGnU,CAChC,CAEA,IAAI2S,UAAW,CACb,OAAO,IAAI,CAACL,GAAS,CAACK,QAAQ,AAChC,CAEA,IAAIA,SAAS3S,CAAa,CAAE,CAC1B,IAAI,CAACsS,GAAS,CAACK,QAAQ,CAAG3S,EAAM4H,UAAU,CAAC,KAAO5H,EAAQ,CAAC,CAAC,EAAEA,EAAM,CAAC,AACvE,CAEA9B,UAAW,CACT,OAAO,IAAI,CAACqI,IAAI,AAClB,CAEA6N,QAAS,CACP,OAAO,IAAI,CAAC7N,IAAI,AAClB,CAEA,CAAChN,OAAOsU,GAAG,CAAC,+BAA+B,EAAG,CAC5C,MAAO,CACLtH,KAAM,IAAI,CAACA,IAAI,CACf0N,OAAQ,IAAI,CAACA,MAAM,CACnBtN,SAAU,IAAI,CAACA,QAAQ,CACvBwN,SAAU,IAAI,CAACA,QAAQ,CACvBD,SAAU,IAAI,CAACA,QAAQ,CACvB1N,KAAM,IAAI,CAACA,IAAI,CACfC,SAAU,IAAI,CAACA,QAAQ,CACvBI,KAAM,IAAI,CAACA,IAAI,CACfP,SAAU,IAAI,CAACA,QAAQ,CACvBD,OAAQ,IAAI,CAACA,MAAM,CACnBJ,aAAc,IAAI,CAACA,YAAY,CAC/BG,KAAM,IAAI,CAACA,IAAI,AACjB,CACF,CAEAiO,OAAQ,CACN,OAAO,IAAI9B,GAAQvX,OAAO,IAAI,EAAG,IAAI,CAACsX,GAAS,CAACnT,OAAO,CACzD,CACF,C,4DIpRyB5F,OAAO,oBAOC+a,QAuC9B/a,OAAOsU,GAAG,CAAC,+BC1CP,IAAM0G,GAAsB,iBAC5B,OAAMC,WAAwB9Z,M,kBAA9B,iBACW2J,IAAI,CAAGkQ,E,CACzB,CCwBA,IAAKE,GAAkBA,SAAlBA,CAAkB,E,y6CAAlBA,C,EAAAA,IAAkBA,CAAAA,GA+ClBC,GAAaA,SAAbA,CAAa,E,mLAAbA,C,EAAAA,IAAaA,CAAAA,GAebC,GAAyBA,SAAzBA,CAAyB,E,uDAAzBA,C,EAAAA,IAAyBA,CAAAA,GChG9B,IAAIC,GAA2B,EAC3BC,GAA2B,EAC3BC,GAA2B,ECMxB,SAASC,GAAajb,CAAM,EACjC,MAAOA,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAGuK,IAAI,AAAD,IAAM,cAAgBvK,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAGuK,IAAI,AAAD,IAAMkQ,EACjD,CA6GO,eAAeS,GACpBC,CAAoC,CACpC/V,CAAmB,CACnBgW,CAAkC,EAElC,GAAI,CAEF,GAAM,CAAEC,QAAAA,CAAO,CAAEC,UAAAA,CAAS,CAAE,CAAGlW,EAC/B,GAAIiW,GAAWC,EAAW,OAI1B,IAAMrE,EAAasE,AHhHhB,SAA+BC,CAAkB,EACtD,IAAMvE,EAAa,IAAIwE,gBAWvB,OANAD,EAASE,IAAI,CAAC,QAAS,KACjBF,EAASG,gBAAgB,EAE7B1E,EAAW2E,KAAK,CAAC,IAAIlB,GACvB,GAEOzD,CACT,EGmG6C7R,GAEnCyW,EAASC,AAzHnB,SACE1W,CAAmB,CACnBgW,CAAkC,EAElC,IAAIW,EAAU,GAIVC,EAAU,IAAI9G,GAClB,SAAS+G,IACPD,EAAQ7G,OAAO,EACjB,CACA/P,EAAI8W,EAAE,CAAC,QAASD,GAIhB7W,EAAIsW,IAAI,CAAC,QAAS,KAChBtW,EAAI+W,GAAG,CAAC,QAASF,GACjBD,EAAQ7G,OAAO,EACjB,GAIA,IAAMiH,EAAW,IAAIlH,GAMrB,OALA9P,EAAIsW,IAAI,CAAC,SAAU,KACjBU,EAASjH,OAAO,EAClB,GAGO,IAAIkH,eAA2B,CACpCC,MAAO,MAAOxF,IAIZ,GAAI,CAACiF,EAAS,CAGZ,GAFAA,EAAU,GAGR,gBAAiBxQ,YACjBlK,QAAQoY,GAAG,CAAC8C,4BAA4B,CACxC,CACA,IAAMC,EAAUC,ADdnB,SACLpX,EAA+B,CAAC,CAAC,EAEjC,IAAMmX,EACJ1B,AAA6B,IAA7BA,GACI9U,OACA,CACE8U,yBAAAA,GACAC,yBAAAA,GACAC,yBAAAA,EACF,EAQN,OANI3V,EAAQqX,KAAK,GACf5B,GAA2B,EAC3BC,GAA2B,EAC3BC,GAA2B,GAGtBwB,CACT,GCJcA,CAAAA,GACFtL,YAAYyL,OAAO,CACjB,CAAC,EAAEtb,QAAQoY,GAAG,CAAC8C,4BAA4B,CAAC,8BAA8B,CAAC,CAC3E,CACEvF,MAAOwF,EAAQ1B,wBAAwB,CACvC8B,IACEJ,EAAQ1B,wBAAwB,CAChC0B,EAAQzB,wBAAwB,AACpC,EAGN,CAEA3V,EAAIyX,YAAY,GAChBC,AAAAA,GAAAA,GAAAA,SAAAA,AAAAA,IAAYC,KAAK,CACfpC,GAAAA,aAAgC,CAChC,CACEqC,SAAU,gBACZ,EACA,IAAMhX,OAEV,CAEA,GAAI,CACF,IAAMiX,EAAK7X,EAAIkX,KAAK,CAACxF,EAIjB,WAAW1R,GAAO,AAAqB,YAArB,OAAOA,EAAI8X,KAAK,EACpC9X,EAAI8X,KAAK,GAKND,IACH,MAAMjB,EAAQ3G,OAAO,CAGrB2G,EAAU,IAAI9G,GAElB,CAAE,MAAOc,EAAK,CAEZ,MADA5Q,EAAIwX,GAAG,GACD,qBAA8D,CAA9D,AAAIhc,MAAM,oCAAqC,CAAEuc,MAAOnH,CAAI,GAA5D,qB,MAAA,O,WAAA,G,aAAA,EAA6D,EACrE,CACF,EACA4F,MAAO,AAAC5F,IACF5Q,EAAIuW,gBAAgB,EAExBvW,EAAIgY,OAAO,CAACpH,EACd,EACAmB,MAAO,UAOL,GAJIiE,GACF,MAAMA,GAGJhW,EAAIuW,gBAAgB,CAGxB,OADAvW,EAAIwX,GAAG,GACAR,EAAS/G,OAAO,AACzB,CACF,EACF,EAgB4CjQ,EAAKgW,EAE7C,OAAMD,EAASkC,MAAM,CAACxB,EAAQ,CAAEjE,OAAQX,EAAWW,MAAM,AAAC,EAC5D,CAAE,MAAO5B,EAAU,CAEjB,GAAIiF,GAAajF,GAAM,MAEvB,OAAM,qBAAoD,CAApD,AAAIpV,MAAM,0BAA2B,CAAEuc,MAAOnH,CAAI,GAAlD,qB,MAAA,O,WAAA,G,aAAA,EAAmD,EAC3D,CACF,CCpEe,MAAMsH,GA6BnB,OAAcC,WAAWrX,CAAsB,CAAE,CAC/C,OAAO,IAAIoX,GAAyCpX,EAAO,CAAEsX,SAAU,CAAC,CAAE,EAC5E,CAIApU,YACEoS,CAA8B,CAC9B,CAAEiC,YAAAA,CAAW,CAAEC,UAAAA,CAAS,CAAEF,SAAAA,CAAQ,CAAiC,CACnE,CACA,IAAI,CAAChC,QAAQ,CAAGA,EAChB,IAAI,CAACiC,WAAW,CAAGA,EACnB,IAAI,CAACD,QAAQ,CAAGA,EAChB,IAAI,CAACE,SAAS,CAAGA,CACnB,CAEOC,eAAeH,CAAkB,CAAE,CACxCve,OAAO2e,MAAM,CAAC,IAAI,CAACJ,QAAQ,CAAEA,EAC/B,CAMA,IAAWK,QAAkB,CAC3B,OAAO,AAAkB,OAAlB,IAAI,CAACrC,QAAQ,AACtB,CAMA,IAAWsC,WAAqB,CAC9B,MAAO,AAAyB,UAAzB,OAAO,IAAI,CAACtC,QAAQ,AAC7B,CAIOuC,kBAAkB1G,EAAS,EAAK,CAA4B,CACjE,GAAI,AAAkB,OAAlB,IAAI,CAACmE,QAAQ,CACf,MAAM,qBAA0D,CAA1D,AAAI5a,MAAM,iDAAV,qB,MAAA,O,WAAA,G,aAAA,EAAyD,GAGjE,GAAI,AAAyB,UAAzB,OAAO,IAAI,CAAC4a,QAAQ,CAAe,CACrC,GAAI,CAACnE,EACH,MAAM,qBAEL,CAFK,AAAIzW,MACR,8EADI,qB,MAAA,M,WAAA,G,aAAA,EAEN,GAGF,OAAOwW,GAAe,IAAI,CAAC+D,QAAQ,CACrC,CAEA,OAAOnU,OAAOC,IAAI,CAAC,IAAI,CAACuU,QAAQ,CAClC,CAWOwC,kBAAkB3G,EAAS,EAAK,CAA4B,CACjE,GAAI,AAAkB,OAAlB,IAAI,CAACmE,QAAQ,CACf,MAAM,qBAA0D,CAA1D,AAAI5a,MAAM,iDAAV,qB,MAAA,O,WAAA,G,aAAA,EAAyD,GAGjE,GAAI,AAAyB,UAAzB,OAAO,IAAI,CAAC4a,QAAQ,CAAe,CACrC,GAAI,CAACnE,EACH,MAAM,qBAEL,CAFK,AAAIzW,MACR,8EADI,qB,MAAA,M,WAAA,G,aAAA,EAEN,GAGF,OAAO+W,GAAe,IAAI,CAACwD,QAAQ,CACrC,CAEA,OAAO,IAAI,CAACK,QAAQ,AACtB,CAMA,IAAYL,UAAuC,CACjD,GAAI,AAAkB,OAAlB,IAAI,CAACK,QAAQ,CACf,MAAM,qBAAyD,CAAzD,AAAI5a,MAAM,gDAAV,qB,MAAA,M,WAAA,G,aAAA,EAAwD,GAEhE,GAAI,AAAyB,UAAzB,OAAO,IAAI,CAAC4a,QAAQ,CACtB,MAAM,qBAA2D,CAA3D,AAAI5a,MAAM,kDAAV,qB,MAAA,O,WAAA,G,aAAA,EAA0D,UAGlE,AAAIoG,OAAOiX,QAAQ,CAAC,IAAI,CAACzC,QAAQ,EACxB3E,GAAiB,IAAI,CAAC2E,QAAQ,EAInC9b,MAAMiG,OAAO,CAAC,IAAI,CAAC6V,QAAQ,EACtB0C,AbnLN,SACL,GAAGC,CAA4B,EAI/B,GAAIA,AAAmB,IAAnBA,EAAQ9R,MAAM,CAChB,MAAM,qBAAiE,CAAjE,AAAIzL,MAAM,wDAAV,qB,MAAA,O,WAAA,G,aAAA,EAAgE,GAIxE,GAAIud,AAAmB,IAAnBA,EAAQ9R,MAAM,CAChB,OAAO8R,CAAO,CAAC,EAAE,CAGnB,GAAM,CAAEhD,SAAAA,CAAQ,CAAEiD,SAAAA,CAAQ,CAAE,CAAG,IAAIC,gBAI/BhJ,EAAU8I,CAAO,CAAC,EAAE,CAACd,MAAM,CAACe,EAAU,CAAEE,aAAc,EAAK,GAE3D7d,EAAI,EACR,KAAOA,EAAI0d,EAAQ9R,MAAM,CAAG,EAAG5L,IAAK,CAClC,IAAM8d,EAAaJ,CAAO,CAAC1d,EAAE,CAC7B4U,EAAUA,EAAQc,IAAI,CAAC,IACrBoI,EAAWlB,MAAM,CAACe,EAAU,CAAEE,aAAc,EAAK,GAErD,CAIA,IAAME,EAAaL,CAAO,CAAC1d,EAAE,CAO7B,MAFA4U,AAJAA,CAAAA,EAAUA,EAAQc,IAAI,CAAC,IAAMqI,EAAWnB,MAAM,CAACe,GAAS,EAIhDK,KAAK,CAAChI,IAEP0E,CACT,Ka6I6B,IAAI,CAACK,QAAQ,EAG/B,IAAI,CAACA,QAAQ,AACtB,CAUOkD,MAAMvD,CAAoC,CAAE,KAM7CwD,EALJ,GAAI,AAAkB,OAAlB,IAAI,CAACnD,QAAQ,CACf,MAAM,qBAAkE,CAAlE,AAAI5a,MAAM,yDAAV,qB,MAAA,O,WAAA,G,aAAA,EAAiE,GAKzE,GAAI,AAAyB,UAAzB,OAAO,IAAI,CAAC4a,QAAQ,CACtBmD,KbjK2B7O,EaiK3B6O,EAAY,EbjKe7O,EaiKG,IAAI,CAAC0L,QAAQ,CbhKxC,IAAIzE,eAAe,CACxBC,MAAMC,CAAU,EACdA,EAAWC,OAAO,CAACP,GAAQiI,MAAM,CAAC9O,IAClCmH,EAAWE,KAAK,EAClB,CACF,Ia2JiD,MAE7CwH,EADSjf,MAAMiG,OAAO,CAAC,IAAI,CAAC6V,QAAQ,EACxB,IAAI,CAACA,QAAQ,CAChBxU,OAAOiX,QAAQ,CAAC,IAAI,CAACzC,QAAQ,EAC1B,CAAC3E,GAAiB,IAAI,CAAC2E,QAAQ,EAAE,CAEjC,CAAC,IAAI,CAACA,QAAQ,CAAC,CAI7BmD,EAAUlU,IAAI,CAAC0Q,GAGf,IAAI,CAACK,QAAQ,CAAGmD,CAClB,CASA,MAAatB,OAAOe,CAAoC,CAAiB,CACvE,GAAI,CACF,MAAM,IAAI,CAACjD,QAAQ,CAACkC,MAAM,CAACe,EAAU,CAKnCE,aAAc,EAChB,GAII,IAAI,CAACZ,SAAS,EAAE,MAAM,IAAI,CAACA,SAAS,CAGxC,MAAMU,EAASjH,KAAK,EACtB,CAAE,MAAOnB,EAAK,CAIZ,GAAIiF,GAAajF,GAAM,YAErB,MAAMoI,EAASxC,KAAK,CAAC5F,EAQvB,OAAMA,CACR,CACF,CAQA,MAAakF,mBAAmB9V,CAAmB,CAAE,CACnD,MAAM8V,GAAmB,IAAI,CAACC,QAAQ,CAAE/V,EAAK,IAAI,CAACsY,SAAS,CAC7D,CACF,CCvSO,IAAWmB,GAASA,SAATA,CAAS,E,OAGxB,gBAIA,wBAKA,sBAKA,wBAKA,gBAtBeA,C,MCYX,eAAeC,GACpBC,CAA8B,E,IAK1BA,EAQIA,EAXR,MAAO,CACL,GAAGA,CAAU,CACb7Y,MACE6Y,AAAAA,CAAgB,MAAhBA,CAAAA,EAAAA,EAAW7Y,KAAK,AAAD,EAAC,OAAhB6Y,EAAkBC,IAAI,AAAD,IAAMzI,GAAAA,KAAqB,CAC5C,CACEyI,KAAMzI,GAAAA,KAAqB,CAC3B0I,KAAM,MAAMF,EAAW7Y,KAAK,CAAC+Y,IAAI,CAACjB,iBAAiB,CAAC,IACpDkB,SAAUH,EAAW7Y,KAAK,CAACgZ,QAAQ,CACnC1a,QAASua,EAAW7Y,KAAK,CAAC1B,OAAO,CACjC2a,OAAQJ,EAAW7Y,KAAK,CAACiZ,MAAM,AACjC,EACAJ,AAAAA,CAAgB,MAAhBA,CAAAA,EAAAA,EAAW7Y,KAAK,AAAD,EAAC,OAAhB6Y,EAAkBC,IAAI,AAAD,IAAMzI,GAAAA,QAAwB,CACjD,CACEyI,KAAMzI,GAAAA,QAAwB,CAC9B0I,KAAM,MAAMF,EAAW7Y,KAAK,CAAC+Y,IAAI,CAACjB,iBAAiB,CAAC,IACpDoB,UAAWL,EAAW7Y,KAAK,CAACkZ,SAAS,CACrCC,QAASN,EAAW7Y,KAAK,CAACmZ,OAAO,CACjC7a,QAASua,EAAW7Y,KAAK,CAAC1B,OAAO,CACjC2a,OAAQJ,EAAW7Y,KAAK,CAACiZ,MAAM,CAC/BG,YAAaP,EAAW7Y,KAAK,CAACoZ,WAAW,AAC3C,EACAP,EAAW7Y,KAAK,AAC1B,CACF,CAEO,eAAeqZ,GACpB/D,CAA8C,E,IAS1CA,EAQIA,SAfR,AAAKA,EAEE,CACLgE,OAAQhE,EAASgE,MAAM,CACvBC,QAASjE,EAASiE,OAAO,CACzBC,aAAclE,EAASkE,YAAY,CACnCxZ,MACEsV,AAAAA,CAAc,MAAdA,CAAAA,EAAAA,EAAStV,KAAK,AAAD,EAAC,OAAdsV,EAAgBwD,IAAI,AAAD,IAAMzI,GAAAA,KAAqB,CACzC,CACCyI,KAAMzI,GAAAA,KAAqB,CAC3B0I,KAAM3B,GAAa,UAAU,CAAC9B,EAAStV,KAAK,CAAC+Y,IAAI,EACjDC,SAAU1D,EAAStV,KAAK,CAACgZ,QAAQ,CACjC1a,QAASgX,EAAStV,KAAK,CAAC1B,OAAO,CAC/B2a,OAAQ3D,EAAStV,KAAK,CAACiZ,MAAM,AAC/B,EACA3D,AAAAA,CAAc,MAAdA,CAAAA,EAAAA,EAAStV,KAAK,AAAD,EAAC,OAAdsV,EAAgBwD,IAAI,AAAD,IAAMzI,GAAAA,QAAwB,CAC9C,CACCyI,KAAMzI,GAAAA,QAAwB,CAC9B0I,KAAM3B,GAAa,UAAU,CAAC9B,EAAStV,KAAK,CAAC+Y,IAAI,EACjDI,QAAS7D,EAAStV,KAAK,CAACmZ,OAAO,CAC/B7a,QAASgX,EAAStV,KAAK,CAAC1B,OAAO,CAC/B2a,OAAQ3D,EAAStV,KAAK,CAACiZ,MAAM,CAC7BC,UAAW5D,EAAStV,KAAK,CAACkZ,SAAS,CACnCE,YAAa9D,EAAStV,KAAK,CAACoZ,WAAW,AACzC,EACA9D,EAAStV,KAAK,AACxB,EA1BsB,IA2BxB,CCnDe,MAAMyZ,GA2BnBvW,YAAYwW,CAAqB,CAAE,C,KA1BlBC,OAAO,CAAGtK,GAAQ,MAAM,CAIvC,CAGAC,WAAY,CAAC,CAAE9N,IAAAA,CAAG,CAAEhD,qBAAAA,CAAoB,CAAE,GACxC,CAAC,EAAEgD,EAAI,CAAC,EAAEhD,EAAuB,IAAM,IAAI,CAAC,CAI9C+Q,YAAaQ,EACf,GAcE,IAAI,CAAC2J,YAAY,CAAGA,CACtB,CAEA,MAAahb,IACX8C,CAAkB,CAClBoY,CAAoC,CACpCC,CAQC,CACmC,CAGpC,GAAI,CAACrY,EACH,OAAOoY,EAAkB,CAAEE,YAAa,GAAOC,mBAAoB,IAAK,GAG1E,GAAM,CACJC,iBAAAA,CAAgB,CAChBxb,qBAAAA,EAAuB,EAAK,CAC5Byb,WAAAA,EAAa,EAAK,CAClBC,kBAAAA,EAAoB,EAAK,CACzB1C,UAAAA,CAAS,CACV,CAAGqC,EAEEvE,EAAW,MAAM,IAAI,CAACqE,OAAO,CAAChK,KAAK,CACvC,CAAEnO,IAAAA,EAAKhD,qBAAAA,CAAqB,EAC5B,CAACoR,EAAUX,KACT,IAAMkL,EAAQ,W,IAKV,EAFF,GACE,IAAI,CAACT,YAAY,EACjB,CAAsB,MAAtB,OAAI,CAACU,iBAAiB,AAAD,EAAC,OAAtB,EAAwB5Y,GAAG,AAAD,IAAMoO,GAChC,IAAI,CAACwK,iBAAiB,CAACC,SAAS,CAAGrhB,KAAKshB,GAAG,GAE3C,OAAO,IAAI,CAACF,iBAAiB,CAACrO,KAAK,CAIrC,IAAM+M,EAAOyB,ADpBhB,SACLC,CAAoB,EAEpB,OAAQA,GACN,KAAK7B,GAAAA,KAAe,CAClB,OAAOrI,GAAAA,KAA0B,AACnC,MAAKqI,GAAAA,QAAkB,CACrB,OAAOrI,GAAAA,QAA6B,AACtC,MAAKqI,GAAAA,KAAe,CAClB,OAAOrI,GAAAA,KAA0B,AACnC,MAAKqI,GAAAA,SAAmB,CACtB,OAAOrI,GAAAA,SAA8B,AACvC,SACE,MAAM,qBAA+C,CAA/C,AAAI5V,MAAM,CAAC,sBAAsB,EAAE8f,EAAU,CAAC,EAA9C,qB,MAAA,M,WAAA,G,aAAA,EAA8C,EACxD,CACF,ECKuDX,EAAQW,SAAS,EAE1DC,EAAW,GACXC,EAAuD,KAC3D,GAAI,CASF,GAAIA,AARJA,CAAAA,EAAiB,AAAC,IAAI,CAAChB,YAAY,CAM/B,KALA,MAAMM,EAAiBtb,GAAG,CAAC8C,EAAK,CAC9BsX,KAAAA,EACAoB,kBAAmBL,EAAQK,iBAAiB,CAC5CD,WAAAA,CACF,EACG,GAEe,CAACzb,IACrByQ,EAAQyL,GACRD,EAAW,GAEP,CAACC,EAAenB,OAAO,EAAIM,EAAQc,UAAU,EAG/C,OAAO,KAIX,IAAM9B,EAAa,MAAMe,EAAkB,CACzCE,YAAaW,EACbV,mBAAoBW,EACpBE,eAAgB,EAClB,GAIA,GAAI,CAAC/B,EAGH,OADI,IAAI,CAACa,YAAY,EAAE,KAAI,CAACU,iBAAiB,CAAGta,MAAQ,EACjD,KAGT,IAAM+a,EAAe,MAAMjC,GAAuB,CAChD,GAAGC,CAAU,CACbS,OAAQ,CAACoB,CACX,GACA,GAAI,CAACG,EAGH,OADI,IAAI,CAACnB,YAAY,EAAE,KAAI,CAACU,iBAAiB,CAAGta,MAAQ,EACjD,KA4BT,OAvBKtB,GAAyBic,IAC5BxL,EAAQ4L,GACRJ,EAAW,IAKTI,EAAarB,YAAY,GACvB,IAAI,CAACE,YAAY,CACnB,IAAI,CAACU,iBAAiB,CAAG,CACvB5Y,IAAKoO,EACL7D,MAAO8O,EACPR,UAAWrhB,KAAKshB,GAAG,GAAK,GAC1B,EAEA,MAAMN,EAAiBjW,GAAG,CAACvC,EAAKqZ,EAAa7a,KAAK,CAAE,CAClDwZ,aAAcqB,EAAarB,YAAY,CACvCU,kBAAAA,EACAD,WAAAA,CACF,IAIGY,CACT,CAAE,MAAO/K,EAAK,CAGZ,GAAI4K,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAgBlB,YAAY,CAAE,CAChC,IAAMsB,EAAgB1gB,KAAK2gB,GAAG,CAC5B3gB,KAAK4gB,GAAG,CAACN,EAAelB,YAAY,CAACyB,UAAU,EAAI,EAAG,GACtD,IAGIC,EACJR,AAAuC5a,SAAvC4a,EAAelB,YAAY,CAAC2B,MAAM,CAC9Brb,OACA1F,KAAK4gB,GAAG,CACNF,EAAgB,EAChBJ,EAAelB,YAAY,CAAC2B,MAAM,CAG1C,OAAMnB,EAAiBjW,GAAG,CAACvC,EAAKkZ,EAAe1a,KAAK,CAAE,CACpDwZ,aAAc,CAAEyB,WAAYH,EAAeK,OAAQD,CAAU,EAC7DhB,kBAAAA,EACAD,WAAAA,CACF,EACF,CAIA,GAAIQ,EAEF,OADArf,QAAQggB,KAAK,CAACtL,GACP,IAIT,OAAMA,CACR,CACF,KAOA,OAHI0H,GACFA,EAAU2C,GAELA,CACT,GAGF,OAAOd,GAAqB/D,EAC9B,CACF,C,kJCzLO,OAAM+F,GAMXnY,YAImBV,CAAwC,CACzD,C,KADiBA,EAAE,CAAFA,E,KANF8Y,KAAK,CAAW,EAAE,AAOhC,CAQKC,iBAAiBC,CAAiB,CAAQ,CAEhD,IAAK,IAAMC,KAAQ,IAAI,CAACH,KAAK,CAC3B,GAAIG,CAAI,CAAC,EAAE,GAAKD,EACd,OAAOC,EAIX,IAAMtM,EAAU,IAAI,CAAC3M,EAAE,CAACM,KAAK,CAAC0Y,GAI9BrM,EAAQoJ,KAAK,CAAC,KAAO,GAGrB,IAAMkD,EAAa,CAACD,EAAWrM,EAAS,EAAE,CAAC,CAG3C,OAFA,IAAI,CAACmM,KAAK,CAAC/W,IAAI,CAACkX,GAETA,CACT,CAYOrX,OAAOtG,CAAgB,CAAE0C,CAAqB,CAAQ,CAE3D,IAAMib,EAAO,IAAI,CAACF,gBAAgB,CAACvd,KAAAA,OAAY,CAACF,IAE1CqR,EAAUsM,CAAI,CAAC,EAAE,CAACxL,IAAI,CAAC,IAAM,IAAI,CAACzN,EAAE,CAACG,SAAS,CAAC7E,EAAU0C,IAI/D2O,EAAQoJ,KAAK,CAAC,KAAO,GAGrBkD,CAAI,CAAC,EAAE,CAAClX,IAAI,CAAC4K,EACf,CAKOuM,MAAyB,CAC9B,OAAOjhB,QAAQkhB,GAAG,CAAC,IAAI,CAACL,KAAK,CAACM,OAAO,CAAC,AAACH,GAASA,CAAI,CAAC,EAAE,EACzD,CACF,C,iFC/De,OAAMI,G,eAKJC,KAAK,CAAY,CAAC,CAAC3gB,QAAQoY,GAAG,CAACwI,wBAAwB,AAGtE7Y,aAAY8Y,CAA2B,CAAE,CACvC,IAAI,CAACxZ,EAAE,CAAGwZ,EAAIxZ,EAAE,CAChB,IAAI,CAACyZ,WAAW,CAAGD,EAAIC,WAAW,CAClC,IAAI,CAACC,aAAa,CAAGF,EAAIE,aAAa,CACtC,IAAI,CAACC,eAAe,CAAGH,EAAIG,eAAe,CAEtCH,EAAII,kBAAkB,CACnBP,GAAgBQ,WAAW,CAMrBR,GAAgBC,KAAK,EAC9B1gB,QAAQkhB,GAAG,CAAC,qCANRT,GAAgBC,KAAK,EACvB1gB,QAAQkhB,GAAG,CAAC,sCAGdT,GAAgBQ,WAAW,CAAGE,AAAAA,GAAAA,GAAAA,cAAAA,AAAAA,EAAeP,EAAII,kBAAkB,GAI5DP,GAAgBC,KAAK,EAC9B1gB,QAAQkhB,GAAG,CAAC,yCAEhB,CAEOE,mBAA0B,CAAC,CAElC,MAAaC,cACX,GAAGC,CAA+C,CAClD,CACA,GAAI,CAACC,EAAK,CAAGD,EAOb,GANAC,EAAO,AAAgB,UAAhB,OAAOA,EAAoB,CAACA,EAAK,CAAGA,EAEvCd,GAAgBC,KAAK,EACvB1gB,QAAQkhB,GAAG,CAAC,gBAAiBK,GAG3BA,AAAgB,IAAhBA,EAAKxW,MAAM,CAIf,IAAK,IAAMrE,KAAO6a,EACZ,AAACC,GAAAA,YAAAA,CAAAA,GAAgB,CAAC9a,IACpB8a,GAAAA,YAAAA,CAAAA,GAAgB,CAAC9a,EAAK9I,KAAKshB,GAAG,GAGpC,CAEA,MAAa5b,IAAI,GAAGge,CAAqC,CAAE,KAI9Cb,EA4LTrb,EACAA,EAiBSA,EA9IDA,EACiBA,EAmHrBqb,EAYerb,EAnMrB,GAAM,CAACgB,EAAKwa,EAAI,CAAGU,EACb,CAAE5D,KAAAA,CAAI,CAAE,CAAGkD,EAEbxb,EAAO,AAA2B,MAA3Bqb,CAAAA,EAAAA,GAAgBQ,WAAW,AAAD,EAAC,OAA3BR,EAA6Bnd,GAAG,CAAC8C,GAW5C,GATIqa,GAAgBC,KAAK,GACnBhD,IAASxI,GAAAA,KAA0B,CACrClV,QAAQkhB,GAAG,CAAC,MAAO9a,EAAKwa,EAAIW,IAAI,CAAE7D,EAAM,CAAC,CAACtY,GAE1CpF,QAAQkhB,GAAG,CAAC,MAAO9a,EAAKsX,EAAM,CAAC,CAACtY,IAKhC,CAACA,EAA6C,CAChD,GAAIsY,IAASxI,GAAAA,SAA8B,CACzC,GAAI,CACF,IAAMxS,EAAW,IAAI,CAAC+e,WAAW,CAC/B,CAAC,EAAErb,EAAI,KAAK,CAAC,CACb8O,GAAAA,SAA8B,EAE1BwM,EAAW,MAAM,IAAI,CAACta,EAAE,CAACC,QAAQ,CAAC3E,GAClC,CAAEif,MAAAA,CAAK,CAAE,CAAG,MAAM,IAAI,CAACva,EAAE,CAACQ,IAAI,CAAClF,GAE/BiQ,EAAOpU,KAAKsH,KAAK,CACrB,MAAM,IAAI,CAACuB,EAAE,CAACC,QAAQ,CACpB3E,EAASoK,OAAO,CAAC,UAAWpM,EAAAA,EAAgBA,EAC5C,SAaJ,MATsC,CACpCkhB,aAAcD,EAAME,OAAO,GAC3Bjd,MAAO,CACL8Y,KAAMzI,GAAAA,SAAyB,CAC/B6M,KAAMJ,EACNxe,QAASyP,EAAKzP,OAAO,CACrB2a,OAAQlL,EAAKkL,MAAM,AACrB,CACF,CAEF,CAAE,KAAM,CACN,OAAO,IACT,CAGF,GAAI,CACF,IAAMnb,EAAW,IAAI,CAAC+e,WAAW,CAC/B/D,IAASxI,GAAAA,KAA0B,CAAG9O,EAAM,CAAC,EAAEA,EAAI,KAAK,CAAC,CACzDsX,GAGIgE,EAAW,MAAM,IAAI,CAACta,EAAE,CAACC,QAAQ,CAAC3E,EAAU,QAC5C,CAAEif,MAAAA,CAAK,CAAE,CAAG,MAAM,IAAI,CAACva,EAAE,CAACQ,IAAI,CAAClF,GAErC,GAAIgb,IAASxI,GAAAA,KAA0B,CAAE,CACvC,GAAM,CAAEqM,KAAAA,CAAI,CAAEQ,SAAAA,CAAQ,CAAEC,SAAAA,CAAQ,CAAE,CAAGpB,EAErC,GAAI,CAAC,IAAI,CAACC,WAAW,CAAE,OAAO,KAE9B,IAAMe,EAAeD,EAAME,OAAO,GAC5BI,EAA+B1jB,KAAKsH,KAAK,CAAC6b,GAMhD,GALAtc,EAAO,CACLwc,aAAAA,EACAhd,MAAOqd,CACT,EAEI7c,AAAAA,CAAU,MAAVA,CAAAA,EAAAA,EAAKR,KAAK,AAAD,EAAC,OAAVQ,EAAYsY,IAAI,AAAD,IAAMzI,GAAAA,KAAqB,CAAE,CAC9C,IAAMiN,EAAa,AAAU,MAAV9c,CAAAA,EAAAA,EAAKR,KAAK,AAAD,EAAC,OAAVQ,EAAYmc,IAAI,CAK9BA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAM1R,KAAK,CAAC,AAACnJ,GAAQwb,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAYlR,QAAQ,CAACtK,GAAI,IAC7C+Z,GAAgBC,KAAK,EACvB1gB,QAAQkhB,GAAG,CAAC,8BAA+BK,EAAMW,GAEnD,MAAM,IAAI,CAACvZ,GAAG,CAACvC,EAAKhB,EAAKR,KAAK,CAAE,CAC9Bud,WAAY,GACZZ,KAAAA,EACAQ,SAAAA,EACAC,SAAAA,CACF,GAEJ,CACF,MAAO,GAAItE,IAASxI,GAAAA,QAA6B,CAAE,KAG7CvC,EAUAyP,EA8BArE,EAvCJ,GAAI,CACFpL,EAAOpU,KAAKsH,KAAK,CACf,MAAM,IAAI,CAACuB,EAAE,CAACC,QAAQ,CACpB3E,EAASoK,OAAO,CAAC,UAAWpM,EAAAA,EAAgBA,EAC5C,QAGN,CAAE,KAAM,CAAC,CAGT,GAAIiS,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAM0P,YAAY,CAAE,CAMtB,IAAMrE,EAAmC,IAAIjgB,IAC7CqkB,EAAmBpE,EACnB,IAAMsE,EAAclc,EAAM9F,EAAAA,EAAuBA,AACjD,OAAMjB,QAAQkhB,GAAG,CACf5N,EAAK0P,YAAY,CAACrW,GAAG,CAAC,MAAOuW,IAC3B,IAAMC,EAAsB,IAAI,CAACf,WAAW,CAC1Ca,EAAcC,EAAchiB,EAAAA,EAAkBA,CAC9C2U,GAAAA,QAA6B,EAE/B,GAAI,CACF8I,EAAYrV,GAAG,CACb4Z,EACA,MAAM,IAAI,CAACnb,EAAE,CAACC,QAAQ,CAACmb,GAE3B,CAAE,KAAM,CAIR,CACF,GAEJ,CAGI,AAAC5B,EAAI/B,UAAU,EACjBd,CAAAA,EAAU,MAAM,IAAI,CAAC3W,EAAE,CAACC,QAAQ,CAC9B,IAAI,CAACoa,WAAW,CACd,CAAC,EAAErb,EAAI,EAAEwa,EAAI9B,iBAAiB,CAAGze,EAAAA,EAAmBA,CAAGG,EAAAA,EAAUA,CAAC,CAAC,CACnE0U,GAAAA,QAA6B,IAKnC9P,EAAO,CACLwc,aAAcD,EAAME,OAAO,GAC3Bjd,MAAO,CACL8Y,KAAMzI,GAAAA,QAAwB,CAC9B0I,KAAM+D,EACN3D,QAAAA,EACAD,UAAWnL,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMmL,SAAS,CAC1B5a,QAASyP,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMzP,OAAO,CACtB2a,OAAQlL,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMkL,MAAM,CACpBG,YAAaoE,CACf,CACF,CACF,MAAO,GAAI1E,IAASxI,GAAAA,KAA0B,CAAE,CAE9C,IADIvC,EACAiL,EAA4B,CAAC,CAE7B,AAACgD,CAAAA,EAAI/B,UAAU,EACjBjB,CAAAA,EAAWrf,KAAKsH,KAAK,CACnB,MAAM,IAAI,CAACuB,EAAE,CAACC,QAAQ,CACpB,IAAI,CAACoa,WAAW,CACd,CAAC,EAAErb,EAAI,EAAE3F,EAAAA,EAAgBA,CAAC,CAAC,CAC3ByU,GAAAA,KAA0B,EAE5B,UAKN9P,EAAO,CACLwc,aAAcD,EAAME,OAAO,GAC3Bjd,MAAO,CACL8Y,KAAMzI,GAAAA,KAAqB,CAC3B0I,KAAM+D,EACN9D,SAAAA,EACA1a,QAASyP,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMzP,OAAO,CACtB2a,OAAQlL,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMkL,MAAM,AACtB,CACF,CACF,MACE,MAAM,qBAEL,CAFK,AAAIve,MACR,CAAC,iCAAiC,EAAEoe,EAAK,sBAAsB,CAAC,EAD5D,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAGEtY,G,CACyB,MAA3Bqb,CAAAA,EAAAA,GAAgBQ,WAAW,AAAD,GAA1BR,EAA6B9X,GAAG,CAACvC,EAAKhB,EAAI,CAE9C,CAAE,KAAM,CACN,OAAO,IACT,CACF,CAEA,GACEA,CAAAA,MAAAA,GAAAA,AAAW,MAAXA,CAAAA,EAAAA,EAAMR,KAAK,AAAD,EAAC,OAAXQ,EAAasY,IAAI,IAAKzI,GAAAA,QAAwB,EAC9C7P,CAAAA,MAAAA,GAAAA,AAAW,MAAXA,CAAAA,EAAAA,EAAMR,KAAK,AAAD,EAAC,OAAXQ,EAAasY,IAAI,IAAKzI,GAAAA,KAAqB,CAC3C,CAEA,IADIwN,EACEC,EAAa,AAAkB,MAAlBtd,CAAAA,EAAAA,EAAKR,KAAK,CAAC1B,OAAO,AAAD,EAAC,OAAlBkC,CAAoB,CAACzE,EAAAA,EAAsBA,CAAC,CAM/D,GAJI,AAAsB,UAAtB,OAAO+hB,GACTD,CAAAA,EAAYC,EAAWvW,KAAK,CAAC,IAAG,EAG9BsW,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAW1X,MAAM,AAAD,GAIdoT,AAAAA,GAAAA,GAAAA,OAAAA,AAAAA,EAAQsE,EAAWrd,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMwc,YAAY,AAAD,GAAKhkB,KAAKshB,GAAG,IACnD,OAAO,IAGb,MAAW9Z,MAAAA,GAAAA,AAAW,MAAXA,CAAAA,EAAAA,EAAMR,KAAK,AAAD,EAAC,OAAXQ,EAAasY,IAAI,IAAKzI,GAAAA,KAAqB,EAM7B0N,AAJrB/B,CAAAA,EAAIlD,IAAI,GAAKxI,GAAAA,KAA0B,CACnC,IAAK0L,EAAIW,IAAI,EAAI,EAAE,IAAOX,EAAIgC,QAAQ,EAAI,EAAE,CAAE,CAC9C,EAAE,AAAD,EAE6BvQ,IAAI,CAAC,AAAC3L,GACxC,EAAI,IAAI,CAACqa,eAAe,CAAC/P,QAAQ,CAACtK,IAI3ByX,AAAAA,GAAAA,GAAAA,OAAAA,AAAAA,EAAQ,CAACzX,EAAI,CAAEtB,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMwc,YAAY,AAAD,GAAKhkB,KAAKshB,GAAG,MAKpD9Z,CAAAA,EAAOV,MAAQ,EAInB,OAAOU,GAAQ,IACjB,CAEA,MAAauD,IACXvC,CAAW,CACXhB,CAAkC,CAClCwb,CAAyE,CACzE,C,IACAH,EASA,G,AAT2B,MAA3BA,CAAAA,EAAAA,GAAgBQ,WAAW,AAAD,GAA1BR,EAA6B9X,GAAG,CAACvC,EAAK,CACpCxB,MAAOQ,EACPwc,aAAchkB,KAAKshB,GAAG,EACxB,GAEIuB,GAAgBC,KAAK,EACvB1gB,QAAQkhB,GAAG,CAAC,MAAO9a,GAGjB,CAAC,IAAI,CAACya,WAAW,EAAI,CAACzb,EAAM,OAIhC,IAAMmV,EAAS,IAAI0F,GAAgB,IAAI,CAAC7Y,EAAE,EAE1C,GAAIhC,EAAKsY,IAAI,GAAKzI,GAAAA,SAAyB,CAAE,CAC3C,IAAMvS,EAAW,IAAI,CAAC+e,WAAW,CAC/B,CAAC,EAAErb,EAAI,KAAK,CAAC,CACb8O,GAAAA,SAA8B,EAGhCqF,EAAOvR,MAAM,CAACtG,EAAU0C,EAAK0c,IAAI,EAEjC,IAAMnP,EAAsB,CAC1BzP,QAASkC,EAAKlC,OAAO,CACrB2a,OAAQzY,EAAKyY,MAAM,CACnBC,UAAWpZ,OACX2d,aAAc3d,MAChB,EAEA6V,EAAOvR,MAAM,CACXtG,EAASoK,OAAO,CAAC,UAAWpM,EAAAA,EAAgBA,EAC5CnC,KAAKskB,SAAS,CAAClQ,EAAM,KAAM,GAE/B,MAAO,GACLvN,EAAKsY,IAAI,GAAKzI,GAAAA,KAAqB,EACnC7P,EAAKsY,IAAI,GAAKzI,GAAAA,QAAwB,CACtC,CACA,IAAM6N,EAAY1d,EAAKsY,IAAI,GAAKzI,GAAAA,QAAwB,CAClD8N,EAAW,IAAI,CAACtB,WAAW,CAC/B,CAAC,EAAErb,EAAI,KAAK,CAAC,CACb0c,EAAY5N,GAAAA,QAA6B,CAAGA,GAAAA,KAA0B,EAwBxE,GArBAqF,EAAOvR,MAAM,CAAC+Z,EAAU3d,EAAKuY,IAAI,EAG7B,AAACiD,EAAIuB,UAAU,EAAKvB,EAAI/B,UAAU,EACpCtE,EAAOvR,MAAM,CACX,IAAI,CAACyY,WAAW,CACd,CAAC,EAAErb,EAAI,EACL0c,EACIlC,EAAI9B,iBAAiB,CACnBze,EAAAA,EAAmBA,CACnBG,EAAAA,EAAUA,CACZC,EAAAA,EAAgBA,CAAAA,CACpB,CACFqiB,EACI5N,GAAAA,QAA6B,CAC7BA,GAAAA,KAA0B,EAEhC4N,EAAY1d,EAAK2Y,OAAO,CAAIxf,KAAKskB,SAAS,CAACzd,EAAKwY,QAAQ,GAIxDxY,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMsY,IAAI,AAAD,IAAMzI,GAAAA,QAAwB,CAAE,KACvCoN,EACJ,GAAIjd,EAAK4Y,WAAW,CAAE,CACpBqE,EAAe,EAAE,CACjB,IAAMC,EAAcS,EAASjW,OAAO,CAClC,UACAxM,EAAAA,EAAuBA,EAGzB,IAAK,GAAM,CAACiiB,EAAa1b,EAAO,GAAIzB,EAAK4Y,WAAW,CAAE,CACpDqE,EAAalZ,IAAI,CAACoZ,GAClB,IAAMC,EACJF,EAAcC,EAAchiB,EAAAA,EAAkBA,CAChDga,EAAOvR,MAAM,CAACwZ,EAAqB3b,EACrC,CACF,CAEA,IAAM8L,EAAsB,CAC1BzP,QAASkC,EAAKlC,OAAO,CACrB2a,OAAQzY,EAAKyY,MAAM,CACnBC,UAAW1Y,EAAK0Y,SAAS,CACzBuE,aAAAA,CACF,EAEA9H,EAAOvR,MAAM,CACX+Z,EAASjW,OAAO,CAAC,UAAWpM,EAAAA,EAAgBA,EAC5CnC,KAAKskB,SAAS,CAAClQ,GAEnB,CACF,MAAO,GAAIvN,EAAKsY,IAAI,GAAKzI,GAAAA,KAAqB,CAAE,CAC9C,IAAMvS,EAAW,IAAI,CAAC+e,WAAW,CAACrb,EAAK8O,GAAAA,KAA0B,EACjEqF,EAAOvR,MAAM,CACXtG,EACAnE,KAAKskB,SAAS,CAAC,CACb,GAAGzd,CAAI,CACPmc,KAAMX,EAAIuB,UAAU,CAAGvB,EAAIW,IAAI,CAAG,EAAE,AACtC,GAEJ,CAGA,MAAMhH,EAAO+F,IAAI,EACnB,CAEQmB,YAAYvW,CAAgB,CAAEwS,CAA0B,CAAU,CACxE,OAAQA,GACN,KAAKxI,GAAAA,KAA0B,CAG7B,OAAOtS,KAAAA,IAAS,CACd,IAAI,CAACke,aAAa,CAClB,KACA,QACA,cACA5V,EAEJ,MAAKgK,GAAAA,KAA0B,CAC7B,OAAOtS,KAAAA,IAAS,CAAC,IAAI,CAACke,aAAa,CAAE,QAAS5V,EAChD,MAAKgK,GAAAA,KAA0B,CAC/B,KAAKA,GAAAA,QAA6B,CAClC,KAAKA,GAAAA,SAA8B,CACjC,OAAOtS,KAAAA,IAAS,CAAC,IAAI,CAACke,aAAa,CAAE,MAAO5V,EAC9C,SACE,MAAM,qBAA+C,CAA/C,AAAI5L,MAAM,CAAC,2BAA2B,EAAEoe,EAAK,CAAC,EAA9C,qB,MAAA,O,WAAA,G,aAAA,EAA8C,EACxD,CACF,CACF,CCjbO,SAASsF,GAAQ9X,CAAgB,EACtC,OAAOA,EAAS4B,OAAO,CAAC,mBAAoB,KAAO,GACrD,C,wKCzBO,OAAMmW,WAAuB3jB,MAClCwI,YAAYob,CAAe,CAAEnf,CAAsB,CAAE,CACnD,KAAK,CACF,cAAamf,CAAAA,EAAQtW,QAAQ,CAAC,KAAOsW,EAAUA,EAAU,GAAE,EAAE,6BAC9Dnf,GAEF,IAAI,CAACkF,IAAI,CAAG,gBACd,CACF,C,4ECyEO,OAAMka,G,eAaazC,KAAK,CAC3B,CAAC,CAAC3gB,QAAQoY,GAAG,CAACwI,wBAAwB,AASxC7Y,aAAY,CACVV,GAAAA,CAAE,CACFgc,IAAAA,CAAG,CACHvC,YAAAA,CAAW,CACXwC,YAAAA,CAAW,CACXvC,cAAAA,CAAa,CACbwC,eAAAA,CAAc,CACdtC,mBAAAA,CAAkB,CAClBuC,qBAAAA,CAAoB,CACpBC,oBAAAA,CAAmB,CACnBC,gBAAAA,CAAe,CACfC,4BAAAA,CAA2B,CAa5B,CAAE,KA+CC,IAQE,G,MAvFWC,KAAK,CAAG,IAAI5lB,IAiC3B,IAAI,CAAC6lB,qBAAqB,CAAG/lB,EAAQ4lB,EAErC,IAAMI,EAAsB1lB,OAAOsU,GAAG,CAAC,wBACjCqR,EAIF7Z,WAEJ,GAAKwZ,EAcMN,GAAiBzC,KAAK,EAC/B1gB,QAAQkhB,GAAG,CAAC,6BAA8BuC,EAAgBxa,IAAI,MAf1C,CAEpB,IAAM8a,EAAqBD,CAAW,CAACD,EAAoB,CAEvDE,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAoBC,UAAU,AAAD,EAC/BP,EAAkBM,EAAmBC,UAAU,CAE3C5c,GAAM0Z,IACJqC,GAAiBzC,KAAK,EACxB1gB,QAAQkhB,GAAG,CAAC,kCAEduC,EAAkBhD,GAGxB,CAII1gB,QAAQoY,GAAG,CAAC8L,yBAAyB,EAEvCjD,CAAAA,EAAqBxR,SAASzP,QAAQoY,GAAG,CAAC8L,yBAAyB,CAAE,GAAE,EAEzE,IAAI,CAACb,GAAG,CAAGA,EACX,IAAI,CAACc,kBAAkB,CAAGnkB,AAAwC,SAAxCA,QAAQoY,GAAG,CAACgM,uBAAuB,CAI7D,IAAI,CADmB,WACH,CAAGd,EACvB,IAAI,CAACC,cAAc,CAAGA,EACtB,IAAI,CAACI,2BAA2B,CAAGA,EACnC,IAAI,CAACU,iBAAiB,CAAGb,IACzB,IAAI,CAACc,aAAa,CAAG,IAAIC,GAAAA,mBAAmBA,CAAC,IAAI,CAACF,iBAAiB,EACnE,IAAI,CAACZ,mBAAmB,CAAGA,EAC3B,IAAIzC,EAA4B,EAAE,AAGhCuC,CAAAA,CAAc,CAACnjB,EAAAA,EAA2BA,CAAC,IACrB,MAAtB,OAAI,CAACikB,iBAAiB,AAAD,GAAC,AAAS,MAA/B,KAAwBG,OAAO,AAAD,EAAC,OAA/B,EAAiClhB,aAAa,GAE9C,KAAI,CAACD,oBAAoB,CAAG,EAAG,EAG7BigB,GACFtC,CAAAA,EAAkByD,AhC0TjB,SACLthB,CAA4B,CAC5BG,CAAiC,EAEjC,MAAO,AAAuD,UAAvD,OAAOH,CAAO,CAACtC,EAAAA,EAAkCA,CAAC,EACvDsC,CAAO,CAACrC,EAAAA,EAAsCA,CAAC,GAAKwC,EAClDH,CAAO,CAACtC,EAAAA,EAAkCA,CAAC,CAACuL,KAAK,CAAC,KAClD,EAAE,AACR,EgCjUQmX,EACsB,MAAtB,OAAI,CAACc,iBAAiB,AAAD,GAAC,AAAS,MAA/B,KAAwBG,OAAO,AAAD,EAAC,OAA/B,EAAiClhB,aAAa,GAI9CogB,GACF,KAAI,CAACgB,YAAY,CAAG,IAAIhB,EAAgB,CACtCL,IAAAA,EACAhc,GAAAA,EACAyZ,YAAAA,EACAC,cAAAA,EACAC,gBAAAA,EACAC,mBAAAA,EACA0D,gBAAiBpB,EACjBE,oBAAAA,CACF,EAAC,CAEL,CAEQmB,oBACNzZ,CAAgB,CAChB0Z,CAAgB,CAChBxB,CAAY,CACZvE,CAA+B,CACnB,CAGZ,GAAIuE,EACF,OAAOpkB,KAAK6lB,KAAK,CAACjV,YAAYkV,UAAU,CAAGlV,YAAYsP,GAAG,GAAK,KAEjE,IAAMd,EAAe,IAAI,CAACiG,aAAa,CAAC/gB,GAAG,CAAC0f,GAAQ9X,IAI9C6Z,EAA2B3G,EAC7BA,EAAayB,UAAU,CACvBhB,CAAAA,GAEE,EAON,MAJE,AAAoC,UAApC,OAAOkG,EACHA,AAA2B,IAA3BA,EAAkCH,EAClCG,CAGR,CAEAC,aAAa9Z,CAAgB,CAAEiX,CAAoB,CAAE,CACnD,OAAOA,EAAajX,EAAW0H,GAAkB1H,EACnD,CAEAkW,mBAAoB,C,IAClB,EAAAniB,C,AAAiB,OAAjBA,CAAAA,EAAA,IAAI,CAACwlB,YAAY,AAAD,GAAC,AAAmB,MAApC,GAAAxlB,EAAmBmiB,iBAAiB,AAAD,GAAnC,OAAAniB,EACF,CAEA,MAAMgmB,KAAKzQ,CAAgB,CAAuC,CAGhE,OAAa,CACX,IAAMyQ,EAAO,IAAI,CAACtB,KAAK,CAACrgB,GAAG,CAACkR,GAO5B,GALI2O,GAAiBzC,KAAK,EACxB1gB,QAAQkhB,GAAG,CAAC,WAAY1M,EAAU,CAAC,CAACyQ,GAIlC,CAACA,EAAM,KAGX,OAAMA,CACR,CAIA,GAAM,CAAEpR,QAAAA,CAAO,CAAEE,QAAAA,CAAO,CAAE,CAAG,IAAIH,GASjC,OAPIuP,GAAiBzC,KAAK,EACxB1gB,QAAQkhB,GAAG,CAAC,sBAAuB1M,GAIrC,IAAI,CAACmP,KAAK,CAAChb,GAAG,CAAC6L,EAAUT,GAElB,KAELF,IAIA,IAAI,CAAC8P,KAAK,CAACva,MAAM,CAACoL,EACpB,CACF,CAEA,MAAM6M,cAAcE,CAAuB,CAAiB,C,IACnDtiB,EAAP,OAAO,AAAiB,MAAjBA,CAAAA,EAAA,IAAI,CAACwlB,YAAY,AAAD,EAAC,OAAjBxlB,EAAmBoiB,aAAa,CAACE,EAC1C,CAGA,MAAM2D,iBACJ3a,CAAW,CACX4a,EAA8B,CAAC,CAAC,CACf,CAKjB,IAAMC,EAAuB,EAAE,CAEzB/P,EAAU,IAAIC,YACdiB,EAAU,IAAIC,YAEpB,GAAI2O,EAAKrD,IAAI,CAEX,GAAIqD,EAAKrD,IAAI,YAAY1M,WACvBgQ,EAAWjc,IAAI,CAACoN,EAAQjG,MAAM,CAAC6U,EAAKrD,IAAI,GACtCqD,EAAaE,OAAO,CAAGF,EAAKrD,IAAI,MAE/B,GAAI,AAAwC,YAAxC,OAAQqD,EAAKrD,IAAI,CAAS7L,SAAS,CAAiB,CAC3D,IAAMqP,EAAeH,EAAKrD,IAAI,CAExB5L,EAAuB,EAAE,CAE/B,GAAI,CACF,MAAMoP,EAAavJ,MAAM,CACvB,IAAIhB,eAAe,CACjBC,MAAMxF,CAAK,EACL,AAAiB,UAAjB,OAAOA,GACTU,EAAO/M,IAAI,CAACkM,EAAQiI,MAAM,CAAC9H,IAC3B4P,EAAWjc,IAAI,CAACqM,KAEhBU,EAAO/M,IAAI,CAACqM,GACZ4P,EAAWjc,IAAI,CAACoN,EAAQjG,MAAM,CAACkF,EAAO,CAAEO,OAAQ,EAAK,IAEzD,CACF,IAIFqP,EAAWjc,IAAI,CAACoN,EAAQjG,MAAM,IAG9B,IAAMvF,EAASmL,EAAOvJ,MAAM,CAAC,CAAC4Y,EAAOC,IAAQD,EAAQC,EAAIza,MAAM,CAAE,GAC3D0a,EAAc,IAAIrQ,WAAWrK,GAG/B2a,EAAS,EACb,IAAK,IAAMlQ,KAASU,EAClBuP,EAAY9c,GAAG,CAAC6M,EAAOkQ,GACvBA,GAAUlQ,EAAMzK,MAAM,AAGtBoa,CAAAA,EAAaE,OAAO,CAAGI,CAC3B,CAAE,MAAO/Q,EAAK,CACZ1U,QAAQggB,KAAK,CAAC,uBAAwBtL,EACxC,CACF,MACK,GAAI,AAAmC,YAAnC,OAAQyQ,EAAKrD,IAAI,CAASrZ,IAAI,CAAiB,CACtD,IAAMkd,EAAWR,EAAKrD,IAAI,CAE1B,IAAK,IAAM1b,KADT+e,EAAaE,OAAO,CAAGF,EAAKrD,IAAI,CAChB,IAAI/X,IAAI,IAAI4b,EAASld,IAAI,GAAG,GAAG,CAC/C,IAAMiB,EAASic,EAAS7a,MAAM,CAAC1E,GAC/Bgf,EAAWjc,IAAI,CACb,CAAC,EAAE/C,EAAI,CAAC,EACN,OAAM/G,QAAQkhB,GAAG,CACf7W,EAAOsC,GAAG,CAAC,MAAO4Z,GAChB,AAAI,AAAe,UAAf,OAAOA,EACFA,EAEA,MAAMA,EAAIC,IAAI,IAEvB,EAEJ9c,IAAI,CAAC,KAAK,CAAC,CAEjB,CAEF,MAAO,GAAI,AAA0C,YAA1C,OAAQoc,EAAKrD,IAAI,CAAS2D,WAAW,CAAiB,CAC/D,IAAMK,EAAOX,EAAKrD,IAAI,CAChB2D,EAAc,MAAMK,EAAKL,WAAW,GAC1CL,EAAWjc,IAAI,CAAC,MAAM2c,EAAKD,IAAI,IAC7BV,EAAaE,OAAO,CAAG,IAAIU,KAAK,CAACN,EAAY,CAAE,CAAEO,KAAMF,EAAKE,IAAI,AAAC,EACrE,KAAgC,UAArB,OAAOb,EAAKrD,IAAI,GACzBsD,EAAWjc,IAAI,CAACgc,EAAKrD,IAAI,EACvBqD,EAAaE,OAAO,CAAGF,EAAKrD,IAAI,EAItC,IAAM5e,EACJ,AAAqC,YAArC,MAAQiiB,AAAAA,CAAAA,EAAKjiB,OAAO,EAAI,CAAC,GAAGuF,IAAI,CAC5B9K,OAAOsoB,WAAW,CAACd,EAAKjiB,OAAO,EAC/BvF,OAAO2e,MAAM,CAAC,CAAC,EAAG6I,EAAKjiB,OAAO,CAIhC,iBAAiBA,GAAS,OAAOA,EAAQ,WAAc,CACvD,eAAgBA,GAAS,OAAOA,EAAQ,UAAa,CAEzD,IAAMgjB,EAAc3nB,KAAKskB,SAAS,CAAC,CA7FX,KA+FtB,IAAI,CAACW,mBAAmB,EAAI,GAC5BjZ,EACA4a,EAAKrV,MAAM,CACX5M,EACAiiB,EAAKgB,IAAI,CACThB,EAAKiB,QAAQ,CACbjB,EAAKkB,WAAW,CAChBlB,EAAKmB,QAAQ,CACbnB,EAAKoB,cAAc,CACnBpB,EAAKqB,SAAS,CACdrB,EAAKzZ,KAAK,CACV0Z,EACD,EAYC,OAAOlf,AADQjC,EAAQ,UACTwiB,UAAU,CAAC,UAAUjgB,MAAM,CAAC0f,GAAaQ,MAAM,CAAC,MAElE,CAUA,MAAMpjB,IACJkR,CAAgB,CAChBoM,CAAyE,CAClC,KAgCf,EAwCb+F,EAjCLA,EAE4GA,MAwC9GxI,EACAyI,EA/EJ,GAAIhG,EAAIlD,IAAI,GAAKxI,GAAAA,KAA0B,CAAE,CAC3C,IAAM2R,EAAgBC,GAAAA,oBAAAA,CAAAA,QAA6B,GAC7CC,EAAkBF,EACpBG,AAAAA,GAAAA,GAAAA,wBAAAA,AAAAA,EAAyBH,GACzB,KACJ,GAAIE,EAAiB,CACnB,IAAME,EAAkBF,EAAgBG,KAAK,CAAC5jB,GAAG,CAACkR,GAClD,GAAIyS,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAiBvJ,IAAI,AAAD,IAAMzI,GAAAA,KAAqB,CACjD,MAAO,CAAEkJ,QAAS,GAAOvZ,MAAOqiB,CAAgB,CAEpD,CACF,CAIA,GACE,IAAI,CAAC/C,kBAAkB,EACtB,IAAI,CAACd,GAAG,EACNxC,CAAAA,EAAIlD,IAAI,GAAKxI,GAAAA,KAA0B,EACtC,AAAyC,aAAzC,IAAI,CAACoO,cAAc,CAAC,gBAAgB,AAAc,EAEtD,OAAO,KAGT9O,EAAW,IAAI,CAACwQ,YAAY,CAC1BxQ,EACAoM,EAAIlD,IAAI,GAAKxI,GAAAA,KAA0B,EAGzC,IAAMyR,EAAY,OAAuB,MAAjB,OAAI,CAAClC,YAAY,AAAD,EAAC,OAAjB,EAAmBnhB,GAAG,CAACkR,EAAUoM,EAAG,EAE5D,GAAIA,EAAIlD,IAAI,GAAKxI,GAAAA,KAA0B,CAAE,CAC3C,GAAI,CAACyR,EACH,OAAO,KAGT,GAAIA,AAAAA,CAAe,MAAfA,CAAAA,EAAAA,EAAU/hB,KAAK,AAAD,EAAC,OAAf+hB,EAAiBjJ,IAAI,AAAD,IAAMzI,GAAAA,KAAqB,CACjD,MAAM,qBAEL,CAFK,IAAIgO,GACR,CAAC,oCAAoC,EAAE1kB,KAAKskB,SAAS,CAACrO,GAAU,2BAA2B,EAAEjW,KAAKskB,SAAS,CAAC,AAAe,MAAf8D,CAAAA,EAAAA,EAAU/hB,KAAK,AAAD,EAAC,OAAf+hB,EAAiBjJ,IAAI,EAAE,SAAS,CAAC,EADzI,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAGF,IAAMyJ,EAAYC,GAAAA,gBAAAA,CAAAA,QAAyB,GAG3C,GACEzE,AAHmB,IAAK/B,EAAIW,IAAI,EAAI,EAAE,IAAOX,EAAIgC,QAAQ,EAAI,EAAE,CAAE,CAGpDvQ,IAAI,CACf,AAAC3L,I,IACCzH,EACAkoB,E,MADA,CAAoB,MAApBloB,CAAAA,EAAA,IAAI,CAAC8hB,eAAe,AAAD,EAAC,OAApB9hB,EAAsB+R,QAAQ,CAACtK,EAAG,IAClCygB,MAAAA,GAAAA,AAAiC,MAAjCA,CAAAA,EAAAA,EAAWE,sBAAsB,AAAD,EAAC,OAAjCF,EAAmCnW,QAAQ,CAACtK,G,GAGhD,OAAO,KAGT,IAAMmZ,EAAae,EAAIf,UAAU,EAAI8G,EAAU/hB,KAAK,CAACib,UAAU,CACzDyH,EACH1X,AAAAA,CAAAA,YAAYkV,UAAU,CACrBlV,YAAYsP,GAAG,GACdyH,CAAAA,EAAU/E,YAAY,EAAI,EAAC,EAC9B,IAGIxc,EAAOuhB,EAAU/hB,KAAK,CAACQ,IAAI,CAEjC,MAAO,CACL+Y,QAJcmJ,EAAMzH,EAKpBjb,MAAO,CAAE8Y,KAAMzI,GAAAA,KAAqB,CAAE7P,KAAAA,EAAMya,WAAAA,CAAW,CACzD,CACF,CAAO,GAAI8G,CAAAA,MAAAA,GAAAA,AAAgB,MAAhBA,CAAAA,EAAAA,EAAW/hB,KAAK,AAAD,EAAC,OAAhB+hB,EAAkBjJ,IAAI,IAAKzI,GAAAA,KAAqB,CACzD,MAAM,qBAEL,CAFK,IAAIgO,GACR,CAAC,oCAAoC,EAAE1kB,KAAKskB,SAAS,CAACrO,GAAU,aAAa,EAAEjW,KAAKskB,SAAS,CAACjC,EAAIlD,IAAI,EAAE,2BAA2B,CAAC,EADhI,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAGF,IAAI/M,EAA8C,KAC5CyN,EAAe,IAAI,CAACiG,aAAa,CAAC/gB,GAAG,CAAC0f,GAAQxO,IAgDpD,MA3CImS,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAW/E,YAAY,AAAD,IAAM,IAC9BzD,EAAU,GACVyI,EAAkB,GAAK3lB,EAAAA,EAAcA,EAQrCkd,EACEyI,GAAoB,KAPtBA,CAAAA,EAAkB,IAAI,CAACjC,mBAAmB,CACxCnQ,EACAmS,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAW/E,YAAY,AAAD,GAAKhS,YAAYkV,UAAU,CAAGlV,YAAYsP,GAAG,GACnE,IAAI,CAACkE,GAAG,EAAI,GACZxC,EAAI/B,UAAU,IAId+H,EAAkBhX,YAAYkV,UAAU,CAAGlV,YAAYsP,GAAG,EAAC,GAEvDxa,OAGJiiB,GACFhW,CAAAA,EAAQ,CACNwN,QAAAA,EACAC,aAAAA,EACAwI,gBAAAA,EACAhiB,MAAO+hB,EAAU/hB,KAAK,AACxB,GAIA,CAAC+hB,GACD,IAAI,CAACvC,iBAAiB,CAACmD,cAAc,CAACvW,QAAQ,CAACwD,KAO/C7D,EAAQ,CACNwN,QAAAA,EACAvZ,MAAO,KACPwZ,aAAAA,EACAwI,gBAAAA,CACF,EACA,IAAI,CAACje,GAAG,CAAC6L,EAAU7D,EAAM/L,KAAK,CAAE,CAAE,GAAGgc,CAAG,CAAExC,aAAAA,CAAa,IAElDzN,CACT,CAYA,MAAMhI,IACJuC,CAAgB,CAChB9F,CAAkC,CAClCwb,CAAyE,CAC1D,CAMf,GAAIxb,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMsY,IAAI,AAAD,IAAMzI,GAAAA,KAAqB,CAAE,CACxC,IAAM4R,EAAgBC,GAAAA,oBAAAA,CAAAA,QAA6B,GAC7CU,EAA2BX,EAC7BY,AAAAA,GAAAA,GAAAA,2BAAAA,AAAAA,EAA4BZ,GAC5B,IACAW,CAAAA,GACFA,EAAyBN,KAAK,CAACve,GAAG,CAACuC,EAAU9F,EAEjD,CAEA,GAAI,IAAI,CAAC8e,kBAAkB,EAAK,IAAI,CAACd,GAAG,EAAI,CAACxC,EAAIuB,UAAU,CAAG,OAE9DjX,EAAW,IAAI,CAAC8Z,YAAY,CAAC9Z,EAAU0V,EAAIuB,UAAU,EAGrD,IAAMuF,EAAWnpB,KAAKskB,SAAS,CAACzd,GAAM2F,MAAM,CAC5C,GACE6V,EAAIuB,UAAU,EACduF,EAAW,SAGX,CAAC,IAAI,CAAC9D,qBAAqB,EAG3B,CAAChD,EAAI+G,wBAAwB,CAC7B,CACA,IAAMC,EAAc,CAAC,qCAAqC,EAAEhH,EAAIoB,QAAQ,EAAI9W,EAAS,oCAAoC,EAAEwc,EAAS,OAAO,CAAC,CAE5I,GAAI,IAAI,CAACtE,GAAG,CACV,MAAM,qBAAsB,CAAtB,AAAI9jB,MAAMsoB,GAAV,qB,MAAA,O,WAAA,G,aAAA,EAAqB,GAE7B5nB,QAAQ6nB,IAAI,CAACD,GACb,MACF,CAEA,GAAI,C,IAKI,CAJF,EAAChH,EAAIuB,UAAU,EAAIvB,EAAIxC,YAAY,EACrC,IAAI,CAACiG,aAAa,CAAC1b,GAAG,CAACqa,GAAQ9X,GAAW0V,EAAIxC,YAAY,EAG5D,OAAuB,MAAjB,OAAI,CAACqG,YAAY,AAAD,EAAC,OAAjB,EAAmB9b,GAAG,CAACuC,EAAU9F,EAAMwb,EAAG,CAClD,CAAE,MAAOZ,EAAO,CACdhgB,QAAQ6nB,IAAI,CAAC,uCAAwC3c,EAAU8U,EACjE,CACF,CACF,C,yFCrmBA,IAAMU,GAAQ3gB,QAAQoY,GAAG,CAACwI,wBAAwB,CAC9C,CAACuC,EAAiB,GAAG5B,KACnBthB,QAAQkhB,GAAG,CAAC,CAAC,WAAW,EAAEgC,EAAQ,CAAC,IAAK5B,EAC1C,EACA5c,OAEEojB,GAAiB3pB,OAAOsU,GAAG,CAAC,wBAC5BsV,GAAoB5pB,OAAOsU,GAAG,CAAC,4BAC/BuV,GAAoB7pB,OAAOsU,GAAG,CAAC,4BAO/BwV,GAOFhe,WAwFG,SAASie,KAGd,GAAKD,EAAS,CAACF,GAAkB,CAIjC,OAAOE,EAAS,CAACF,GAAkB,CAACve,OAAO,EAC7C,CCtHO,SAAS2e,GAAeC,CAAQ,EACrC,OAAOA,EAAIC,OAAO,EAAID,CACxB,CCwCO,IAAME,GAA4BnqB,OAAOsU,GAAG,CACjD,+BAGW8V,GAAqBte,WCwC5Bue,GAA0B,AAACC,GAC/B,MAAM,CAAuDA,GAAI5T,IAAI,CACnE,AAACuT,GAAQA,EAAIC,OAAO,EAAID,EAOrB,OAAeM,GA4BpB5gB,YAAY,CACV6gB,SAAAA,CAAQ,CACRC,WAAAA,CAAU,CACVC,QAAAA,CAAO,CACPC,WAAAA,CAAU,CACe,CAAE,CAC3B,IAAI,CAACH,QAAQ,CAAGA,EAChB,IAAI,CAACC,UAAU,CAAGA,EAClB,IAAI,CAACG,KAAK,CAAGhpB,GACb,IAAI,CAAC8oB,OAAO,CAAGA,EACf,IAAI,CAACC,UAAU,CAAGA,CACpB,CAEA,MAAaE,8BACXhmB,CAAsC,CACtC,GAAGse,CAA+C,CAClD,CAQO,CACL,GAAM,CAAEvY,KAAAA,CAAI,CAAE,CAAG9E,EAAQ,aACnBglB,EACJvW,GAAe1P,EAAK,eACpB+F,EAAKhJ,QAAQmpB,GAAG,GAAI,IAAI,CAACJ,UAAU,EAE/B,CAAEE,8BAAAA,CAA6B,CAAE,CAAG,MAAM,8FAIhD,OAAOA,EACLC,EACA,IAAI,CAACJ,OAAO,IACTvH,EAEP,CACF,CAEQ6H,cACNC,CAAe,CACfN,CAAmB,CAanB,CA+CO,C,IA+GsB,EA9G3B,GAAI,CAACA,EACH,MAAM,qBAA+D,CAA/D,AAAIxpB,MAAM,sDAAV,qB,MAAA,O,WAAA,G,aAAA,EAA8D,GAEtE,GAAM,CAAE+pB,6BAAAA,CAA4B,CAAE,CACpCplB,EAAQ,6BACiB2O,GAAkBwW,GAE7C,GAAM,CACJE,EACAlF,EACAmF,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA7R,EACA8R,EACD,CAAG,CACFT,EAAgD,CAC9CP,WAAAA,EACAD,QAAS,IAAI,CAACA,OAAO,CACrBkB,S3DpNqB,uB2DqNrBC,YAAa,CAAC,IAAI,CAACjB,KAAK,AAC1B,GACAM,EAAgD,CAC9CP,WAAAA,EACAD,QAAS,IAAI,CAACA,OAAO,CACrBkB,S3D3NwB,0B2D4NxBC,YAAa,CAAC,IAAI,CAACjB,KAAK,AAC1B,GACAM,EAA4C,CAC1CP,WAAAA,EACAD,QAAS,IAAI,CAACA,OAAO,CACrBkB,S3DxOoB,sB2DyOpBC,YAAa,CAAC,IAAI,CAACjB,KAAK,AAC1B,GACAM,EAAoD,CAClDP,WAAAA,EACAD,QAAS,IAAI,CAACA,OAAO,CACrBkB,S3D9N6B,+B2DiO7BE,cAAe,GACfD,YAAa,CAAC,IAAI,CAACjB,KAAK,AAC1B,GACAM,EAA+C,CAC7CP,WAAAA,EACAD,QAAS,IAAI,CAACA,OAAO,CACrBkB,SAAU,iCACVC,YAAa,CAAC,IAAI,CAACjB,KAAK,AAC1B,GACA,IAAI,CAACmB,WAAW,EAAI,CAACC,A9B/JtB,SAA+Bzd,CAAa,EAEjD,IAAMxB,EAAWwB,EAAMI,OAAO,CAAC,WAAY,IAW3C,OAREsd,A+BjIK1d,A/BiIWA,E+BjILE,QAAQ,CAAC,W/BkIpByd,AA9EG,SACLC,CAA0B,CAC1BC,CAA8B,CAC9BC,CAAgC,EAMhC,IAAMC,EAAmBD,AAAAA,CAAAA,EAA0B,GAAK,GAAE,EAAK,IAMzDE,EAAgB,OAFFF,EAA0B,GAAK,cAEK,CAElDG,EAA0B,CAC9B,AAAIhrB,OACF,CAAC,cAAc,EAAE8T,GACf8W,EAAehkB,MAAM,CAAC,OACtB,QACEkkB,EAAgB,CAAC,EAEvB,AAAI9qB,OACF,CAAC,gBAAgB,EAAE8T,GACjB8W,EAAehkB,MAAM,CAAC,cAAe,QACrC,QACEkkB,EAAgB,CAAC,EAEvB,AAAI9qB,OAAO,0BACX,AAAIA,OACF,CAAC,cAAc,EAAE8T,GAAwB,CAAC,MAAM,CAAE8W,GAAgB,EAAEE,EAAgB,CAAC,EAEvF,AAAI9qB,OACF,CAAC,OAAO,EAAEuT,GAAuBC,IAAI,CAACC,QAAQ,CAAC,EAAEsX,EAAc,EAAEjX,GAC/DP,GAAuBC,IAAI,CAACE,UAAU,CACtCkX,GAAAA,EACEE,EAAgB,CAAC,EAEvB,AAAI9qB,OACF,CAAC,OAAO,EAAEuT,GAAuBI,KAAK,CAACF,QAAQ,CAAC,EAAEsX,EAAc,EAAEjX,GAChEP,GAAuBI,KAAK,CAACD,UAAU,CACvCkX,GAAAA,EACEE,EAAgB,CAAC,EAEvB,AAAI9qB,OACF,CAAC,OAAO,EAAEuT,GAAuBK,SAAS,CAACH,QAAQ,CAAC,EAAEsX,EAAc,EAAEjX,GACpEP,GAAuBK,SAAS,CAACF,UAAU,CAC3CkX,GAAAA,EACEE,EAAgB,CAAC,EAEvB,AAAI9qB,OACF,CAAC,OAAO,EAAEuT,GAAuBM,OAAO,CAACJ,QAAQ,CAAC,EAAEsX,EAAc,EAAEjX,GAClEP,GAAuBM,OAAO,CAACH,UAAU,CACzCkX,GAAAA,EACEE,EAAgB,CAAC,EAExB,CAEKG,EgC3GChoB,AhC2G+C0nB,EgC3G1Cxd,OAAO,CAAC,MAAO,KhCgH3B,OAJgB6d,EAAwBtY,IAAI,CAAC,AAAC/T,GAC5CA,EAAEqP,IAAI,CAACid,GAIX,EAYwB1f,EAAU,EAAE,CAAE,KAGlCA,AAAa,gBAAbA,GACAA,AAAa,0BAAbA,GACA,CAACA,EAAS0B,QAAQ,CAAC,eAGvB,E8BiJmDwc,GACvCC,EAA6B,CAC3BR,QAAS,IAAI,CAACA,OAAO,CACrBC,WAAAA,EACA+B,QAAS,GACTZ,cAAe,GACfF,SAAU,CAAC,UAAU,EAAEX,EAAQtc,OAAO,CAAC,OAAQ,KAAxBsc,6BAA+D,GAAG,CAAC,CAC1FY,YAAa,CAAC,IAAI,CAACjB,KAAK,AAC1B,GACArkB,OACJ,IAAI,CAACwlB,WAAW,CACZb,EAAkC,CAChCR,QAAS,IAAI,CAACA,OAAO,CACrBC,WAAAA,EACAiB,SAAU,wCACVE,cAAe,GACfD,YAAa,CAAC,IAAI,CAACjB,KAAK,AAC1B,GACA,CAAC,EACLM,EAAqD,CACnDP,WAAAA,EACAD,QAAS,IAAI,CAACA,OAAO,CACrBkB,SAAU,6CACVE,cAAe,GACfD,YAAa,CAAC,IAAI,CAACjB,KAAK,AAC1B,GACA,IAAI,CAACA,KAAK,CACL,CAAC,EACFM,EAA0D,CACxDP,WAAAA,EACAD,QAAS,IAAI,CAACA,OAAO,CACrBkB,S3D/QuB,4B2DgRzB,GACJ,IAAI,CAAChB,KAAK,CACN,cACAM,EAAkC,CAChCP,WAAAA,EACAD,QAAS,IAAI,CAACA,OAAO,CACrBkB,S3DzQe,W2D0Qfe,UAAW,EACb,GACJzB,EAAkC,CAChCP,WAAAA,EACAD,QAAS,IAAI,CAACA,OAAO,CACrBkB,S3D1P0B,uB2D2P1BE,cAAe,EACjB,GACD,CAED,MAAO,CACLjS,QAAAA,EACAuR,cAAAA,EACAD,eAAAA,EACAG,iBAAAA,EACArF,kBAAAA,EACAyF,oBAAAA,EACAL,sBAAAA,EACAE,uBAAuB,CAAGA,MAAAA,GAAAA,AACR,MADO,GAACA,EACtBqB,cAAc,AAAD,EAAC,OADO,CACL,CAAC3B,EAAQtc,OAAO,CAAC,OAAQ,KAAK,CAClD6c,sBAAAA,EACAC,6BAAAA,EACAE,mBAAAA,CACF,CACF,CACF,CAEA,MAAakB,wBACXhoB,CAAoB,CACpB6U,CAA8B,CAC9B,CACyC,CACvC,GAAM,CAAEoT,cAAAA,CAAa,CAAE,CAAGpT,EAAWqT,YAAY,CACjD,GAAI,CAACD,GAID,CAACE,AHzUJ,WAEL,GAAIlD,EAAS,CAACF,GAAkB,CAE9B,OADArH,AAAAA,MAAAA,IAAAA,GAAQ,sCACD,GAOT,GAJAA,AAAAA,MAAAA,IAAAA,GAAQ,+BACRuH,EAAS,CAACF,GAAkB,CAAG,IAAIhqB,IAG/BkqB,EAAS,CAACH,GAAe,CAAE,CAC7B,IAAIsD,CACAnD,CAAAA,EAAS,CAACH,GAAe,CAACuD,YAAY,EACxC3K,AAAAA,MAAAA,IAAAA,GAAQ,+CACR0K,EAAWnD,EAAS,CAACH,GAAe,CAACuD,YAAY,GAEjD3K,AAAAA,MAAAA,IAAAA,GAAQ,gDACR0K,EAAWE,MAGbrD,EAAS,CAACF,GAAkB,CAACpf,GAAG,CAAC,UAAWyiB,GAExCnD,EAAS,CAACH,GAAe,CAACyD,WAAW,EACvC7K,AAAAA,MAAAA,IAAAA,GAAQ,8CACRuH,EAAS,CAACF,GAAkB,CAACpf,GAAG,CAC9B,SACAsf,EAAS,CAACH,GAAe,CAACyD,WAAW,IAGvC7K,AAAAA,MAAAA,IAAAA,GAAQ,+CACRuH,EAAS,CAACF,GAAkB,CAACpf,GAAG,CAAC,SAAUyiB,GAE/C,MACE1K,AAAAA,MAAAA,IAAAA,GAAQ,gDACRuH,EAAS,CAACF,GAAkB,CAACpf,GAAG,CAAC,UAAW2iB,MAC5C5K,AAAAA,MAAAA,IAAAA,GAAQ,+CACRuH,EAAS,CAACF,GAAkB,CAACpf,GAAG,CAAC,SAAU2iB,MAM7C,OAFArD,EAAS,CAACD,GAAkB,CAAG,IAAIje,IAAIke,EAAS,CAACF,GAAkB,CAACre,MAAM,IAEnE,EACT,IGyR0B,OAMpB,IAAK,GAAM,CAACgU,EAAM8N,EAAQ,GAAI7tB,OAAO6L,OAAO,CAACyhB,GAAgB,CAC3D,GAAI,CAACO,EAAS,SAEd,GAAM,CAAEhpB,wBAAAA,CAAuB,CAAE,CAC/ByB,EAAQ,gDAEJ,CAAE8E,KAAAA,CAAI,CAAE,CAAG9E,EAAQ,aACnBglB,EACJvW,GAAe1P,EAAK,eACpB+F,EAAKhJ,QAAQmpB,GAAG,GAAI,IAAI,CAACJ,UAAU,MHjP3CrE,EGqPQ0D,GACE,MAAMK,GACJhmB,EACE,CAAC,EAAEymB,EAAmB,CAAC,EAAE,IAAI,CAACJ,OAAO,CAAC,CAAC,CACvC2C,KHtPd,GAAI,CAACvD,EAAS,CAACF,GAAkB,EAAI,CAACE,EAAS,CAACD,GAAkB,CAChE,MAAM,qBAA2C,CAA3C,AAAI1oB,MAAM,kCAAV,qB,MAAA,O,WAAA,G,aAAA,EAA0C,EAGlDohB,AAAAA,OAAAA,IAAAA,GAAQ,iCG6OAhD,GH5ORuK,EAAS,CAACF,GAAkB,CAACpf,GAAG,CG4OxB+U,EH5O+B+G,GACvCwD,EAAS,CAACD,GAAkB,CAACyD,GAAG,CAAChH,EGqP7B,CACF,CACF,CAEA,MAAaiH,oBACX1oB,CAAoB,CACpB6U,CAA8B,CAC9BuM,CAAkD,CACvB,CAGpB,CAEL,IADIuH,EACE,CAAElH,aAAAA,CAAY,CAAE,CAAG5M,EAEzB,GAAI4M,EAAc,CAChB,GAAM,CAAEjiB,wBAAAA,CAAuB,CAAE,CAC/ByB,EAAQ,gDAEV0nB,EAAexD,GACb,MAAMK,GACJhmB,EAAwB,IAAI,CAACqmB,OAAO,CAAEpE,IAG5C,CACA,GAAM,CAAE1b,KAAAA,CAAI,CAAE,CAAG9E,EAAQ,aACnB6kB,EACJpW,GAAe1P,EAAK,eACpB+F,EAAKhJ,QAAQmpB,GAAG,GAAI,IAAI,CAACJ,UAAU,EAOrC,OALA,MAAM,IAAI,CAACkC,uBAAuB,CAAChoB,EAAK6U,GAKjC,IAAIsL,GAAiB,CAC1B/b,GACEnD,EAAAA,4CAAAA,CAAAA,CAEFmf,IAAK,IAAI,CAAC2F,KAAK,CACfzF,eAAgBtgB,EAAIE,OAAO,CAC3BwgB,4BACE7L,EAAWqT,YAAY,CAACxH,2BAA2B,CACrDL,YAAa3Q,GAAe1P,EAAK,eACjC8d,cAAe,CAAC,EAAEgI,EAAW,CAAC,EAAE,IAAI,CAACD,OAAO,CAAC,OAAO,CAAC,CACrDrF,oBAAqB3L,EAAWqT,YAAY,CAAC1H,mBAAmB,CAChExC,mBAAoBnJ,EAAW+T,kBAAkB,CACjD/K,YAAahJ,EAAWqT,YAAY,CAACW,cAAc,CACnDtI,qBAAsB,IAAMa,EAC5BX,gBAAiBkI,CACnB,EACF,CACF,CAEA,MAAaG,eACX9oB,CAAsC,CACtC0R,CAAY,CACZqX,CAAiC,CACjCC,CAAiD,CACjD,CACIA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAqBC,yBAAyB,AAAD,EAC/CD,EAAoBC,yBAAyB,CAACvX,EAAK,WAEnD1U,QAAQggB,KAAK,CAACtL,GAEhB,MAAM,IAAI,CAACsU,6BAA6B,CACtChmB,EACA0R,EACA,CACE9R,KAAMI,EAAIuH,GAAG,EAAI,IACjBrH,QAASF,EAAIE,OAAO,CACpB4M,OAAQ9M,EAAI8M,MAAM,EAAI,KACxB,EACAic,EAEJ,CAEA,MAAaG,QACXlpB,CAAsC,CACtCc,CAA0B,CAC1B,CACEslB,QAAAA,CAAO,CACPrkB,mBAAAA,CAAkB,CAInB,CAmCD,KAkQEwjB,MAjQEO,EA+CAqD,EACArgB,EAgMAsgB,CA7OqC,EACvC,GAAM,CAAErjB,KAAAA,CAAI,CAAEsjB,SAAAA,CAAQ,CAAE,CACtBpoB,EAAQ,aAEV6kB,EACEpW,GAAe1P,EAAK,eACpB+F,EAAKhJ,QAAQmpB,GAAG,GAAI,IAAI,CAACJ,UAAU,EAErC,IAAMwD,EAAkB5Z,GAAe1P,EAAK,UAExCspB,CAAAA,GACF,KAAI,CAACzD,OAAO,CAAGwD,EAASvD,EAAYwD,EAAe,EAErD,GAAM,CAAEC,gCAAAA,CAA+B,CAAE,CAAG,MAAM,8FAKlDA,EAAgCzD,EAAY,IAAI,CAACD,OAAO,CAC1D,CACA,IAAM2D,EAAY,MAAM,IAAI,CAACrD,aAAa,CAACC,EAASN,GAC9C,CAAEQ,eAAAA,CAAc,CAAElF,kBAAAA,CAAiB,CAAEyF,oBAAAA,CAAmB,CAAE,CAAG2C,EAE7D,CAAEjV,SAAAA,CAAQ,CAAEI,KAAAA,CAAI,CAAE8U,SAAAA,CAAQ,CAAE,CAAGnD,CAEjC/R,CAAAA,GACFvU,CAAAA,EAAIuH,GAAG,CAAG4D,EAAiBnL,EAAIuH,GAAG,EAAI,IAAKgN,EAAQ,EAGrD,IAAM/M,EAAYF,EAAYtH,EAAIuH,GAAG,EAAI,KAEzC,GAAI,CAACC,EACH,OAEF,IAAIkiB,EAAoB,GAEpBze,EAAczD,EAAUU,QAAQ,EAAI,IAAK,iBAC3CwhB,EAAoB,GACpBliB,EAAUU,QAAQ,CAAGqH,EAAkB/H,EAAUU,QAAQ,EAAI,MAE/D,IAAIyhB,EAAmBniB,EAAUU,QAAQ,EAAI,IACvC0hB,GAAgB,CAAE,GAAGpiB,EAAUI,KAAK,AAAC,EACrCiiB,GAAgBzf,EAAegc,GAKjCzR,GAMEwU,AALJA,CAAAA,EAAevgB,EACbpB,EAAUU,QAAQ,EAAI,IACtByM,EAAK9L,OAAO,GAGGC,cAAc,GAC7B9I,EAAIuH,GAAG,CAAG,CAAC,EAAE4hB,EAAajhB,QAAQ,CAAC,EAAEV,EAAUS,MAAM,CAAC,CAAC,CACvD0hB,EAAmBR,EAAajhB,QAAQ,CAEpC,AAACY,GACHA,CAAAA,EAAiBqgB,EAAargB,cAAc,AAAD,GAKjD,IAAMghB,GAAcC,ApCjYjB,SAAwB,CAC7Bla,KAAAA,CAAI,CACJ8E,KAAAA,CAAI,CACJJ,SAAAA,CAAQ,CACRkV,SAAAA,CAAQ,CACRI,cAAAA,CAAa,CACbjV,cAAAA,CAAa,CACboV,cAAAA,CAAa,CAad,EACC,IAAIC,EACAC,EACAC,SAEAN,GAKFM,CAAAA,EAAsBD,AADtBA,CAAAA,EAAsBjd,EAHtBgd,EAAoBG,AVuKjB,SACLC,CAAuB,CACvBtpB,CAAkC,E,IAKhCA,EACAA,EACAA,EALF,IAAM0Q,EAAS6Y,AAhFjB,SACE5gB,CAAa,CACb6gB,CAAwB,CACxBC,CAAsB,CACtBC,CAAsB,CACtBpe,CAAmC,EAEnC,IA1FIlQ,EA0FE+P,GA1FF/P,EAAI,EAED,KACL,IAAIuuB,EAAW,GACXC,EAAI,EAAExuB,EACV,KAAOwuB,EAAI,GACTD,GAAY9tB,OAAOguB,YAAY,CAAC,GAAOD,AAAAA,CAAAA,EAAI,GAAK,IAChDA,EAAI3uB,KAAK6lB,KAAK,CAAE8I,AAAAA,CAAAA,EAAI,GAAK,IAE3B,OAAOD,CACT,GAiFMve,EAAyC,CAAC,EAE1CjD,EAAqB,EAAE,CAC7B,IAAK,IAAME,KAAWqC,EAAoB/B,GAAO5F,KAAK,CAAC,GAAGqF,KAAK,CAAC,KAAM,CACpE,IAAM0hB,EAAwB9gB,EAAAA,IAA+B,CAAC,AAACE,GAC7Db,EAAQI,UAAU,CAACS,IAGf6gB,EAAe1hB,EAAQqE,KAAK,CAAC/B,GAEnC,GAAImf,GAAyBC,GAAgBA,CAAY,CAAC,EAAE,CAE1D5hB,EAAS/C,IAAI,CACX4F,EAAsB,CACpBG,gBAAAA,EACAD,mBAAoB6e,CAAY,CAAC,EAAE,CACnC1hB,QAAS0hB,CAAY,CAAC,EAAE,CACxB3e,UAAAA,EACAC,UAAWme,EACPrtB,EAAAA,EAA+BA,CAC/BwE,OACJ2K,2BAAAA,CACF,SAEG,GAAIye,GAAgBA,CAAY,CAAC,EAAE,CAAE,CAEtCL,GAAiBK,CAAY,CAAC,EAAE,EAClC5hB,EAAS/C,IAAI,CAAE,IAAGoF,EAAmBuf,CAAY,CAAC,EAAE,GAGtD,IAAIlvB,EAAImQ,EAAsB,CAC5BG,gBAAAA,EACA9C,QAAS0hB,CAAY,CAAC,EAAE,CACxB3e,UAAAA,EACAC,UAAWme,EAAkBttB,EAAAA,EAAuBA,CAAGyE,OACvD2K,2BAAAA,CACF,EAGIoe,CAAAA,GAAiBK,CAAY,CAAC,EAAE,EAClClvB,CAAAA,EAAIA,EAAEoP,SAAS,CAAC,EAAC,EAGnB9B,EAAS/C,IAAI,CAACvK,EAChB,MACEsN,EAAS/C,IAAI,CAAE,IAAGoF,EAAmBnC,GAInCohB,CAAAA,GAAiBM,GAAgBA,CAAY,CAAC,EAAE,EAClD5hB,EAAS/C,IAAI,CAACoF,EAAmBuf,CAAY,CAAC,EAAE,EAEpD,CAEA,MAAO,CACLC,wBAAyB7hB,EAASnD,IAAI,CAAC,IACvCoG,UAAAA,CACF,CACF,EAeIke,EACAtpB,EAAQwpB,eAAe,CACvBxpB,AAAqB,MAArBA,CAAAA,EAAAA,EAAQypB,aAAa,AAAD,GAApBzpB,EACAA,AAAqB,MAArBA,CAAAA,EAAAA,EAAQ0pB,aAAa,AAAD,GAApB1pB,EACAA,AAAkC,MAAlCA,CAAAA,EAAAA,EAAQsL,0BAA0B,AAAD,GAAjCtL,GAGEiqB,EAAavZ,EAAOsZ,uBAAuB,CAK/C,OAJI,AAAChqB,EAAQkqB,4BAA4B,EACvCD,CAAAA,GAAc,QAAO,EAGhB,CACL,GAAGE,AA/MA,SACLb,CAAuB,CACvB,OACEG,cAAAA,EAAgB,EAAK,CACrBC,cAAAA,EAAgB,EAAK,CACrBQ,6BAAAA,EAA+B,EAAK,CACf,CAJvB,WAI0B,CAAC,EAJ3B,EAMM,CAAEE,mBAAAA,CAAkB,CAAEhe,OAAAA,CAAM,CAAE,CAAGie,AAhEzC,SACE1hB,CAAa,CACb8gB,CAAsB,CACtBC,CAAsB,EAEtB,IAAMtd,EAAyC,CAAC,EAC5Cke,EAAa,EAEXniB,EAAqB,EAAE,CAC7B,IAAK,IAAME,KAAWqC,EAAoB/B,GAAO5F,KAAK,CAAC,GAAGqF,KAAK,CAAC,KAAM,CACpE,IAAMmiB,EAAcvhB,EAAAA,IAA+B,CAAC,AAACE,GACnDb,EAAQI,UAAU,CAACS,IAEf6gB,EAAe1hB,EAAQqE,KAAK,CAAC/B,GAEnC,GAAI4f,GAAeR,GAAgBA,CAAY,CAAC,EAAE,CAAE,CAClD,GAAM,CAAE1nB,IAAAA,CAAG,CAAEyI,SAAAA,CAAQ,CAAEC,OAAAA,CAAM,CAAE,CAAGH,EAAsBmf,CAAY,CAAC,EAAE,CACvE3d,CAAAA,CAAM,CAAC/J,EAAI,CAAG,CAAEsK,IAAK2d,IAAcvf,OAAAA,EAAQD,SAAAA,CAAS,EACpD3C,EAAS/C,IAAI,CAAE,IAAGoF,EAAmB+f,GAAa,WACpD,MAAO,GAAIR,GAAgBA,CAAY,CAAC,EAAE,CAAE,CAC1C,GAAM,CAAE1nB,IAAAA,CAAG,CAAE0I,OAAAA,CAAM,CAAED,SAAAA,CAAQ,CAAE,CAAGF,EAAsBmf,CAAY,CAAC,EAAE,CACvE3d,CAAAA,CAAM,CAAC/J,EAAI,CAAG,CAAEsK,IAAK2d,IAAcvf,OAAAA,EAAQD,SAAAA,CAAS,EAEhD4e,GAAiBK,CAAY,CAAC,EAAE,EAClC5hB,EAAS/C,IAAI,CAAE,IAAGoF,EAAmBuf,CAAY,CAAC,EAAE,GAGtD,IAAIlvB,EAAIkQ,EAAUD,EAAW,cAAgB,SAAY,WAGrD4e,CAAAA,GAAiBK,CAAY,CAAC,EAAE,EAClClvB,CAAAA,EAAIA,EAAEoP,SAAS,CAAC,EAAC,EAGnB9B,EAAS/C,IAAI,CAACvK,EAChB,MACEsN,EAAS/C,IAAI,CAAE,IAAGoF,EAAmBnC,GAInCohB,CAAAA,GAAiBM,GAAgBA,CAAY,CAAC,EAAE,EAClD5hB,EAAS/C,IAAI,CAACoF,EAAmBuf,CAAY,CAAC,EAAE,EAEpD,CAEA,MAAO,CACLK,mBAAoBjiB,EAASnD,IAAI,CAAC,IAClCoH,OAAAA,CACF,CACF,EAgBIkd,EACAG,EACAC,GAGEvd,EAAKie,EAKT,OAJI,AAACF,GACH/d,CAAAA,GAAM,QAAO,EAGR,CACLA,GAAI,AAAIvQ,OAAQ,IAAGuQ,EAAG,KACtBC,OAAQA,CACV,CACF,EAwLqBkd,EAAiBtpB,EAAQ,CAC1CiqB,WAAa,IAAGA,EAAW,IAC3B7e,UAAWsF,EAAOtF,SAAS,AAC7B,CACF,EU7L2C0D,EAAM,CAC3C0a,gBAAiB,EACnB,GACuD,EACb1a,EAAI,EAyOzC,CACL0b,eAvOF,SACEvrB,CAAsC,CACtCwH,CAA6B,EAE7B,IAAMgkB,EAAwC,CAAC,EAC3CC,EAAajkB,EAAUU,QAAQ,CAU7BwjB,EAAe,AAACC,IACpB,IAAMC,EAAUC,AuCvMf,SAAsBjsB,CAAY,CAAEmB,CAAiB,EAC1D,IAAM0E,EAAc,EAAE,CAChBqmB,EAASC,AAAAA,GAAAA,EAAAA,YAAAA,AAAAA,EAAansB,EAAM6F,EAAM,CACtCumB,UAAW,IACXC,UACE,AAA8B,WAA9B,MAAOlrB,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASkrB,SAAS,AAAD,GAAkBlrB,EAAQkrB,SAAS,CAC7D5hB,OAAQtJ,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASsJ,MAAM,AACzB,GAEMuhB,EAAUM,AAAAA,GAAAA,EAAAA,gBAAAA,AAAAA,EACdnrB,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASorB,aAAa,AAAD,EACjB,IAAIxvB,OAAOoE,EAAQorB,aAAa,CAACL,EAAOM,MAAM,EAAGN,EAAOO,KAAK,EAC7DP,EACJrmB,GASF,MAAO,CAACyC,EAAUqF,KAEhB,GAAI,AAAoB,UAApB,OAAOrF,EAAuB,MAAO,GAEzC,IAAMuF,EAAQme,EAAQ1jB,GAGtB,GAAI,CAACuF,EAAO,MAAO,GAOnB,GAAI1M,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASurB,mBAAmB,CAC9B,IAAK,IAAMlpB,KAAOqC,EACZ,AAAoB,UAApB,OAAOrC,EAAI6C,IAAI,EACjB,OAAOwH,EAAMF,MAAM,CAACnK,EAAI6C,IAAI,CAAC,CAKnC,MAAO,CAAE,GAAGsH,CAAM,CAAE,GAAGE,EAAMF,MAAM,AAAC,CACtC,CACF,EvC0JQoe,EAAQS,MAAM,CAAIxX,CAAAA,EAAgB,OAAS,EAAC,EAC5C,CACE0X,oBAAqB,GACrBjiB,OAAQ,GACR4hB,UAAW,CAAC,CAACjC,CACf,GAGF,GAAI,CAACxiB,EAAUU,QAAQ,CAAE,MAAO,GAEhC,IAAIqF,EAASqe,EAAQpkB,EAAUU,QAAQ,EAEvC,GAAKyjB,AAAAA,CAAAA,EAAQnrB,GAAG,EAAImrB,EAAQY,OAAM,GAAMhf,EAAQ,CAC9C,IAAMif,EAAYC,AN3MnB,SACLzsB,CAAsC,CACtC4H,CAAa,CACbpH,CAAoB,CACpB+rB,CAAwB,EADxB/rB,AAAAA,KAAAA,IAAAA,GAAAA,CAAAA,EAAkB,EAAE,AAAD,EACnB+rB,AAAAA,KAAAA,IAAAA,GAAAA,CAAAA,EAAsB,EAAE,AAAD,EAEvB,IAAMhf,EAAiB,CAAC,EAElBmf,EAAW,AAACC,IAEhB,IADI/qB,EACAwB,EAAMupB,EAAQvpB,GAAG,CAErB,OAAQupB,EAAQ3J,IAAI,EAClB,IAAK,SACH5f,EAAMA,EAAKmC,WAAW,GACtB3D,EAAQ5B,EAAIE,OAAO,CAACkD,EAAI,CACxB,KAEF,KAAK,SACH,GAAI,YAAapD,EACf4B,EAAQ5B,EAAIgC,OAAO,CAAC2qB,EAAQvpB,GAAG,CAAC,KAC3B,K8C7DiBlD,E9C+DtB0B,EAAQI,AADQ4qB,C8C9DM1sB,E9C8DUF,EAAIE,OAAO,C8C3D5C,WACL,GAAM,CAAE2sB,OAAAA,CAAM,CAAE,CAAG3sB,EAEnB,GAAI,CAAC2sB,EACH,MAAO,CAAC,EAGV,GAAM,CAAEhqB,MAAOiqB,CAAa,CAAE,CAC5B7rB,EAAQ,mCACV,OAAO6rB,EAAc1xB,MAAMiG,OAAO,CAACwrB,GAAUA,EAAO9mB,IAAI,CAAC,MAAQ8mB,EACnE,I9CkDuB,CAACF,EAAQvpB,GAAG,CAAC,AAC9B,CAEA,KAEF,KAAK,QACHxB,EAAQgG,CAAK,CAACxE,EAAK,CACnB,KAEF,KAAK,OAAQ,CACX,GAAM,CAAEgF,KAAAA,CAAI,CAAE,CAAGpI,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAKE,OAAO,AAAD,GAAK,CAAC,EAGlC0B,EADiBwG,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMe,KAAK,CAAC,IAAK,EAAE,CAAC,EAAE,CAAC5D,WAAW,EAGrD,CAIF,CAEA,GAAI,CAAConB,EAAQ/qB,KAAK,EAAIA,EAEpB,OADA2L,CAAM,CAACwf,AAxEb,SAA0BC,CAAiB,EACzC,IAAIC,EAAe,GAEnB,IAAK,IAAI9wB,EAAI,EAAGA,EAAI6wB,EAAUjlB,MAAM,CAAE5L,IAAK,CACzC,IAAM+wB,EAAWF,EAAUG,UAAU,CAAChxB,EAGnC+wB,CAAAA,CAAAA,EAAW,IAAMA,EAAW,IAC5BA,EAAW,IAAMA,EAAW,GAAE,GAE/BD,CAAAA,GAAgBD,CAAS,CAAC7wB,EAAE,AAAD,CAE/B,CACA,OAAO8wB,CACT,EA0D8B7pB,GAAM,CAAGxB,EAC1B,GACF,GAAIA,EAAO,CAChB,IAAMgqB,EAAU,AAAIjvB,OAAQ,IAAGgwB,EAAQ/qB,KAAK,CAAC,KACvCwrB,EAAUhyB,MAAMiG,OAAO,CAACO,GAC1BA,EAAMkC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC2J,KAAK,CAACme,GACzBhqB,EAAM6L,KAAK,CAACme,GAEhB,GAAIwB,EAUF,OATIhyB,MAAMiG,OAAO,CAAC+rB,KACZA,EAAQjgB,MAAM,CAChBxS,OAAO8K,IAAI,CAAC2nB,EAAQjgB,MAAM,EAAE9G,OAAO,CAAC,AAACgnB,IACnC9f,CAAM,CAAC8f,EAAS,CAAGD,EAAQjgB,MAAO,CAACkgB,EAAS,AAC9C,GACSV,AAAiB,SAAjBA,EAAQ3J,IAAI,EAAeoK,CAAO,CAAC,EAAE,EAC9C7f,CAAAA,EAAOnF,IAAI,CAAGglB,CAAO,CAAC,EAAE,AAAD,GAGpB,EAEX,CACA,MAAO,EACT,QAMA,CAHE5sB,CAAAA,CAAAA,EAAIqM,KAAK,CAAC,AAACqC,GAASwd,EAASxd,KAC5Bqd,EAAQld,IAAI,CAAC,AAACH,GAASwd,EAASxd,GAAK,GAG/B3B,CAGX,EM+HUvN,EACAwH,EAAUI,KAAK,CACf+jB,EAAQnrB,GAAG,CACXmrB,EAAQY,OAAO,EAGbC,EACF7xB,OAAO2e,MAAM,CAAC/L,EAAQif,GAEtBjf,EAAS,EAEb,CAEA,GAAIA,EAAQ,CACV,GAAI,KyCvMH7D,EAAAA,EzC2MC,GyC3MDA,CAAS,MAATA,CAAAA,EAAAA,AzC2MgCiiB,EyC3M1BnrB,GAAG,AAAD,GAAC,AAAK,MAAdkJ,CAAAA,EAAAA,CAAW,CAAC,EAAE,AAAD,EAAC,OAAdA,EAAgBtG,GAAG,I1CnDJ,WC8PsC,CAClD,IAAMkqB,EACJttB,EAAIE,OAAO,CAACwO,EAA8B,WAAW,GAAG,AAEtD4e,CAAAA,GACF/f,CAAAA,EAAS,CACP,GAAGggB,A0C1IZ,SAASA,EACdC,CAA8B,CAC9BjgB,CAAmB,EAInB,IAAK,IAAMkgB,KAJXlgB,AAAAA,KAAAA,IAAAA,GAAAA,CAAAA,EAAiB,CAAC,GAIU5S,OAAO+L,MAAM,CAFlB8mB,CAAW,CAAC,EAAE,GAEsB,CACzD,IAAMpkB,EAAUqkB,CAAa,CAAC,EAAE,CAC1BC,EAAqBtyB,MAAMiG,OAAO,CAAC+H,GACnCukB,EAAeD,EAAqBtkB,CAAO,CAAC,EAAE,CAAGA,CACnD,EAACukB,GAAgBA,EAAankB,UAAU,C5DxHhB,c4D4H1BkkB,GAAuBtkB,CAAAA,AAAe,MAAfA,CAAO,CAAC,EAAE,EAAYA,AAAe,OAAfA,CAAO,CAAC,EAAE,AAAQ,EAG/DmE,CAAM,CAACnE,CAAO,CAAC,EAAE,CAAC,CAAGA,CAAO,CAAC,EAAE,CAACD,KAAK,CAAC,KAC7BukB,GACTngB,CAAAA,CAAM,CAACnE,CAAO,CAAC,EAAE,CAAC,CAAGA,CAAO,CAAC,EAAE,AAAD,EAGhCmE,EAASggB,EAAkBE,EAAelgB,GAC5C,CAEA,OAAOA,CACT,E1CiHkBqgB,A2CvQX,SACLN,CAA0C,EAE1C,GAAI,AAAuB,SAAhBA,GAGX,GAAIlyB,MAAMiG,OAAO,CAACisB,GAChB,MAAM,qBAEL,CAFK,AAAIhxB,MACR,iEADI,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAQF,GAAIgxB,EAAYvlB,MAAM,CAAG,IACvB,MAAM,qBAAmD,CAAnD,AAAIzL,MAAM,0CAAV,qB,MAAA,O,WAAA,G,aAAA,EAAkD,GAG1D,GAAI,CACF,IAAMuxB,EAAQtyB,KAAKsH,KAAK,CAAC7H,mBAAmBsyB,IAE5C,MADAQ,AAAAA,GAAAA,EAAAA,MAAAA,AAAAA,EAAOD,EAAOrf,GACPqf,CACT,CAAE,KAAM,CACN,MAAM,qBAAsE,CAAtE,AAAIvxB,MAAM,6DAAV,qB,MAAA,M,WAAA,G,aAAA,EAAqE,EAC7E,EACF,E3C2OoDgxB,GACnC,CACD,GAAG/f,CAAM,AACX,EAEJ,CACF,CAAE,MAAOmE,EAAK,CAGd,CAEA,GAAM,CAAEqc,kBAAAA,CAAiB,CAAEC,UAAAA,CAAS,CAAE,CAAGC,ANnF1C,SAA4B3P,CAKlC,EACC,IAsCI4P,EAmCAC,EAzEEJ,EAAoBK,AAjDrB,SAA0B9P,CAIhC,EACC,IAAI+P,EAAU/P,EAAKgQ,WAAW,CAC9B,IAAK,IAAM1iB,KAASjR,OAAO8K,IAAI,CAAC,CAAE,GAAG6Y,EAAK/Q,MAAM,CAAE,GAAG+Q,EAAK1W,KAAK,AAAC,GACzDgE,GAELyiB,CAAAA,EArIK7iB,AAqImB6iB,EArIfvkB,OAAO,CAChB,AAAInN,OAAQ,IAAG4O,EAoIkBK,GApIiB,KACjD,eAmIgCA,EAAK,EAGxC,IAAMlE,EAASD,AkD5JV,SAAkBF,CAAW,EAClC,GAAIA,EAAIiC,UAAU,CAAC,KACjB,OAAO+kB,ACUJ,SACLhnB,CAAW,CACX0M,CAAa,CACbua,CAAiB,EAAjBA,AAAAA,KAAAA,IAAAA,GAAAA,CAAAA,EAAa,EAAG,EAEhB,IAAMC,EAAa,IAAI9mB,IACW,YAG5B+mB,EAEFnnB,EAAIiC,UAAU,CAAC,KACb,IAAI7B,IAC8B,YAElC8mB,EAEA,CAAEvmB,SAAAA,CAAQ,CAAEL,aAAAA,CAAY,CAAEI,OAAAA,CAAM,CAAED,KAAAA,CAAI,CAAEG,KAAAA,CAAI,CAAE0N,OAAAA,CAAM,CAAE,CAAG,IAAIlO,IACjEJ,EACAmnB,GAGF,GAAI7Y,IAAW4Y,EAAW5Y,MAAM,CAC9B,MAAM,qBAAoE,CAApE,AAAIvZ,MAAO,oDAAmDiL,GAA9D,qB,MAAA,O,WAAA,G,aAAA,EAAmE,GAG3E,MAAO,CACLW,SAAAA,EACAN,MAAO4mB,EAAa5gB,EAAuB/F,GAAgBnG,OAC3DuG,OAAAA,EACAD,KAAAA,EACAG,KAAMA,EAAKrE,KAAK,CAAC+R,EAAO9N,MAAM,EAG9BS,QAAS9G,MACX,CACF,ED9C4B6F,GAG1B,IAAMonB,EAAY,IAAIhnB,IAAIJ,GAC1B,MAAO,CACLS,KAAM2mB,EAAU3mB,IAAI,CACpBK,SAAUsmB,EAAUtmB,QAAQ,CAC5BF,KAAMwmB,EAAUxmB,IAAI,CACpBD,SAAUymB,EAAUzmB,QAAQ,CAC5BO,KAAMkmB,EAAUlmB,IAAI,CACpBF,SAAUomB,EAAUpmB,QAAQ,CAC5BX,MAAOgG,EAAuB+gB,EAAU9mB,YAAY,EACpDI,OAAQ0mB,EAAU1mB,MAAM,CACxBO,QACEmmB,AAGM,OAHNA,EAAUxmB,IAAI,CAACrE,KAAK,CAClB6qB,EAAUpmB,QAAQ,CAACR,MAAM,CACzB4mB,EAAUpmB,QAAQ,CAACR,MAAM,CAAG,EAElC,CACF,ElDuI0BsmB,GAEpBnmB,EAAWR,EAAOQ,QAAQ,AAC1BA,CAAAA,GACFA,CAAAA,EAAW4F,EAAiB5F,EAAQ,EAGtC,IAAIC,EAAOT,EAAOS,IAAI,AAClBA,CAAAA,GACFA,CAAAA,EAAO2F,EAAiB3F,EAAI,EAG9B,IAAIE,EAAWX,EAAOW,QAAQ,AAC1BA,CAAAA,GACFA,CAAAA,EAAWyF,EAAiBzF,EAAQ,EAGtC,IAAIL,EAAON,EAAOM,IAAI,CAKtB,OAJIA,GACFA,CAAAA,EAAO8F,EAAiB9F,EAAI,EAGvB,CACL,GAAGN,CAAM,CACTQ,SAAAA,EACAG,SAAAA,EACAF,KAAAA,EACAH,KAAAA,CACF,CACF,EAQ6CsW,GAErC,CAAEjW,SAAUumB,CAAY,CAAEhnB,MAAOomB,CAAS,CAAE,CAAGD,EAIjDc,EAAWd,EAAkB7lB,QAAQ,AACrC6lB,CAAAA,EAAkB/lB,IAAI,EACxB6mB,CAAAA,EAAY,GAAEA,EAAWd,EAAkB/lB,IAAI,AAAD,EAGhD,IAAM8mB,EAAkC,EAAE,CAEpCC,EAA2B,EAAE,CAEnC,IAAK,IAAM3rB,KADX2oB,AAAAA,GAAAA,EAAAA,YAAAA,AAAAA,EAAa8C,EAAUE,GACLA,GAChBD,EAAW3oB,IAAI,CAAC/C,EAAI6C,IAAI,EAG1B,GAAI2oB,EAAc,CAChB,IAAMI,EAA+B,EAAE,CAEvC,IAAK,IAAM5rB,KADX2oB,AAAAA,GAAAA,EAAAA,YAAAA,AAAAA,EAAa6C,EAAcI,GACTA,GAChBF,EAAW3oB,IAAI,CAAC/C,EAAI6C,IAAI,CAE5B,CAEA,IAAMgpB,EAAmBhhB,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EACvB4gB,EAOA,CAAE3gB,SAAU,EAAM,GASpB,IAAK,GAAM,CAAC9K,EAAK8rB,EAAW,GALxBN,GACFV,CAAAA,EAAuBjgB,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EAAQ2gB,EAAc,CAAE1gB,SAAU,EAAM,EAAC,EAIlCvT,OAAO6L,OAAO,CAACwnB,IAGzC5yB,MAAMiG,OAAO,CAAC6tB,GAChBlB,CAAS,CAAC5qB,EAAI,CAAG8rB,EAAWlmB,GAAG,CAAC,AAACpH,GAC/BmM,EAAeD,EAAiBlM,GAAQ0c,EAAK/Q,MAAM,GAE5C,AAAsB,UAAtB,OAAO2hB,GAChBlB,CAAAA,CAAS,CAAC5qB,EAAI,CAAG2K,EAAeD,EAAiBohB,GAAa5Q,EAAK/Q,MAAM,GAM7E,IAAIsB,EAAYlU,OAAO8K,IAAI,CAAC6Y,EAAK/Q,MAAM,EAAE4hB,MAAM,CAC7C,AAAClpB,GAASA,AAAS,uBAATA,GAGZ,GACEqY,EAAK8Q,mBAAmB,EACxB,CAACvgB,EAAUQ,IAAI,CAAC,AAACjM,GAAQ0rB,EAAW9gB,QAAQ,CAAC5K,IAE7C,IAAK,IAAMA,KAAOyL,EACZ,AAAEzL,KAAO4qB,GACXA,CAAAA,CAAS,CAAC5qB,EAAI,CAAGkb,EAAK/Q,MAAM,CAACnK,EAAI,AAAD,EAStC,GAAI4G,EAA2B6kB,GAC7B,IAAK,IAAMzlB,KAAWylB,EAAS1lB,KAAK,CAAC,KAAM,CACzC,IAAMqB,EAAST,EAAAA,IAA+B,CAAC,AAACE,GAC9Cb,EAAQI,UAAU,CAACS,IAErB,GAAIO,EAAQ,CACNA,AAAW,aAAXA,GACF8T,EAAK/Q,MAAM,CAAC,IAAI,CAAG,OACnB+Q,EAAK/Q,MAAM,CAAC,IAAI,CAAG,QAEnB+Q,EAAK/Q,MAAM,CAAC,IAAI,CAAG/C,EAErB,KACF,CACF,CAGF,GAAI,CAGF,GAAM,CAACtC,EAAUF,EAAK,CAAGmmB,AAFzBA,CAAAA,EAASc,EAAiB3Q,EAAK/Q,MAAM,GAELpE,KAAK,CAAC,IAAK,EACvC+kB,CAAAA,GACFH,CAAAA,EAAkB1lB,QAAQ,CAAG6lB,EAAqB5P,EAAK/Q,MAAM,GAE/DwgB,EAAkB7lB,QAAQ,CAAGA,EAC7B6lB,EAAkB/lB,IAAI,CAAI,AAAEA,CAAAA,EAAO,IAAM,EAAC,EAAIA,CAAAA,GAAQ,EAAC,EACvD,OAAQ+lB,EAA0B9lB,MAAM,AAC1C,CAAE,MAAOyJ,EAAU,CACjB,GAAIA,EAAIwO,OAAO,CAACzS,KAAK,CAAC,gDACpB,MAAM,qBAEL,CAFK,AAAInR,MACP,2KADG,qB,MAAA,O,WAAA,G,aAAA,EAEN,EAEF,OAAMoV,CACR,CAWA,OALAqc,EAAkBnmB,KAAK,CAAG,CACxB,GAAG0W,EAAK1W,KAAK,CACb,GAAGmmB,EAAkBnmB,KAAK,AAC5B,EAEO,CACLumB,OAAAA,EACAH,UAAAA,EACAD,kBAAAA,CACF,CACF,EMlDoE,CAC1DqB,oBAAqB,GACrBd,YAAa3C,EAAQ2C,WAAW,CAChC/gB,OAAQA,EACR3F,MAAOJ,EAAUI,KAAK,AACxB,GAGA,GAAImmB,EAAkBxlB,QAAQ,CAC5B,MAAO,GAwBT,GArBA5N,OAAO2e,MAAM,CAACkS,EAAewC,EAAWzgB,GACxC5S,OAAO2e,MAAM,CAAC9R,EAAUI,KAAK,CAAEmmB,EAAkBnmB,KAAK,EACtD,OAAQmmB,EAA0BnmB,KAAK,CAMvCjN,OAAO6L,OAAO,CAACgB,EAAUI,KAAK,EAAEvB,OAAO,CAAC,CAAC,CAACjD,EAAKxB,EAAM,IACnD,GAAIA,GAAS,AAAiB,UAAjB,OAAOA,GAAsBA,EAAM4H,UAAU,CAAC,KAAM,CAE/D,IAAM6lB,EAAc7D,CAAa,CADf5pB,EAAMkC,KAAK,CAAC,GACc,AACxCurB,CAAAA,GACF7nB,CAAAA,EAAUI,KAAK,CAACxE,EAAI,CAAGisB,CAAU,CAErC,CACF,GAEA10B,OAAO2e,MAAM,CAAC9R,EAAWumB,GAGrB,CADJtC,CAAAA,EAAajkB,EAAUU,QAAQ,AAAD,EACb,MAAO,GAMxB,GAJIqM,GACFkX,CAAAA,EAAaA,EAAW3hB,OAAO,CAAC,AAAInN,OAAO,CAAC,CAAC,EAAE4X,EAAS,CAAC,EAAG,KAAO,GAAE,EAGnEI,EAAM,CACR,IAAMlD,EAAS7I,EAAoB6iB,EAAY9W,EAAK9L,OAAO,EAC3D4iB,EAAaha,EAAOvJ,QAAQ,CAC5BV,EAAUI,KAAK,CAAC0nB,kBAAkB,CAChC7d,EAAO3I,cAAc,EAAIyE,EAAO+hB,kBAAkB,AACtD,CAEA,GAAI7D,IAAe5b,EACjB,MAAO,GAGT,GAAIga,GAAiBK,EAAqB,CACxC,IAAMqF,EAAgBrF,EAAoBuB,GAC1C,GAAI8D,EAKF,OAJA/nB,EAAUI,KAAK,CAAG,CAChB,GAAGJ,EAAUI,KAAK,CAClB,GAAG2nB,CAAa,AAClB,EACO,EAEX,CACF,CACA,MAAO,EACT,EAEA,IAAK,IAAM5D,KAAWlC,EAAS+F,WAAW,EAAI,EAAE,CAC9C9D,EAAaC,GAGf,GAAIF,IAAe5b,EAAM,CACvB,IAAIiI,EAAW,GAEf,IAAK,IAAM6T,KAAWlC,EAASgG,UAAU,EAAI,EAAE,CAE7C,GADA3X,EAAW4T,EAAaC,GACV,MAGhB,GAAI,CAAC7T,GAAY,CAAC4X,AAxIA,MAClB,IAAMC,EAAoBlkB,EAAoBggB,GAAc,IAC5D,OACEkE,IAAsBlkB,EAAoBoE,IAC1Cqa,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAsByF,EAAiB,CAE3C,KAmII,KAAK,IAAMhE,KAAWlC,EAASrB,QAAQ,EAAI,EAAE,CAE3C,GADAtQ,EAAW4T,EAAaC,GACV,KAChB,CAEJ,CACA,OAAOH,CACT,EAiFEvB,kBAAAA,EACAC,oBAAAA,EACAC,oBAAAA,EACAyF,qBA9BF,SACEhoB,CAAoD,CACpDioB,CAA2B,EAM3B,IAAK,GAAM,CAACzsB,EAAKxB,EAAM,GAFvB,OAAOgG,EAAM,kBAAqB,CAEPjN,OAAO6L,OAAO,CAACoB,IAAQ,CAChD,IAAMkoB,EAAgB3hB,EAAwB/K,GACzC0sB,IAIL,OAAOloB,CAAK,CAACxE,EAAI,CACjBysB,EAAepH,GAAG,CAACqH,GAEE,SAAVluB,GAEXgG,CAAAA,CAAK,CAACkoB,EAAc,CAAG10B,MAAMiG,OAAO,CAACO,GACjCA,EAAMoH,GAAG,CAAC,AAAC+mB,GAAM3hB,EAAyB2hB,IAC1C3hB,EAAyBxM,EAAK,EACpC,CACF,EAQEouB,0BAnFF,SAAmCC,CAA0B,EAG3D,GAAI,CAAChG,EAAmB,OAAO,KAE/B,GAAM,CAAE9c,OAAAA,CAAM,CAAEhB,UAAAA,CAAS,CAAE,CAAG8d,EAyCxBiG,EAAetE,AAvCL3e,EAAgB,CAC9BC,GAAI,CAEFG,KAAM,AAAC7B,IAEL,IAAM2kB,EAA8Bx1B,OAAOsoB,WAAW,CACpD,IAAImN,gBAAgB5kB,IAEtB,IAAK,GAAM,CAACpI,EAAKxB,EAAM,GAAIjH,OAAO6L,OAAO,CAAC2pB,GAAM,CAC9C,IAAML,EAAgB3hB,EAAwB/K,GACzC0sB,IAELK,CAAG,CAACL,EAAc,CAAGluB,EACrB,OAAOuuB,CAAG,CAAC/sB,EAAI,CACjB,CAGA,IAAMqO,EAAS,CAAC,EAChB,IAAK,IAAM4e,KAAW11B,OAAO8K,IAAI,CAAC0G,GAAY,CAC5C,IAAM6gB,EAAY7gB,CAAS,CAACkkB,EAAQ,CAGpC,GAAI,CAACrD,EAAW,SAEhB,IAAMxf,EAAQL,CAAM,CAAC6f,EAAU,CACzBprB,EAAQuuB,CAAG,CAACE,EAAQ,CAG1B,GAAI,CAAC7iB,EAAM3B,QAAQ,EAAI,CAACjK,EAAO,OAAO,IAEtC6P,CAAAA,CAAM,CAACjE,EAAME,GAAG,CAAC,CAAG9L,CACtB,CAEA,OAAO6P,CACT,CACF,EACAtE,OAAAA,CACF,GAE6B8iB,UAC7B,AAAKC,GAAqB,IAG5B,EAyCEI,4BAA6B,CAC3B1oB,EACA2oB,KAEA,GAAI,CAACtG,GAAqB,CAACE,EACzB,MAAO,CAAE5c,OAAQ,CAAC,EAAGijB,eAAgB,EAAM,MAnWjDvG,EAwWMA,EAvWNE,EAwWMA,EApWN,IAAI5c,EAAyB,CAAC,EAE9B,IAAK,IAAMnK,KAAOzI,OAAO8K,IAAI,CAACwkB,EAAkB9c,MAAM,EAAG,CACvD,IAAIvL,EAAuCgG,AA+VvCA,CA/V4C,CAACxE,EAAI,AAEjD,AAAiB,WAAjB,OAAOxB,EACTA,EAAQiI,EAAgBjI,GACfxG,MAAMiG,OAAO,CAACO,IACvBA,CAAAA,EAAQA,EAAMoH,GAAG,CAACa,EAAeA,EAMnC,IAAM4mB,EAAetG,CAAoB,CAAC/mB,EAAI,CACxCstB,EAAazG,EAAmB9c,MAAM,CAAC/J,EAAI,CAACyI,QAAQ,CAU1D,GACE8kB,AATqBv1B,CAAAA,MAAMiG,OAAO,CAACovB,GACjCA,EAAaphB,IAAI,CAAC,AAACuhB,GACVx1B,MAAMiG,OAAO,CAACO,GACjBA,EAAMyN,IAAI,CAAC,AAACuT,GAAQA,EAAI5U,QAAQ,CAAC4iB,IACjChvB,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOoM,QAAQ,CAAC4iB,IAEtBhvB,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOoM,QAAQ,CAACyiB,EAAY,GAI7B,AAAiB,SAAV7uB,GAAyB,CAAE8uB,CAAAA,GA0UjCH,CA1UmE,EAErE,MAAO,CAAEhjB,OAAQ,CAAC,EAAGijB,eAAgB,EAAM,EAM3CE,GACC,EAAC9uB,GACCxG,MAAMiG,OAAO,CAACO,IACbA,AAAiB,IAAjBA,EAAMmG,MAAM,EAGXnG,CAAAA,AAAa,UAAbA,CAAK,CAAC,EAAE,EAAgBA,CAAK,CAAC,EAAE,GAAK,CAAC,KAAK,EAAEwB,EAAI,EAAE,CAAC,AAAD,CAAC,IAEzDxB,EAAQF,OACR,OAAOkG,AAsTLA,CAtTU,CAACxE,EAAI,EAMjBxB,GACA,AAAiB,UAAjB,OAAOA,GACPqoB,EAAmB9c,MAAM,CAAC/J,EAAI,CAAC0I,MAAM,EAErClK,CAAAA,EAAQA,EAAMuH,KAAK,CAAC,IAAG,EAGrBvH,GACF2L,CAAAA,CAAM,CAACnK,EAAI,CAAGxB,CAAI,CAEtB,CAEA,MAAO,CACL2L,OAAAA,EACAijB,eAjEmB,EAkErB,CAsSE,EAEAK,gBAAiB,CACf7wB,EACA6O,IACGgiB,AAvaF,UACL7wB,CAAsC,CACtC6O,CAAmB,EAInB,IAAMiiB,EAAaxpB,EAAYtH,EAAIuH,GAAG,EAGtC,GAAI,CAACupB,EACH,OAAO9wB,EAAIuH,GAAG,AAEhB,QAAQupB,EAAmB7oB,MAAM,CACjC2G,EAAoBkiB,EAAWlpB,KAAK,CAAEiH,GAEtC7O,EAAIuH,GAAG,CAAGwpB,AH/CL,SAAmBC,CAAiB,EACzC,GAAI,CAAE1oB,KAAAA,CAAI,CAAED,SAAAA,CAAQ,CAAE,CAAG2oB,EACrBzoB,EAAWyoB,EAAOzoB,QAAQ,EAAI,GAC9BL,EAAW8oB,EAAO9oB,QAAQ,EAAI,GAC9BF,EAAOgpB,EAAOhpB,IAAI,EAAI,GACtBJ,EAAQopB,EAAOppB,KAAK,EAAI,GACxBQ,EAAuB,GAE3BE,EAAOA,EAAOxN,mBAAmBwN,GAAMwB,OAAO,CAAC,OAAQ,KAAO,IAAM,GAEhEknB,EAAO5oB,IAAI,CACbA,EAAOE,EAAO0oB,EAAO5oB,IAAI,CAChBC,IACTD,EAAOE,EAAQ,EAACD,EAASiB,OAAO,CAAC,KAAQ,IAAGjB,EAAS,IAAKA,CAAO,EAC7D2oB,EAAOvoB,IAAI,EACbL,CAAAA,GAAQ,IAAM4oB,EAAOvoB,IAAI,AAAD,GAIxBb,GAAS,AAAiB,UAAjB,OAAOA,GAClBA,CAAAA,EAAQhL,OAAOq0B,AJdZ,SAAgCrpB,CAAqB,EAC1D,IAAMC,EAAe,IAAIuoB,gBACzB,IAAK,GAAM,CAAChtB,EAAKxB,EAAM,GAAIjH,OAAO6L,OAAO,CAACoB,GACxC,GAAIxM,MAAMiG,OAAO,CAACO,GAChB,IAAK,IAAMsN,KAAQtN,EACjBiG,EAAa7B,MAAM,CAAC5C,EAAKyK,EAAuBqB,SAGlDrH,EAAalC,GAAG,CAACvC,EAAKyK,EAAuBjM,IAGjD,OAAOiG,CACT,EIEsDD,GAAAA,EAGpD,IAAIK,EAAS+oB,EAAO/oB,MAAM,EAAKL,GAAU,IAAGA,GAAY,GAoBxD,OAlBIW,GAAY,CAACA,EAASqB,QAAQ,CAAC,MAAMrB,CAAAA,GAAY,GAAE,EAGrDyoB,EAAOxoB,OAAO,EACZ,EAACD,GAAY8F,EAAiB1D,IAAI,CAACpC,EAAQ,GAAMH,AAAS,KAATA,GAEnDA,EAAO,KAAQA,CAAAA,GAAQ,EAAC,EACpBF,GAAYA,AAAgB,MAAhBA,CAAQ,CAAC,EAAE,EAAUA,CAAAA,EAAW,IAAMA,CAAO,GACpD,AAACE,GACVA,CAAAA,EAAO,EAAC,EAGNJ,GAAQA,AAAY,MAAZA,CAAI,CAAC,EAAE,EAAUA,CAAAA,EAAO,IAAMA,CAAG,EACzCC,GAAUA,AAAc,MAAdA,CAAM,CAAC,EAAE,EAAUA,CAAAA,EAAS,IAAMA,CAAK,EAK7C,GAAEM,EAAWH,EAHrBF,CAAAA,EAAWA,EAAS4B,OAAO,CAAC,QAAShP,mBAAkB,EACvDmN,CAAAA,EAASA,EAAO6B,OAAO,CAAC,IAAK,MAAK,EAEc9B,CAClD,EGGsB8oB,EACtB,GAuZyB9wB,EAAK6O,GAE1BqiB,uBAAwB,CACtBhpB,EACAqF,IACG2jB,AA1ZF,UACLhpB,CAAgB,CAChBqF,CAAsB,CACtB0c,CAAqE,EAErE,GAAI,CAACA,EAAmB,OAAO/hB,EAE/B,IAAK,IAAM0D,KAASjR,OAAO8K,IAAI,CAACwkB,EAAkB9c,MAAM,EAAG,CACzD,IAOIgkB,EAPE,CAAEtlB,SAAAA,CAAQ,CAAEC,OAAAA,CAAM,CAAE,CAAGme,EAAkB9c,MAAM,CAACvB,EAAM,CACxDwlB,EAAa,CAAC,CAAC,EAAEtlB,EAAS,MAAQ,GAAG,EAAEF,EAAM,CAAC,CAAC,AAE/CC,CAAAA,GACFulB,CAAAA,EAAa,CAAC,CAAC,EAAEA,EAAW,CAAC,CAAC,AAAD,EAI/B,IAAMxvB,EAAQ2L,CAAM,CAAC3B,EAAM,AAUvBulB,GAPFA,EADE/1B,MAAMiG,OAAO,CAACO,GACHA,EAAMoH,GAAG,CAAC,AAAC+mB,GAAMA,GAAKj1B,mBAAmBi1B,IAAIhqB,IAAI,CAAC,KACtDnE,EACI9G,mBAAmB8G,GAEnB,KAGGiK,CAAO,GACvB3D,CAAAA,EAAWA,EAASmpB,UAAU,CAACD,EAAYD,EAAU,CAEzD,CAEA,OAAOjpB,CACT,GA0XgCA,EAAUqF,EAAQ0c,GAE9Crb,oBAAqB,CAAChH,EAAuBiH,IAC3CD,EAAoBhH,EAAOiH,EAC/B,CACF,EoC+EuC,CACjCgB,KAAMuW,EACNzR,KAAAA,EACAJ,SAAAA,EACAkV,SAAAA,EACAI,cAAAA,GACAjV,cAAe7X,QAAQoY,GAAG,CAACmc,qBAAqB,CAChDtH,cAAenvB,EAAQyrB,EAAe0D,aAAa,AACrD,GAEM3U,GAAerG,EACnB2F,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMW,OAAO,CACbhG,EAAY9H,EAAWxH,EAAIE,OAAO,EAClC4I,IAEFyoB,AhC/SG,SACLC,CAA4B,CAC5BpuB,CAAM,CACNxB,CAAqB,EAErB,IAAM+N,EAAOD,GAAe8hB,EAC5B7hB,CAAAA,CAAI,CAACvM,EAAI,CAAGxB,EAlBZ5B,AAmBsBwxB,CAnBnB,CAAChiB,EAAkB,CAmBSG,CACjC,EgCuSmB3P,EAAK,iBAAkBnF,EAAQwa,IAE9C,IAAMjG,GAAgBiG,AAAAA,CAAAA,AAAAA,MAAAA,GAAAA,KAAAA,EAAAA,GAAcjG,aAAa,AAAD,GAAKuF,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMvF,aAAa,AAAD,CAInEA,CAAAA,IAAiB,CAACtG,GACpBtB,CAAAA,EAAUU,QAAQ,CAAG,CAAC,CAAC,EAAEkH,GAAc,EAAE5H,AAAuB,MAAvBA,EAAUU,QAAQ,CAAW,GAAKV,EAAUU,QAAQ,CAAC,CAAC,AAAD,EAEhG,IAAMe,GACJyG,GAAe1P,EAAK,WAAa8I,GAAkBsG,GAE/CqiB,GAAmB92B,OAAO8K,IAAI,CAClCqkB,GAAYyB,cAAc,CAACvrB,EAAKwH,GAK9BmN,CAAAA,GACFnN,CAAAA,EAAUU,QAAQ,CAAGU,EACnBpB,EAAUU,QAAQ,EAAI,IACtByM,EAAK9L,OAAO,EACZX,QAAQ,AAAD,EAGX,IAAIqF,GACFmC,GAAe1P,EAAK,UAGtB,GAAI,CAACuN,IAAUuc,GAAYI,mBAAmB,CAAE,CAC9C,IAAMwH,EAAc5H,GAAYI,mBAAmB,CACjD3a,EAAkB4Z,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAcjhB,QAAQ,AAAD,GAAKV,EAAUU,QAAQ,EAAI,MAE9DypB,EAAe7H,GAAYwG,2BAA2B,CAC1DoB,GAAe,CAAC,EAChB,GAGEC,CAAAA,EAAanB,cAAc,EAC7BjjB,CAAAA,GAASokB,EAAapkB,MAAM,AAAD,CAE/B,CAWA,IAAM3F,GAAQ8H,GAAe1P,EAAK,UAAY,CAC5C,GAAGwH,EAAUI,KAAK,AACpB,EAEMioB,GAAiB,IAAI9oB,IACrB6qB,GAAoB,EAAE,CAM5B,GAAI,CAAC,IAAI,CAAC1K,WAAW,CACnB,IAAK,IAAM9jB,IAAO,IACbquB,MACA92B,OAAO8K,IAAI,CAACqkB,GAAYK,mBAAmB,EAAI,CAAC,GACpD,CAAE,CAOD,IAAM0H,EAAgBz2B,MAAMiG,OAAO,CAACuoB,EAAa,CAACxmB,EAAI,EAClDwmB,EAAa,CAACxmB,EAAI,CAAC2C,IAAI,CAAC,IACxB6jB,EAAa,CAACxmB,EAAI,CAEhB0uB,EAAa12B,MAAMiG,OAAO,CAACuG,EAAK,CAACxE,EAAI,EACvCwE,EAAK,CAACxE,EAAI,CAAC2C,IAAI,CAAC,IAChB6B,EAAK,CAACxE,EAAI,AAEV,CAAEA,KAAOwmB,IAAkBiI,IAAkBC,GAC/CF,GAAkBzrB,IAAI,CAAC/C,EAE3B,CAOF,GAJA0mB,GAAY+G,eAAe,CAAC7wB,EAAK4xB,IACjC9H,GAAY8F,oBAAoB,CAAChoB,GAAOioB,IACxC/F,GAAYlb,mBAAmB,CAACgb,GAAegI,IAE3C/H,GAAe,CACjB,IAAMkI,EAAcjI,GAAYwG,2BAA2B,CAAC1oB,GAAO,IAM7DoqB,EACJL,AALmB7H,GAAYwG,2BAA2B,CAC1D/iB,IAAU,CAAC,EACX,IAGaijB,cAAc,EAAIjjB,GAC3BA,GACAwkB,EAAYvB,cAAc,CACxB5oB,GACA,CAAC,EAgBT,GAdA5H,EAAIuH,GAAG,CAAGuiB,GAAYoH,sBAAsB,CAC1ClxB,EAAIuH,GAAG,EAAI,IACXyqB,GAEFxqB,EAAUU,QAAQ,CAAG4hB,GAAYoH,sBAAsB,CACrD1pB,EAAUU,QAAQ,EAAI,IACtB8pB,GAEFrI,EAAmBG,GAAYoH,sBAAsB,CACnDvH,EACAqI,GAIE,CAACzkB,GACH,GAAIwkB,EAAYvB,cAAc,CAK5B,IAAK,IAAMptB,KAJXmK,GAAS5S,OAAO2e,MAAM,CAAC,CAAC,EAAGyY,EAAYxkB,MAAM,EAI3Buc,GAAYK,mBAAmB,CAC/C,OAAOviB,EAAK,CAACxE,EAAI,KAEd,CAEL,IAAMsuB,EAAc5H,AAA+B,MAA/BA,GAAYI,mBAAmB,QAA/BJ,GAAYI,mBAAmB,MAA/BJ,GAClBva,EACE4Z,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAcjhB,QAAQ,AAAD,GAAKV,EAAUU,QAAQ,EAAI,KAMhDwpB,CAAAA,GACFnkB,CAAAA,GAAS5S,OAAO2e,MAAM,CAAC,CAAC,EAAGoY,EAAW,CAE1C,CAEJ,CAKA,IAAK,IAAMtuB,KAAOysB,GACZ,AAAEzsB,KAAOwmB,IACX,OAAOhiB,EAAK,CAACxE,EAAI,CAIrB,GAAM,CAAEhD,qBAAAA,EAAoB,CAAEG,wBAAAA,EAAuB,CAAE,CACrDR,AAAAA,GAAAA,EAAAA,yBAAAA,AAAAA,EAA0BC,EAAKohB,EAAkBG,OAAO,EAEtD0Q,GAAc,GAIlB,GAA2CnxB,EAAK,CAC9C,GAAM,CAAEgB,kBAAAA,CAAiB,CAAE,CACzBb,EAAQ,4DAQVgxB,GAAc7I,AAAgB,KAN9BA,CAAAA,EAActnB,EACZ9B,EACAc,EACAsgB,EAAkBG,OAAO,CACzB1mB,EAAQkH,EAAmB,CAG/B,CAEA,IAAMinB,GAAAA,AACyC,MAA7CzD,CAAAA,EAAAA,EAAkB,CAACD,GAA0B,AAADA,EAAC,OAA7CC,CAA+C,CAAC,IAAI,CAACO,UAAU,CAAC,CAC5DjR,GACJmU,AAAAA,CAAAA,AAAAA,MAAAA,GAAAA,KAAAA,EAAAA,GAAqBnU,UAAU,AAAD,GAAKgS,EAAoBqL,MAAM,CAEzDC,GAAoB1oB,EAAiB2c,GACvCgM,GACF1iB,GAAe1P,EAAK,eAAiBmyB,EAEnC/nB,CAAAA,EAAegoB,KAAqB7kB,IACtC6kB,CAAAA,GAAmBtI,GAAYoH,sBAAsB,CACnDkB,GACA7kB,GAAM,EAIN6kB,AAAqB,WAArBA,IACFA,CAAAA,GAAmB,GAAE,EAEvB,GAAI,CACFA,GUjwBGlqB,AViwBiCkqB,GUhwBrCjpB,KAAK,CAAC,KACNH,GAAG,CAAC,AAACqpB,IACJ,GAAI,KCdRjpB,EAAAA,EDeiCpO,mBAAmBq3B,GAA9CA,ECZCjpB,EAAQU,OAAO,CACpB,AAAInN,OAAQ,yBAAmD,MAC/D,AAAC21B,GAAiBx3B,mBAAmBw3B,GDWnC,CAAE,MAAOC,EAAG,CAEV,MAAM,qBAAkD,CAAlD,IAAIxlB,EAAY,mCAAhB,qB,MAAA,O,WAAA,G,aAAA,EAAiD,EACzD,CACA,OAAOslB,CACT,GACCtsB,IAAI,CAAC,IVuvBN,CAAE,MAAOwsB,EAAG,CAAC,CAIb,OAFAH,GAAmB3mB,EAAoB2mB,IAEhC,CACLxqB,MAAAA,GACAgiB,cAAAA,GACAD,iBAAAA,EACApc,OAAAA,GACA/F,UAAAA,EACAyB,OAAAA,GACAygB,kBAAAA,EACA7gB,QAAS8L,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAM9L,OAAO,CACtBuG,cAAAA,GACA6iB,YAAAA,GACA7I,YAAAA,EACAS,cAAAA,GACAuI,iBAAAA,GACAhyB,qBAAAA,GACAG,wBAAAA,GACA,GAAGipB,CAAS,CACZ7C,sBAAuB6C,EAAU7C,qBAAqB,CACtDD,wBAAyB8C,EAAU9C,uBAAuB,CAC1D7R,WAAAA,GACAmU,oBAAAA,EACF,CACF,CAEOwJ,iBAAiBxyB,CAAoB,CAAE,CAC5C,GAAI,CAAC,IAAI,CAACyyB,aAAa,CAAE,CACvB,IAAMpS,EAAc3Q,GAAe1P,EAAK,gBAAkB,EAC1D,KAAI,CAACyyB,aAAa,CAAG,IAAIpX,GAAcgF,EACzC,CACA,OAAO,IAAI,CAACoS,aAAa,AAC3B,CAEA,MAAaC,eAAe,CAC1B1yB,IAAAA,CAAG,CACH6U,WAAAA,CAAU,CACVrD,SAAAA,CAAQ,CACR4K,UAAAA,CAAS,CACTP,WAAAA,CAAU,CACVuF,kBAAAA,CAAiB,CACjBtF,kBAAAA,CAAiB,CACjB1b,qBAAAA,CAAoB,CACpBG,wBAAAA,CAAuB,CACvBib,kBAAAA,CAAiB,CACjBpC,UAAAA,CAAS,CAaV,CAAE,CACD,IAAMqZ,EAAgB,IAAI,CAACD,gBAAgB,CAACxyB,GACtCya,EAAa,MAAMgY,EAAcnyB,GAAG,CAACkR,EAAUgK,EAAmB,CACtEY,UAAAA,EACAP,WAAAA,EACAC,kBAAAA,EACA1b,qBAAAA,EACAmc,WAAYvc,AAAwB,aAAxBA,EAAIE,OAAO,CAACyyB,OAAO,CAC/B/W,iBAAkB,MAAM,IAAI,CAAC8M,mBAAmB,CAC9C1oB,EACA6U,EACAuM,GAEFhI,UAAAA,CACF,GAEA,GAAI,CAACqB,GAEDjJ,GAEA,CAAEpR,CAAAA,GAAwBG,CAAsB,EAOhD,MAAM,qBAA8D,CAA9D,AAAIjE,MAAM,qDAAV,qB,MAAA,M,WAAA,G,aAAA,EAA6D,GAGvE,OAAOme,CACT,CACF,C,qIY91BO,OAAMmY,WAAoCt2B,MAC/CwI,aAAc,CACZ,KAAK,CACH,mJAEJ,CAEA,OAAcC,UAAW,CACvB,MAAM,IAAI6tB,EACZ,CACF,CAcO,MAAMC,GACX,OAAchtB,KAAK7D,CAAuB,CAA0B,CAClE,OAAO,IAAIiD,MAAMjD,EAAgB,CAC/B1B,IAAI4E,CAAM,CAAEC,CAAI,CAAEC,CAAQ,EACxB,OAAQD,GACN,IAAK,QACL,IAAK,SACL,IAAK,MACH,OAAOytB,GAA4B7tB,QAAQ,AAC7C,SACE,OAAOM,GAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMC,EAC5C,CACF,CACF,EACF,CACF,CAEA,IAAM0tB,GAA8B33B,OAAOsU,GAAG,CAAC,wBAmBxC,SAASsjB,GACd7yB,CAAgB,CAChB8yB,CAA+B,EAE/B,IAAMC,EAAuBC,AArBxB,SACLlxB,CAAwB,EAExB,IAAMmxB,EAA0CnxB,CAA0B,CACxE8wB,GACD,QACD,AAAI,AAACK,GAAa/3B,MAAMiG,OAAO,CAAC8xB,IAAaA,AAAoB,IAApBA,EAASprB,MAAM,CAIrDorB,EAHE,EAAE,AAIb,EAUuDH,GACrD,GAAIC,AAAgC,IAAhCA,EAAqBlrB,MAAM,CAC7B,MAAO,GAMT,IAAMqrB,EAAa,IAAIC,GAAAA,EAAeA,CAACnzB,GACjCozB,EAAkBF,EAAWtrB,MAAM,GAGzC,IAAK,IAAM+kB,KAAUoG,EACnBG,EAAWztB,GAAG,CAACknB,GAIjB,IAAK,IAAMA,KAAUyG,EACnBF,EAAWztB,GAAG,CAACknB,GAGjB,MAAO,EACT,CAMO,MAAM0G,GACX,OAAcC,KACZxxB,CAAuB,CACvByxB,CAA6C,CAC5B,CACjB,IAAMC,EAAkB,IAAIL,GAAAA,EAAeA,CAAC,IAAIruB,SAChD,IAAK,IAAM6nB,KAAU7qB,EAAQ8F,MAAM,GACjC4rB,EAAgB/tB,GAAG,CAACknB,GAGtB,IAAI8G,EAAmC,EAAE,CACnCC,EAAkB,IAAI7sB,IACtB8sB,EAAwB,KAE5B,IAAM1P,EAAYC,GAAAA,gBAAAA,CAAAA,QAAyB,GAO3C,GANID,GACFA,CAAAA,EAAU2P,kBAAkB,CAAG,EAAG,EAIpCH,EAAiBI,AADEL,EAAgB5rB,MAAM,GACbqnB,MAAM,CAAC,AAACnoB,GAAM4sB,EAAgBpzB,GAAG,CAACwG,EAAEf,IAAI,GAChEwtB,EAAiB,CACnB,IAAMO,EAA8B,EAAE,CACtC,IAAK,IAAMnH,KAAU8G,EAAgB,CACnC,IAAMM,EAAc,IAAIZ,GAAAA,EAAeA,CAAC,IAAIruB,SAC5CivB,EAAYtuB,GAAG,CAACknB,GAChBmH,EAAkB7tB,IAAI,CAAC8tB,EAAYn0B,QAAQ,GAC7C,CAEA2zB,EAAgBO,EAClB,CACF,EAEME,EAAiB,IAAIjvB,MAAMyuB,EAAiB,CAChDpzB,IAAI4E,CAAM,CAAEC,CAAI,CAAEC,CAAQ,EACxB,OAAQD,GAEN,KAAK2tB,GACH,OAAOa,CAIT,KAAK,SACH,OAAO,SAAU,GAAGrV,CAAiC,EACnDsV,EAAgBnL,GAAG,CACjB,AAAmB,UAAnB,OAAOnK,CAAI,CAAC,EAAE,CAAgBA,CAAI,CAAC,EAAE,CAAGA,CAAI,CAAC,EAAE,CAACrY,IAAI,EAEtD,GAAI,CAEF,OADAf,EAAOkB,MAAM,IAAIkY,GACV4V,CACT,QAAU,CACRL,GACF,CACF,CACF,KAAK,MACH,OAAO,SAAU,GAAGvV,CAAmB,EACrCsV,EAAgBnL,GAAG,CACjB,AAAmB,UAAnB,OAAOnK,CAAI,CAAC,EAAE,CAAgBA,CAAI,CAAC,EAAE,CAAGA,CAAI,CAAC,EAAE,CAACrY,IAAI,EAEtD,GAAI,CAEF,OADAf,EAAOS,GAAG,IAAI2Y,GACP4V,CACT,QAAU,CACRL,GACF,CACF,CAEF,SACE,OAAOxuB,GAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMC,EAC5C,CACF,CACF,GAEA,OAAO8uB,CACT,CACF,CAwCA,SAASC,GAA6BC,CAAyB,EAE7D,GAZOC,AAAuB,WAAvBA,AAWcC,AAAAA,GAAAA,GAAAA,uBAAAA,AAAAA,EAAwBF,GAXzBG,KAAK,CAcvB,MAAM,IAAI3B,EAEd,CCtNO,MAAM4B,GAgBX1vB,YACE7E,CAA2C,CAC3CD,CAA6D,CAC7DgC,CAA+B,CAC/BgxB,CAA+B,CAC/B,C,IAOoBhxB,EAJpB,IAAM5B,EACJH,GACAF,AAAAA,GAAAA,EAAAA,yBAAAA,AAAAA,EAA0BC,EAAKC,GAAcG,oBAAoB,CAE7Dq0B,EAAc,AAAwCh0B,MAAxCuB,CAAAA,EAAAA,EAAQ1B,GAAG,CAACG,EAAAA,4BAA4BA,GAAAA,KAAAA,EAAxCuB,EAA2CJ,KAAK,AAEpE,KAAI,CAAC8yB,UAAU,CAAG75B,EAChB,EAACuF,GACCq0B,GACAx0B,GACCw0B,IAAgBx0B,EAAaI,aAAa,AAGQ,EAGvD,IAAI,CAACs0B,cAAc,CAAG10B,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAcI,aAAa,CACjD,IAAI,CAACu0B,eAAe,CAAG5B,CACzB,CAEA,IAAI6B,WAAY,CACd,OAAO,IAAI,CAACH,UAAU,AACxB,CAEAI,QAAS,CACP,GAAI,CAAC,IAAI,CAACH,cAAc,CACtB,MAAM,qBAEL,CAFK,AAAIr4B,MACR,0EADI,qB,MAAA,M,WAAA,G,aAAA,EAEN,GAGF,IAAI,CAACs4B,eAAe,CAACjvB,GAAG,CAAC,CACvBM,KAAMxF,EAAAA,4BAA4BA,CAClCmB,MAAO,IAAI,CAAC+yB,cAAc,CAC1BpzB,SAAU,GACVC,SAAmD,OACnDC,OAAQ1E,GACR6C,KAAM,GACR,GAEA,IAAI,CAAC80B,UAAU,CAAG,EACpB,CAEAK,SAAU,CAIR,IAAI,CAACH,eAAe,CAACjvB,GAAG,CAAC,CACvBM,KAAMxF,EAAAA,4BAA4BA,CAClCmB,MAAO,GACPL,SAAU,GACVC,SAAmD,OACnDC,OAAQ1E,GACR6C,KAAM,IACN0B,QAAS,IAAI1G,KAAK,EACpB,GAEA,IAAI,CAAC85B,UAAU,CAAG,EACpB,CACF,CCbA,SAASM,GACPh1B,CAA0B,CAC1Bi1B,CAAiD,EAEjD,GACE,4BAA6Bj1B,EAAIE,OAAO,EACxC,AAAkD,UAAlD,OAAOF,EAAIE,OAAO,CAAC,0BAA0B,CAC7C,CACA,IAAMg1B,EAAiBl1B,EAAIE,OAAO,CAAC,0BAA0B,CACvDi1B,EAAkB,IAAInwB,QAE5B,IAAK,IAAM6nB,KAAUuI,AvDlDlB,SAA4BC,CAAqB,EACtD,IAEI3iB,EACA4iB,EACAC,EACAC,EACAC,EANAC,EAAiB,EAAE,CACnBhoB,EAAM,EAOV,SAASioB,IACP,KAAOjoB,EAAM2nB,EAActtB,MAAM,EAAI,KAAK4C,IAAI,CAAC0qB,EAAcO,MAAM,CAACloB,KAClEA,GAAO,EAET,OAAOA,EAAM2nB,EAActtB,MAAM,AACnC,CAQA,KAAO2F,EAAM2nB,EAActtB,MAAM,EAAE,CAIjC,IAHA2K,EAAQhF,EACR+nB,EAAwB,GAEjBE,KAEL,GAAIL,AAAO,MADXA,CAAAA,EAAKD,EAAcO,MAAM,CAACloB,EAAG,EACb,CAQd,IANA6nB,EAAY7nB,EACZA,GAAO,EAEPioB,IACAH,EAAY9nB,EAELA,EAAM2nB,EAActtB,MAAM,EAjB9ButB,AAAO,MAFdA,CAAAA,EAAKD,EAAcO,MAAM,CAACloB,EAAG,GAER4nB,AAAO,MAAPA,GAAcA,AAAO,MAAPA,GAkB7B5nB,GAAO,CAILA,CAAAA,EAAM2nB,EAActtB,MAAM,EAAIstB,AAA8B,MAA9BA,EAAcO,MAAM,CAACloB,IAErD+nB,EAAwB,GAExB/nB,EAAM8nB,EACNE,EAAevvB,IAAI,CAACkvB,EAAcrqB,SAAS,CAAC0H,EAAO6iB,IACnD7iB,EAAQhF,GAIRA,EAAM6nB,EAAY,CAEtB,MACE7nB,GAAO,CAIP,GAAC+nB,GAAyB/nB,GAAO2nB,EAActtB,MAAM,AAAD,GACtD2tB,EAAevvB,IAAI,CAACkvB,EAAcrqB,SAAS,CAAC0H,EAAO2iB,EAActtB,MAAM,EAE3E,CAEA,OAAO2tB,CACT,EuDd4CR,GACtCC,EAAgBnvB,MAAM,CAAC,aAAc6mB,GAMvC,IAAK,IAAMA,KAAU6G,AAHG,IAAIL,GAAAA,EAAeA,CAAC8B,GAGPrtB,MAAM,GACzCmtB,EAAgBtvB,GAAG,CAACknB,EAExB,CACF,C,wDCnGO,eAAegJ,GACpBC,CAA4B,CAC5BC,CAA0B,EAE1B,GAAI,CAACD,EACH,OAAOC,IAIT,IAAMC,EAAyBC,GAAuBH,GACtD,GAAI,CACF,OAAO,MAAMC,GACf,QAAU,CAER,IAAMG,EAAiBC,AA2B3B,SACEC,CAAuB,CACvBC,CAAuB,EAEvB,IAAMC,EAAW,IAAIvvB,IAAIqvB,EAAK/R,sBAAsB,EAC9CkS,EAAuB,IAAIxvB,IAAIqvB,EAAKI,uBAAuB,EACjE,MAAO,CACLnS,uBAAwBgS,EAAKhS,sBAAsB,CAAC8K,MAAM,CACxD,AAACzrB,GAAQ,CAAC4yB,EAAS91B,GAAG,CAACkD,IAEzB+yB,mBAAoB97B,OAAOsoB,WAAW,CACpCtoB,OAAO6L,OAAO,CAAC6vB,EAAKI,kBAAkB,EAAEtH,MAAM,CAC5C,CAAC,CAAC/rB,EAAI,GAAK,CAAEA,CAAAA,KAAOgzB,EAAKK,kBAAiB,IAG9CD,wBAAyBH,EAAKG,uBAAuB,CAACrH,MAAM,CAC1D,AAACpe,GAAY,CAACwlB,EAAqB/1B,GAAG,CAACuQ,GAE3C,CACF,EA7CMilB,EACAC,GAAuBH,GAEzB,OAAMY,GAAmBZ,EAAOI,EAClC,CACF,CASA,SAASD,GAAuBH,CAAgB,EAC9C,MAAO,CACLzR,uBAAwByR,EAAMzR,sBAAsB,CAChD,IAAIyR,EAAMzR,sBAAsB,CAAC,CACjC,EAAE,CACNoS,mBAAoB,CAAE,GAAGX,EAAMW,kBAAkB,AAAC,EAClDD,wBAAyBV,EAAMU,uBAAuB,CAClD,IAAIV,EAAMU,uBAAuB,CAAC,CAClC,EAAE,AACR,CACF,CAuBA,eAAeG,GACbpY,CAAc,CACd3C,CAA8C,EAE9C,GAAI2C,AAAgB,IAAhBA,EAAKxW,MAAM,CACb,OAGF,IAAM6uB,EAA4B,EAAE,AAEhChb,CAAAA,GACFgb,EAASzwB,IAAI,CAACyV,EAAiByC,aAAa,CAACE,IAG/C,IAAMsY,EAAWC,AlBgBZ,WAGL,GAAK7R,EAAS,CAACD,GAAkB,CAIjC,OAAOC,EAAS,CAACD,GAAkB,CAACte,MAAM,EAC5C,IkBvBE,GAAImwB,EACF,IAAK,IAAMrO,KAAWqO,EACpBD,EAASzwB,IAAI,CAACqiB,EAAQuO,UAAU,IAAIxY,GAIxC,OAAMliB,QAAQkhB,GAAG,CAACqZ,EACpB,CAEO,eAAeF,GACpBvS,CAAoB,CACpB0J,CAAyB,EAEzB,IAAMxJ,EACJwJ,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOxJ,sBAAsB,AAAD,GAAKF,EAAUE,sBAAsB,EAAI,EAAE,CAEnEoS,EACJ5I,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAO4I,kBAAkB,AAAD,GAAKtS,EAAUsS,kBAAkB,EAAI,CAAC,EAE1DD,EACJ3I,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAO2I,uBAAuB,AAAD,GAAKrS,EAAUqS,uBAAuB,EAAI,EAAE,CAE3E,OAAOn6B,QAAQkhB,GAAG,CAAC,CACjBoZ,GAAetS,EAAwBF,EAAUvI,gBAAgB,KAC9DjhB,OAAO+L,MAAM,CAAC+vB,MACdD,EACJ,CACH,CC3GA,IAAMQ,GAA2C,qBAEhD,CAFgD,AAAI16B,MACnD,8EAD+C,qB,MAAA,O,WAAA,G,aAAA,EAEjD,EAEA,OAAM26B,GAGJlC,SAAgB,CACd,MAAMiC,EACR,CAEAE,UAA8B,CAG9B,CAEAC,KAAY,CACV,MAAMH,EACR,CAEAI,MAAa,CACX,MAAMJ,EACR,CAEAK,WAAkB,CAChB,MAAML,EACR,CAEA,OAAOnwB,KAAQuK,CAAK,CAAK,CACvB,OAAOA,CACT,CACF,CAEA,IAAMkmB,GACJ,AAAsB,aAAtB,OAAOrwB,YAA+BA,WAAmBswB,iBAAiB,C,8EChBrE,OAAMC,GASX1yB,YAAY,CAAEsU,UAAAA,CAAS,CAAEqe,QAAAA,CAAO,CAAEC,YAAAA,CAAW,CAAoB,CAAE,C,KAF3DC,cAAc,CAAG,IAAI5wB,IAG3B,IAAI,CAACqS,SAAS,CAAGA,EACjB,IAAI,CAACqe,OAAO,CAAGA,EACf,IAAI,CAACC,WAAW,CAAGA,EAEnB,IAAI,CAACE,aAAa,CAAG,GAAIC,CAAAA,IAAAA,EACzB,IAAI,CAACD,aAAa,CAACE,KAAK,EAC1B,CAEOC,MAAM1a,CAAe,CAAQ,CAClC,GC7BAtM,AAAY,OD6BGsM,GC5Bf,AAAmB,UAAnB,OD4BeA,GC3Bf,SD2BeA,GC1Bf,AAAwB,YAAxB,OAAOtM,AD0BQsM,EC1BAxL,IAAI,CD2Bb,AAAC,IAAI,CAACuH,SAAS,EACjB4e,KAEF,IAAI,CAAC5e,SAAS,CACZiE,EAAKlD,KAAK,CAAC,AAAC6C,GAAU,IAAI,CAACib,eAAe,CAAC,UAAWjb,UAEnD,GAAI,AAAgB,YAAhB,OAAOK,EAEhB,IAAI,CAAC6a,WAAW,CAAC7a,QAEjB,MAAM,qBAAgE,CAAhE,AAAI/gB,MAAM,uDAAV,qB,MAAA,M,WAAA,G,aAAA,EAA+D,EAEzE,CAEQ47B,YAAYnC,CAAuB,CAAE,KDPf3kB,CCSxB,AAAC,KAAI,CAACgI,SAAS,EACjB4e,KAGF,IAAMnU,EAAgBC,GAAAA,oBAAAA,CAAAA,QAA6B,EAC/CD,CAAAA,GACF,IAAI,CAAC8T,cAAc,CAAClP,GAAG,CAAC5E,GAG1B,IAAMsU,EAAiBC,GAAAA,qBAAAA,CAAAA,QAA8B,GAM/CC,EAAqBF,EACvBA,EAAeE,kBAAkB,CACjCxU,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAe0Q,KAAK,AAGnB,KAAI,CAAC+D,0BAA0B,GAClC,IAAI,CAACA,0BAA0B,CAAG,IAAI,CAACC,mBAAmB,GAC1D,IAAI,CAACnf,SAAS,CAAC,IAAI,CAACkf,0BAA0B,GAQhD,IAAME,GDvCsBpnB,ECuCS,UACnC,GAAI,CACF,MAAMgnB,GAAAA,qBAAAA,CAAAA,GAAyB,CAAC,CAAEC,mBAAAA,CAAmB,EAAG,IACtDtC,IAEJ,CAAE,MAAO/Y,EAAO,CACd,IAAI,CAACib,eAAe,CAAC,WAAYjb,EACnC,CACF,ED9CF,AAAIsa,GACKA,GAA6BzwB,IAAI,CAACuK,GAEpC6lB,GAAsBpwB,IAAI,CAACuK,IC6ChC,IAAI,CAACwmB,aAAa,CAACnP,GAAG,CAAC+P,EACzB,CAEA,MAAcD,qBAAsB,CAElC,OADA,MAAM,IAAIl8B,QAAc,AAACwU,GAAY,IAAI,CAAC4mB,OAAO,CAAE5mB,IAC5C,IAAI,CAAC4nB,YAAY,EAC1B,CAEA,MAAcA,cAA8B,CAC1C,GAAI,AAA4B,IAA5B,IAAI,CAACb,aAAa,CAACc,IAAI,CAAQ,OAEnC,IAAK,IAAM7U,KAAiB,IAAI,CAAC8T,cAAc,CAC7C9T,EAAc0Q,KAAK,CAAG,QAGxB,IAAMpQ,EAAYC,GAAAA,gBAAAA,CAAAA,QAAyB,GAC3C,GAAI,CAACD,EACH,MAAM,qBAAoE,CAApE,IAAIlE,GAAe,kDAAnB,qB,MAAA,O,WAAA,G,aAAA,EAAmE,GAG3E,OAAO4V,GAAuB1R,EAAW,KACvC,IAAI,CAACyT,aAAa,CAACllB,KAAK,GACjB,IAAI,CAACklB,aAAa,CAACe,MAAM,IAEpC,CAEQV,gBAAgBW,CAAgC,CAAE5b,CAAc,CAAE,CASxE,GANAhgB,QAAQggB,KAAK,CACX4b,AAAa,YAAbA,EACI,0CACA,uDACJ5b,GAEE,IAAI,CAAC0a,WAAW,CAElB,GAAI,CACF,AAAgB,MAAhB,IAAI,CAACA,WAAW,EAAhB,IAAI,CAACA,WAAW,MAAhB,IAAI,CAAe1a,EACrB,CAAE,MAAO6b,EAAc,CACrB77B,QAAQggB,KAAK,CACX,qBAKC,CALD,IAAIiD,GACF,0EACA,CACEpH,MAAOggB,CACT,GAJF,qB,MAAA,O,WAAA,G,aAAA,EAKA,GAEJ,CAEJ,CACF,CAEA,SAASb,KACP,MAAM,qBAEL,CAFK,AAAI17B,MACR,uGADI,qB,MAAA,M,WAAA,G,aAAA,EAEN,EACF,CEjJO,SAASw8B,GACd1nB,CAAyB,EAIzB,IAFI2nB,EAEEtnB,EAA6B,CACjCI,MAAKmnB,EAAaC,KACZ,AAACF,GACHA,CAAAA,EAAgB3nB,GAAG,EAGrB2nB,EACGlnB,IAAI,CAAC,AAACjQ,IACL6P,EAAO7P,KAAK,CAAGA,CACjB,GACCuY,KAAK,CAAC,KAIP,GAEK4e,EAAclnB,IAAI,CAACmnB,EAAaC,GAE3C,EAEA,OAAOxnB,CACT,CC9BO,IAAMynB,GAAe,CAC1B,MACA,OACA,UACA,OACA,MACA,SACA,QACD,CC6DM,eAAeC,GACpBtpB,CAAY,CACZtI,CAGC,CACD6xB,CAA+C,EAE/C,IAAM7a,EAAiB,EAAE,CACnB8a,EACJD,GAAuBA,EAAoBV,IAAI,CAAG,EAIpD,IAAK,IAAIh1B,IADW41B,AA9DC,CAACpxB,IACtB,IAAMqxB,EAAwB,CAAC,UAAU,CAIzC,GAAIrxB,EAASsB,UAAU,CAAC,KAAM,CAC5B,IAAMgwB,EAAgBtxB,EAASiB,KAAK,CAAC,KAErC,IAAK,IAAIhN,EAAI,EAAGA,EAAIq9B,EAAczxB,MAAM,CAAG,EAAG5L,IAAK,CACjD,IAAIs9B,EAAcD,EAAc11B,KAAK,CAAC,EAAG3H,GAAG4J,IAAI,CAAC,KAE7C0zB,IAEE,AAACA,EAAY7vB,QAAQ,CAAC,UAAa6vB,EAAY7vB,QAAQ,CAAC,WAC1D6vB,CAAAA,EAAc,CAAC,EAAEA,EAAY,EAC3B,CAACA,EAAY7vB,QAAQ,CAAC,KAAO,IAAM,GACpC,MAAM,CAAC,AAAD,EAET2vB,EAAYpzB,IAAI,CAACszB,GAErB,CACF,CACA,OAAOF,CACT,GAuCqC1pB,GAEjCnM,EAAM,CAAC,EAAE1F,EAAAA,EAA0BA,CAAC,EAAE0F,EAAI,CAAC,CAC3C6a,EAAKpY,IAAI,CAACzC,GAKZ,GAAI6D,EAAIW,QAAQ,EAAI,CAACmxB,EAAwB,CAC3C,IAAM31B,EAAM,CAAC,EAAE1F,EAAAA,EAA0BA,CAAC,EAAEuJ,EAAIW,QAAQ,CAAC,CAAC,CAC1DqW,EAAKpY,IAAI,CAACzC,EACZ,CAEA,MAAO,CACL6a,KAAAA,EACAmb,uBAAwBC,AAhD5B,SACEpb,CAAc,EAEd,IAAMmb,EAAyB,IAAI3+B,IAC7BktB,EAAgB/C,KAEtB,GAAI+C,EACF,IAAK,GAAM,CAACvN,EAAM+G,EAAa,GAAIwG,EAC7B,kBAAmBxG,GACrBiY,EAAuB/zB,GAAG,CACxB+U,EACAoe,GAAiB,SAAYrX,EAAamY,aAAa,IAAIrb,KAMnE,OAAOmb,CACT,EA8B6Dnb,EAC3D,CACF,C,2CCvGA,IAAMsb,GAAqB,sBAEpB,OAAMC,WAA2Bx9B,MAGtCwI,YAA4Bi1B,CAAmB,CAAE,CAC/C,KAAK,CAAE,yBAAwBA,GAAAA,IAAAA,CADLA,WAAW,CAAXA,EAAAA,IAAAA,CAF5BrW,MAAM,CAA8BmW,EAIpC,CACF,CAEO,SAASG,GAAqBtoB,CAAY,QAC/C,AACiB,UAAf,OAAOA,GACPA,AAAQ,OAARA,GACE,WAAYA,GACd,AAAsB,UAAtB,OAAOA,EAAIgS,MAAM,EAKZhS,EAAIgS,MAAM,GAAKmW,EACxB,CCnBO,MAAMI,WAA8B39B,M,kBAApC,iBACW49B,IAAI,CAHU,yB,CAIhC,CCQA,MAAMC,WAAqC79B,MAGzCwI,YAA4Bs1B,CAAkB,CAAE,CAC9C,KAAK,CACH,CAAC,qBAAqB,EAAEA,EAAW,qGAAqG,EAAEA,EAAW,qJAAqJ,CAAC,OAFnRA,UAAU,CAAVA,EAAAA,IAAAA,CAFZ1W,MAAM,CAHU,2BAShC,CACF,CAGA,IAAM2W,GAAyB,IAAI1xB,QAS5B,SAAS2xB,GACdhnB,CAAmB,CACnB8mB,CAAkB,EAElB,GAAI9mB,EAAOK,OAAO,CAChB,OAAOtX,QAAQyU,MAAM,CAAC,IAAIqpB,GAA6BC,GAClD,EACL,IAAMG,EAAiB,IAAIl+B,QAAW,CAACk2B,EAAGzhB,KACxC,IAAM0pB,EAAiB1pB,EAAOjK,IAAI,CAChC,KACA,IAAIszB,GAA6BC,IAE/BK,EAAmBJ,GAAuB/5B,GAAG,CAACgT,GAClD,GAAImnB,EACFA,EAAiBt0B,IAAI,CAACq0B,OACjB,CACL,IAAME,EAAY,CAACF,EAAe,CAClCH,GAAuB10B,GAAG,CAAC2N,EAAQonB,GACnCpnB,EAAOqnB,gBAAgB,CACrB,QACA,KACE,IAAK,IAAIx+B,EAAI,EAAGA,EAAIu+B,EAAU3yB,MAAM,CAAE5L,IACpCu+B,CAAS,CAACv+B,EAAE,EAEhB,EACA,CAAEib,KAAM,EAAK,EAEjB,CACF,GAKA,OADAmjB,EAAepgB,KAAK,CAACygB,IACdL,CACT,CACF,CAEA,SAASK,KAAgB,CCxBzB,IAAMC,GAAc,AAAmC,YAAnC,OAAOC,GAAAA,iBAAuB,CAwC3C,SAASC,GACdC,CAA2C,EAE3C,MAAO,CACLA,uBAAAA,EACAC,gBAAiB,EAAE,CACnBC,0BAA2B,IAC7B,CACF,CAyBO,SAASC,GACdrF,CAAgB,CAChBjS,CAAuE,CACvEuW,CAAkB,EAElB,GAAIvW,CAAAA,CAAAA,GAEAA,AAAuB,UAAvBA,EAAcb,IAAI,EAClBa,AAAuB,mBAAvBA,EAAcb,IAAI,AAHN,GAeZ8S,CAAAA,EAAMsF,YAAY,GAAItF,EAAMuF,WAAW,EAE3C,GAAIvF,EAAMwF,kBAAkB,CAC1B,MAAM,qBAEL,CAFK,IAAIrB,GACR,CAAC,MAAM,EAAEnE,EAAMpsB,KAAK,CAAC,8EAA8E,EAAE0wB,EAAW,4HAA4H,CAAC,EADzO,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAGF,GAAIvW,EACF,IAAIA,AAAuB,kBAAvBA,EAAcb,IAAI,CACpBuY,GACEzF,EAAMpsB,KAAK,CACX0wB,EACAvW,EAAc2X,eAAe,OAE1B,GAAI3X,AAAuB,qBAAvBA,EAAcb,IAAI,CAAyB,CACpDa,EAAchH,UAAU,CAAG,EAG3B,IAAMnL,EAAM,qBAEX,CAFW,IAAIooB,GACd,CAAC,MAAM,EAAEhE,EAAMpsB,KAAK,CAAC,iDAAiD,EAAE0wB,EAAW,2EAA2E,CAAC,EADrJ,qB,MAAA,O,WAAA,G,aAAA,EAEZ,EAIA,OAHAtE,EAAM2F,uBAAuB,CAAGrB,EAChCtE,EAAM4F,iBAAiB,CAAGhqB,EAAIiqB,KAAK,CAE7BjqB,CACR,CAIG,EAIP,CA0BO,SAASkqB,GACdxB,CAAkB,CAClBtE,CAAgB,CAChB+F,CAAoC,EAGpC,IAAMnqB,EAAM,qBAEX,CAFW,IAAIooB,GACd,CAAC,MAAM,EAAEhE,EAAMpsB,KAAK,CAAC,mDAAmD,EAAE0wB,EAAW,6EAA6E,CAAC,EADzJ,qB,MAAA,O,WAAA,G,aAAA,EAEZ,EAOA,OALAyB,EAAehf,UAAU,CAAG,EAE5BiZ,EAAM2F,uBAAuB,CAAGrB,EAChCtE,EAAM4F,iBAAiB,CAAGhqB,EAAIiqB,KAAK,CAE7BjqB,CACR,CAuJO,SAAS6pB,GACd7xB,CAAa,CACb0wB,CAAkB,CAClBoB,CAA4C,EAE5CM,AAmIF,YACE,GAAI,CAACjB,GACH,MAAM,qBAEL,CAFK,AAAIv+B,MACR,oIADI,qB,MAAA,O,WAAA,G,aAAA,EAEN,EAEJ,KAxIMk/B,GACFA,EAAgBP,eAAe,CAAC90B,IAAI,CAAC,CAGnCw1B,MAAOH,EAAgBR,sBAAsB,CACzC,AAAI1+B,QAAQq/B,KAAK,CACjBj6B,OACJ04B,WAAAA,CACF,GAGFU,GAAAA,iBAAuB,CAACiB,GAAqBryB,EAAO0wB,GACtD,CAEA,SAAS2B,GAAqBryB,CAAa,CAAE0wB,CAAkB,EAC7D,MACE,CAAC,MAAM,EAAE1wB,EAAM,iEAAiE,EAAE0wB,EAAW,kKAAE,CAAC,AAIpG,CAwBA,GAAI4B,AAAgE,KAAhEA,AAXJ,SAAiCC,CAAc,EAC7C,OACEA,EAAOjuB,QAAQ,CACb,oEAEFiuB,EAAOjuB,QAAQ,CACb,gEAGN,EAE4B+tB,GAAqB,MAAO,QACtD,MAAM,qBAEL,CAFK,AAAIz/B,MACR,0FADI,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAGF,IAAM4/B,GAA6B,6BAEnC,SAASC,GAAgCjc,CAAe,EACtD,IAAMlD,EAAQ,qBAAkB,CAAlB,AAAI1gB,MAAM4jB,GAAV,qB,MAAA,O,WAAA,G,aAAA,EAAiB,GAE/B,OADElD,EAAc0G,MAAM,CAAGwY,GAClBlf,CACT,CC/ZO,SAASof,GAAc52B,CAAkB,EAG9C,GAAI,CAACA,EAASsZ,IAAI,CAChB,MAAO,CAACtZ,EAAUA,EAAS,CAG7B,GAAM,CAAC62B,EAAOC,EAAM,CAAG92B,EAASsZ,IAAI,CAACyd,GAAG,GAElCC,EAAU,IAAIC,SAASJ,EAAO,CAClCxhB,OAAQrV,EAASqV,MAAM,CACvB6hB,WAAYl3B,EAASk3B,UAAU,CAC/Bx8B,QAASsF,EAAStF,OAAO,AAC3B,GAEAvF,OAAOgH,cAAc,CAAC66B,EAAS,MAAO,CACpC56B,MAAO4D,EAAS+B,GAAG,CAEnBo1B,aAAc,GACd96B,WAAY,GACZiY,SAAU,EACZ,GAEA,IAAM8iB,EAAU,IAAIH,SAASH,EAAO,CAClCzhB,OAAQrV,EAASqV,MAAM,CACvB6hB,WAAYl3B,EAASk3B,UAAU,CAC/Bx8B,QAASsF,EAAStF,OAAO,AAC3B,GAUA,OARAvF,OAAOgH,cAAc,CAACi7B,EAAS,MAAO,CACpCh7B,MAAO4D,EAAS+B,GAAG,CAEnBo1B,aAAc,GACd96B,WAAY,GACZiY,SAAU,EACZ,GAEO,CAAC0iB,EAASI,EAAQ,AAC3B,CD2iByB,AAAIjgC,OAC3B,8CAA6C,EAEtB,AAAIA,OAC3B,8CAA6C,EAExB,AAAIA,OAAO,4CAA2C,EE/jBtE,IAAMkgC,GAAoB1hC,OAAOsU,GAAG,CAAC,cA4E5C,SAASqtB,GACP3Y,CAAoB,CACpBvG,CAAqC,E,IAIjCuG,EADJ,GAAKA,GACD,CAA2B,MAA3BA,CAAAA,EAAAA,EAAU4Y,iBAAiB,AAAD,GAAC,QAA3B5Y,EAA6B6Y,KAAK,AAAD,EAWnC,CARC,CAAEjgC,QAAQoY,GAAG,CAAC8nB,gBAAgB,EAC7BlgC,AAAuC,MAAvCA,QAAQoY,GAAG,CAAC+nB,sBAAsB,AAAO,GAC3C/Y,EAAUgZ,kBAAkB,EACRpgC,CAMP,IAKfonB,EAAUiZ,YAAY,GAAK,EAAE,CAE7BjZ,EAAUiZ,YAAY,CAACj3B,IAAI,CAAC,CAC1B,GAAGyX,CAAG,CACNtF,IAAK1L,YAAYkV,UAAU,CAAGlV,YAAYsP,GAAG,GAC7CmhB,IAAKlZ,EAAUmZ,WAAW,EAAI,CAChC,GACF,CvF5HA,GAAM,CAAEnoB,IAAAA,EAAG,CAAEooB,OAAAA,EAAM,CAAE,CAAGt2B,AAAAA,CAAAA,MAAAA,CAAAA,EAAAA,UAAS,EAATA,KAAAA,EAAAA,EAAYlK,OAAO,AAAD,GAAK,CAAC,EAE1CygC,GACJroB,IACA,CAACA,GAAIsoB,QAAQ,EACZtoB,CAAAA,GAAIuoB,WAAW,EAAKH,AAAAA,CAAAA,AAAAA,MAAAA,GAAAA,KAAAA,EAAAA,GAAQI,KAAK,AAAD,GAAK,CAACxoB,GAAIyoB,EAAE,EAAIzoB,AAAa,SAAbA,GAAI0oB,IAAI,AAAU,EAE/DC,GAAe,CACnBtyB,EACAqH,EACA/I,EACAT,KAEA,IAAMqJ,EAAQlH,EAAIR,SAAS,CAAC,EAAG3B,GAASS,EAClCwO,EAAM9M,EAAIR,SAAS,CAAC3B,EAAQwJ,EAAM9K,MAAM,EACxCg2B,EAAYzlB,EAAIhP,OAAO,CAACuJ,GAC9B,MAAO,CAACkrB,EACJrrB,EAAQorB,GAAaxlB,EAAKzF,EAAO/I,EAASi0B,GAC1CrrB,EAAQ4F,CACd,EAEM0lB,GAAY,CAACC,EAAcprB,EAAe/I,EAAUm0B,CAAI,GAC5D,AAAKT,GACE,AAACppB,IACN,IAAMV,EAAS,GAAKU,EACd/K,EAAQqK,EAAOpK,OAAO,CAACuJ,EAAOorB,EAAKl2B,MAAM,EAC/C,MAAO,CAACsB,EACJ40B,EAAOH,GAAapqB,EAAQb,EAAO/I,EAAST,GAASwJ,EACrDorB,EAAOvqB,EAASb,CACtB,EAPqBjW,OAWVshC,GAAOF,GAAU,UAAW,WAAY,mBAClCA,GAAU,UAAW,WAAY,mBAC9BA,GAAU,UAAW,YAClBA,GAAU,UAAW,YACvBA,GAAU,UAAW,YACtBA,GAAU,UAAW,YACdA,GAAU,UAAW,YAC7BA,GAAU,WAAY,YACpC,IAAMG,GAAMH,GAAU,WAAY,YAC5BI,GAAQJ,GAAU,WAAY,YAC9BK,GAASL,GAAU,WAAY,YACxBA,GAAU,WAAY,YACnC,IAAMM,GAAUN,GAAU,WAAY,YACvBA,GAAU,yBAA0B,YACtCA,GAAU,WAAY,YACnC,IAAMO,GAAQP,GAAU,WAAY,YACvBA,GAAU,WAAY,YACnBA,GAAU,WAAY,YACxBA,GAAU,WAAY,YACpBA,GAAU,WAAY,YACrBA,GAAU,WAAY,YACxBA,GAAU,WAAY,YACnBA,GAAU,WAAY,YACzBA,GAAU,WAAY,YACrBA,GAAU,WAAY,YwFvErCO,GAAML,GAAK,MACVC,GAAID,GAAK,MACVG,GAAOH,GAAK,MAEZK,GAAML,GAAK,MACVE,GAAMF,GAAK,MACXI,GAAQJ,GAAK,SAqEA,IC/Ef,MAOLp5B,YAAY05B,CAAe,CAAEC,CAAoC,CAAE,CACjE,IAAI,CAAC/1B,KAAK,CAAG,IAAI3N,IACjB,IAAI,CAAC2jC,KAAK,CAAG,IAAI3jC,IACjB,IAAI,CAAC4jC,SAAS,CAAG,EACjB,IAAI,CAACH,OAAO,CAAGA,EACf,IAAI,CAACC,aAAa,CAAGA,GAAmB,KAAK,EAC/C,CAEA94B,IAAIvC,CAAmB,CAAExB,CAAS,CAAQ,CACxC,GAAI,CAACwB,GAAO,CAACxB,EAAO,OAEpB,IAAM82B,EAAO,IAAI,CAAC+F,aAAa,CAAC78B,GAEhC,GAAI82B,EAAO,IAAI,CAAC8F,OAAO,CAAE,YACvBxhC,QAAQ6nB,IAAI,CAAC,mCAIX,KAAI,CAACnc,KAAK,CAAClI,GAAG,CAAC4C,IACjB,KAAI,CAACu7B,SAAS,EAAI,IAAI,CAACD,KAAK,CAACp+B,GAAG,CAAC8C,IAAQ,GAG3C,IAAI,CAACsF,KAAK,CAAC/C,GAAG,CAACvC,EAAKxB,GACpB,IAAI,CAAC88B,KAAK,CAAC/4B,GAAG,CAACvC,EAAKs1B,GACpB,IAAI,CAACiG,SAAS,EAAIjG,EAElB,IAAI,CAACkG,KAAK,CAACx7B,EACb,CAEA5C,IAAI4C,CAAmB,CAAW,OAChC,CAAI,CAACA,IAEL,IAAI,CAACw7B,KAAK,CAACx7B,GACJvI,EAAQ,IAAI,CAAC6N,KAAK,CAACpI,GAAG,CAAC8C,GAChC,CAEA9C,IAAI8C,CAAmB,CAAiB,CACtC,GAAI,CAACA,EAAK,OAEV,IAAMxB,EAAQ,IAAI,CAAC8G,KAAK,CAACpI,GAAG,CAAC8C,GAC7B,GAAIxB,AAAUF,SAAVE,EAKJ,OADA,IAAI,CAACg9B,KAAK,CAACx7B,GACJxB,CACT,CAEQg9B,MAAMx7B,CAAW,CAAQ,CAC/B,IAAMxB,EAAQ,IAAI,CAAC8G,KAAK,CAACpI,GAAG,CAAC8C,EACf1B,UAAVE,IACF,IAAI,CAAC8G,KAAK,CAACtC,MAAM,CAAChD,GAClB,IAAI,CAACsF,KAAK,CAAC/C,GAAG,CAACvC,EAAKxB,GACpB,IAAI,CAACi9B,gBAAgB,GAEzB,CAEQA,kBAAyB,CAC/B,KAAO,IAAI,CAACF,SAAS,CAAG,IAAI,CAACH,OAAO,EAAI,IAAI,CAAC91B,KAAK,CAACgwB,IAAI,CAAG,GACxD,IAAI,CAACoG,sBAAsB,EAE/B,CAEQA,wBAA+B,CACrC,IAAMC,EAAS,IAAI,CAACr2B,KAAK,CAACjD,IAAI,GAAGu5B,IAAI,GAAGp9B,KAAK,CAC7C,GAAIm9B,AAAWr9B,SAAXq9B,EAAsB,CACxB,IAAME,EAAU,IAAI,CAACP,KAAK,CAACp+B,GAAG,CAACy+B,IAAW,CAC1C,KAAI,CAACJ,SAAS,EAAIM,EAClB,IAAI,CAACv2B,KAAK,CAACtC,MAAM,CAAC24B,GAClB,IAAI,CAACL,KAAK,CAACt4B,MAAM,CAAC24B,EACpB,CACF,CAEA3mB,OAAQ,CACN,IAAI,CAAC1P,KAAK,CAACw2B,KAAK,GAChB,IAAI,CAACR,KAAK,CAACQ,KAAK,GAChB,IAAI,CAACP,SAAS,CAAG,CACnB,CAEAl5B,MAAO,CACL,MAAO,IAAI,IAAI,CAACiD,KAAK,CAACjD,IAAI,GAAG,AAC/B,CAEA05B,OAAO/7B,CAAW,CAAQ,CACpB,IAAI,CAACsF,KAAK,CAAClI,GAAG,CAAC4C,KACjB,IAAI,CAACu7B,SAAS,EAAI,IAAI,CAACD,KAAK,CAACp+B,GAAG,CAAC8C,IAAQ,EACzC,IAAI,CAACsF,KAAK,CAACtC,MAAM,CAAChD,GAClB,IAAI,CAACs7B,KAAK,CAACt4B,MAAM,CAAChD,GAEtB,CAEA87B,OAAc,CACZ,IAAI,CAACx2B,KAAK,CAACw2B,KAAK,GAChB,IAAI,CAACR,KAAK,CAACQ,KAAK,GAChB,IAAI,CAACP,SAAS,CAAG,CACnB,CAEA,IAAIjG,MAAe,CACjB,OAAO,IAAI,CAAChwB,KAAK,CAACgwB,IAAI,AACxB,CAEA,IAAI0G,aAAsB,CACxB,OAAO,IAAI,CAACT,SAAS,AACvB,CACF,EDhC2C,IAAQ,AAAC/8B,GAAUA,EAAMmG,MAAM,EE3E1E,IAAMs3B,GAA0B,CAAC,OAAQ,UAAU,CAEnD,SAASC,KACP,OAAO,IAAI7C,SAAS,KAAM,CAAE5hB,OAAQ,GAAI,EAC1C,C,0CCFA,IAAM0kB,GAAgB,IAAIx4B,IAAIpM,OAAO+L,MAAM,CANN,CACnC84B,UAAW,IACXC,UAAW,IACXC,aAAc,GAChB,IAiBO,SAASC,GACd3iB,CAAc,EAEd,GACE,AAAiB,UAAjB,OAAOA,GACPA,AAAU,OAAVA,GACA,CAAE,YAAYA,CAAI,GAClB,AAAwB,UAAxB,OAAOA,EAAM0G,MAAM,CAEnB,MAAO,GAET,GAAM,CAACxY,EAAQ00B,EAAW,CAAG5iB,EAAM0G,MAAM,CAACva,KAAK,CAAC,KAEhD,MACE+B,AA3B0C,6BA2B1CA,GACAq0B,GAAc/+B,GAAG,CAACtF,OAAO0kC,GAE7B,CCtCO,IAAKC,GAAkBA,SAAlBA,CAAkB,E,kIAAlBA,C,MCoBL,SAASC,GAAgB9iB,CAAc,EAC5C,GACE,AAAiB,UAAjB,OAAOA,GACPA,AAAU,OAAVA,GACA,CAAE,YAAYA,CAAI,GAClB,AAAwB,UAAxB,OAAOA,EAAM0G,MAAM,CAEnB,MAAO,GAGT,IAAMA,EAAS1G,EAAM0G,MAAM,CAACva,KAAK,CAAC,KAC5B,CAAC42B,EAAW/c,EAAK,CAAGU,EACpB4K,EAAc5K,EAAO5f,KAAK,CAAC,EAAG,IAAIiC,IAAI,CAAC,KAGvCi6B,EAAa9kC,OAFJwoB,EAAOuc,EAAE,CAAC,KAIzB,MACEF,AApC+B,kBAoC/BA,GACC/c,CAAAA,AAAS,YAATA,GAAsBA,AAAS,SAATA,CAAc,GACrC,AAAuB,UAAvB,OAAOsL,GACP,CAACxyB,MAAMkkC,IACPA,KAAcH,EAElB,CCzCO,SAASK,GACdC,CAAoB,CACpBz2B,CAAa,MAaTwW,EAVJ,IAAIkgB,ACuBC,SAAoCpjB,CAAc,EAEvD,GCnBmB,UAAf,ODmBoBA,GCnBOtL,AAAQ,ODmBfsL,GCnByB,WDmBzBA,GCfjBtL,AAjBc,qCAiBdA,ADeiBsL,ECfb0G,MAAM,ECJVoc,GFsBe9iB,IEtBW2iB,GFsBX3iB,IAMlBgd,GAAqBhd,IV2YvB,AAAiB,UAAjB,OUxY8BA,GVyY9BA,AAAU,OUzYoBA,GV0Y7BA,AU1Y6BA,EV0Yf0G,MAAM,GAAKwY,IAC1B,SU3Y8Blf,GV4Y9B,YU5Y8BA,GV6Y9BA,AU7Y8BA,aV6Yb1gB,MUzZa,OAAO0gB,EAAM0G,MAAM,AAerD,EDxCiCyc,IAI/B,GINE,AAAiB,UAAjB,OJMyBA,GILzBnjB,AAAU,OJKemjB,GIJzB,YJIyBA,GIHzB,AAAyB,UAAzB,OAAOnjB,AJGkBmjB,EIHZjgB,OAAO,EACpBlD,AJEyBmjB,EIFnBjgB,OAAO,CAAC1W,UAAU,CAAC,qCJEc,YAEvCxM,QAAQggB,KAAK,CAACmjB,GAKhB,GACE,AAAuB,UAAvB,OAAOA,GACPA,AAAgB,OAAhBA,GACA,AAAwC,UAAxC,OAAQA,EAAoBjgB,OAAO,CAGnC,IADAA,EAAWigB,EAAoBjgB,OAAO,CAClC,AAAsC,UAAtC,OAAQigB,EAAoBxE,KAAK,CAAe,CAClD,IAAM0E,EAA8BF,EAAoBxE,KAAK,CACvD2E,EAAaD,EAAmB/2B,OAAO,CAAC,MAC9C,GAAIg3B,EAAa,GAAI,CACnB,IAAMtjB,EAAQ,qBAIb,CAJa,AAAI1gB,MAChB,CAAC,MAAM,EAAEoN,EAAM;;gBAET,EAAEwW,EAAQ,CAAC,EAHL,qB,MAAA,O,WAAA,G,aAAA,EAId,EACAlD,CAAAA,EAAM2e,KAAK,CACT,UAAY3e,EAAMkD,OAAO,CAAGmgB,EAAmBv8B,KAAK,CAACw8B,GACvDtjC,QAAQggB,KAAK,CAACA,GACd,MACF,CACF,MACS,AAAuB,UAAvB,OAAOmjB,GAChBjgB,CAAAA,EAAUigB,CAAU,EAGtB,GAAIjgB,EAAS,YACXljB,QAAQggB,KAAK,CAAC,CAAC,MAAM,EAAEtT,EAAM;;kBAEf,EAAEwW,EAAQ,CAAC,EAI3BljB,QAAQggB,KAAK,CACX,CAAC,MAAM,EAAEtT,EAAM,wOAAwO,CAAC,EAE1P1M,QAAQggB,KAAK,CAACmjB,GAEhB,C,2DKyGO,IAAMI,GAAmBzF,GAAAA,aAAmB,CACjD,MAEW0F,GAAsB1F,GAAAA,aAAmB,CAK5C,MAEG2F,GAA4B3F,GAAAA,aAAmB,CAIzD,MAEU4F,GAAkB5F,GAAAA,aAAmB,CAAkB,MASvD6F,GAAqB7F,GAAAA,aAAmB,CAAc,IAAI/zB,K,0DCjLhE,OAAM65B,GASX97B,aAAc,C,KARN+7B,KAAK,CAAG,E,KACRC,cAAc,CAAsB,EAAE,C,KACtCpG,SAAS,CAAsB,EAAE,C,KACjCqG,WAAW,CAAG,G,KACdC,WAAW,CAAG,G,KAEdC,iBAAiB,CAA4B,IASrD,CAEQC,qBAAsB,CACvB,IAAI,CAACH,WAAW,GACnB,IAAI,CAACA,WAAW,CAAG,GACnBhkC,QAAQ+U,QAAQ,CAAC,KAEf,GADA,IAAI,CAACivB,WAAW,CAAG,GACf,AAAe,IAAf,IAAI,CAACF,KAAK,CAAQ,CACpB,IAAK,IAAI1kC,EAAI,EAAGA,EAAI,IAAI,CAAC2kC,cAAc,CAAC/4B,MAAM,CAAE5L,IAC9C,IAAI,CAAC2kC,cAAc,CAAC3kC,EAAE,EAExB,KAAI,CAAC2kC,cAAc,CAAC/4B,MAAM,CAAG,CAC/B,CACF,IAEG,IAAI,CAACi5B,WAAW,GACnB,IAAI,CAACA,WAAW,CAAG,GACnBzkC,WAAW,KAET,GADA,IAAI,CAACykC,WAAW,CAAG,GACf,AAAe,IAAf,IAAI,CAACH,KAAK,CAAQ,CACpB,IAAK,IAAI1kC,EAAI,EAAGA,EAAI,IAAI,CAACu+B,SAAS,CAAC3yB,MAAM,CAAE5L,IACzC,IAAI,CAACu+B,SAAS,CAACv+B,EAAE,EAEnB,KAAI,CAACu+B,SAAS,CAAC3yB,MAAM,CAAG,CAC1B,CACF,EAAG,GAEP,CAMAo5B,YAAa,CACX,OAAO,IAAI9kC,QAAc,AAACwU,IACxB,IAAI,CAACiwB,cAAc,CAAC36B,IAAI,CAAC0K,GACrB,AAAe,IAAf,IAAI,CAACgwB,KAAK,EACZ,IAAI,CAACK,mBAAmB,EAE5B,EACF,CAOAE,YAAa,CACX,OAAO,IAAI/kC,QAAc,AAACwU,IACxB,IAAI,CAAC6pB,SAAS,CAACv0B,IAAI,CAAC0K,GAChB,AAAe,IAAf,IAAI,CAACgwB,KAAK,EACZ,IAAI,CAACK,mBAAmB,EAE5B,EACF,CAEAG,WAAY,CAGV,GAFA,IAAI,CAACR,KAAK,GAEN,AAA2B,OAA3B,IAAI,CAACI,iBAAiB,CACxB,IAAK,IAAMK,KAAc,IAAI,CAACL,iBAAiB,CAC7CK,EAAWD,SAAS,EAG1B,CAEAE,SAAU,CACR,GAAI,AAAe,IAAf,IAAI,CAACV,KAAK,CACZ,MAAM,qBAEL,CAFK,IAAI5gB,GACR,+DADI,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAcF,GALA,IAAI,CAAC4gB,KAAK,GACN,AAAe,IAAf,IAAI,CAACA,KAAK,EACZ,IAAI,CAACK,mBAAmB,GAGtB,AAA2B,OAA3B,IAAI,CAACD,iBAAiB,CACxB,IAAK,IAAMK,KAAc,IAAI,CAACL,iBAAiB,CAC7CK,EAAWC,OAAO,EAGxB,CAEAC,UAAazwB,CAAmB,CAAE,CAChC,IAAI,CAACswB,SAAS,GAEd,IAAMI,EAAY,IAAI,CAACF,OAAO,CAAC16B,IAAI,CAAC,IAAI,EAExC,OADAkK,EAAQc,IAAI,CAAC4vB,EAAWA,GACjB1wB,CACT,CAEA2wB,iBAAiBJ,CAAuB,CAAc,CACpD,GAAIA,IAAe,IAAI,CACrB,MAAM,qBAA8D,CAA9D,IAAIrhB,GAAe,4CAAnB,qB,MAAA,O,WAAA,G,aAAA,EAA6D,EAEjE,AAA2B,QAA3B,IAAI,CAACghB,iBAAiB,EACxB,KAAI,CAACA,iBAAiB,CAAG,IAAIl6B,GAAI,EAEnC,IAAI,CAACk6B,iBAAiB,CAACxY,GAAG,CAAC6Y,GAI3B,IAAK,IAAInlC,EAAI,EAAGA,EAAI,IAAI,CAAC0kC,KAAK,CAAE1kC,IAC9BmlC,EAAWD,SAAS,GAGtB,OAAO,IAAI,CAACM,oBAAoB,CAAC96B,IAAI,CAAC,IAAI,CAAEy6B,EAC9C,CAEAK,qBAAqBL,CAAuB,CAAE,CACvC,IAAI,CAACL,iBAAiB,EAG3B,IAAI,CAACA,iBAAiB,CAAC76B,MAAM,CAACk7B,EAKhC,CACF,CCnJA,IAAMM,GAA+B,6BAE9B,SAASC,GAA6B38B,CAAc,CAAEC,CAAY,SACvE,AAAIy8B,GAA6Bj3B,IAAI,CAACxF,GAC5B,IAAID,EAAO,IAAGC,EAAK,IAErB,IAAID,EAAO,IAAG3J,KAAKskB,SAAS,CAAC1a,GAAM,IAC7C,CAUO,IAAM28B,GAAsB,IAAI/6B,IAAI,CACzC,iBACA,gBACA,uBACA,WACA,UACA,iBAIA,OACA,QACA,UAIA,SAGA,cACA,aAIA,SACA,WACA,aACD,EC/CKg7B,GAAsC,CAAEC,QAAS,IAAK,EAGtDt5B,GACJ,AAAuB,YAAvB,OAAOoyB,GAAAA,KAAW,CACdA,GAAAA,KAAW,CACX,AAAC1pB,GAA+BA,EAKhC6wB,GAAiBllC,QAAQoY,GAAG,CAAC+sB,iBAAiB,CAChDllC,QAAQggB,KAAK,CACbhgB,QAAQ6nB,IAAI,CA0BT,SAASsd,GACdC,CAAoC,EAEpC,OAAO,SAAyB,GAAG9jB,CAAU,EAkBzC2jB,GAjBcG,KAAc9jB,GAmBhC,CACF,CA9C+B5V,GAE7B,AAACtF,IACC,GAAI,CACF6+B,GAAeF,GAASC,OAAO,CACjC,QAAU,CACRD,GAASC,OAAO,CAAG,IACrB,CACF,G,uFCwLIK,GAAe,IAAI15B,QAEnB25B,GAA4D,CAChEhiC,IAAK,SAAa4E,CAAM,CAAEC,CAAI,CAAEC,CAAQ,EACtC,GAAID,AAAS,SAATA,GAAmBA,AAAS,UAATA,GAAoBA,AAAS,YAATA,EAAoB,CAC7D,IAAMo9B,EAAiBl9B,GAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMC,GAExD,MAAO,EACL,CAACD,EAAK,CAAE,CAAC,GAAGmZ,KACV,IAAMwX,EAAQ0M,GAAAA,yBAAAA,CAAAA,QAAkC,GAQhD,OANI1M,GACFA,EAAM2M,eAAe,CAACnrB,KAAK,CACzB,qBAA8D,CAA9D,AAAIhb,MAAM,mDAAV,qB,MAAA,O,WAAA,G,aAAA,EAA6D,IAI1D,IAAI2I,MACTs9B,EAAeG,KAAK,CAACx9B,EAAQoZ,GAC7BgkB,GAEJ,CACF,EAAC,CAACn9B,EAAK,AACT,CAEA,OAAOE,GAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMC,EAC1C,CACF,EAqHA,SAASu9B,GAA0BC,CAAwB,EACzD,IAAMC,EAAeR,GAAa/hC,GAAG,CAACsiC,GACtC,GAAIC,EACF,OAAOA,EAMT,IAAM9xB,EAAU1U,QAAQwU,OAAO,CAAC+xB,GAYhC,OAXAP,GAAa18B,GAAG,CAACi9B,EAAkB7xB,GAEnCpW,OAAO8K,IAAI,CAACm9B,GAAkBv8B,OAAO,CAAC,AAAClB,IACjC28B,GAAAA,GAAuB,CAAC38B,IAIxB4L,CAAAA,CAAe,CAAC5L,EAAK,CAAGy9B,CAAgB,CAACz9B,EAAK,AAAD,CAEnD,GAEO4L,CACT,CA+J0BoxB,GAO1B,SACEz4B,CAAyB,CACzB0wB,CAAkB,EAElB,IAAMlvB,EAASxB,EAAQ,CAAC,OAAO,EAAEA,EAAM,EAAE,CAAC,CAAG,cAC7C,OAAO,qBAIN,CAJM,AAAIpN,MACT,CAAC,EAAE4O,EAAO,KAAK,EAAEkvB,EAAW,0HAAE,CAAC,EAD1B,qB,MAAA,O,WAAA,G,aAAA,EAIP,EACF,GAZE+H,GAcF,SACEz4B,CAAyB,CACzB0wB,CAAkB,CAClB0I,CAAgC,EAEhC,IAAM53B,EAASxB,EAAQ,CAAC,OAAO,EAAEA,EAAM,EAAE,CAAC,CAAG,cAC7C,OAAO,qBAON,CAPM,AAAIpN,MACT,CAAC,EAAE4O,EAAO,KAAK,EAAEkvB,EAId,iLAAE2I,AAKT,SAAqCC,CAAyB,EAC5D,OAAQA,EAAWj7B,MAAM,EACvB,KAAK,EACH,MAAM,qBAEL,CAFK,IAAIkY,GACR,uFADI,qB,MAAA,O,WAAA,G,aAAA,EAEN,EACF,MAAK,EACH,MAAO,CAAC,EAAE,EAAE+iB,CAAU,CAAC,EAAE,CAAC,EAAE,CAAC,AAC/B,MAAK,EACH,MAAO,CAAC,EAAE,EAAEA,CAAU,CAAC,EAAE,CAAC,SAAS,EAAEA,CAAU,CAAC,EAAE,CAAC,EAAE,CAAC,AACxD,SAAS,CACP,IAAIjJ,EAAc,GAClB,IAAK,IAAI59B,EAAI,EAAGA,EAAI6mC,EAAWj7B,MAAM,CAAG,EAAG5L,IACzC49B,GAAe,CAAC,EAAE,EAAEiJ,CAAU,CAAC7mC,EAAE,CAAC,IAAI,CAAC,CAGzC,OADA49B,EAAe,CAAC,QAAQ,EAAEiJ,CAAU,CAACA,EAAWj7B,MAAM,CAAG,EAAE,CAAC,EAAE,CAAC,AAEjE,CACF,CACF,EAxBqC+6B,GAAmB,gEAAE,CAJvB,EAD1B,qB,MAAA,O,WAAA,G,aAAA,EAOP,EACF,GC9iBQ7hC,EAAAA,kDAAAA,kBAAAA,C,6FC4ED,OAAMgiC,GACXn+B,YACkBkY,CAAoB,CACpB9c,CAAiB,CACjC,C,KAFgB8c,KAAK,CAALA,E,KACA9c,OAAO,CAAPA,CACf,CACL,CAuFO,MAAMgjC,WAA4Bxd,G,eAoBhByd,aAAa,CAAGA,CAAaA,AAepDr+B,aAAY,CACV6gB,SAAAA,CAAQ,CACRC,WAAAA,CAAU,CACVC,QAAAA,CAAO,CACPC,WAAAA,CAAU,CACVsd,iBAAAA,CAAgB,CAChBC,iBAAAA,CAAgB,CACW,CAAE,CAgB7B,GAfA,KAAK,CAAC,CAAE1d,SAAAA,EAAUC,WAAAA,EAAYC,QAAAA,EAASC,WAAAA,CAAW,GArCnD,KACehC,oBAAoB,CAAGA,GAAAA,oBAAoBA,CAI1D,KACeM,gBAAgB,CAAGA,GAAAA,gBAAgBA,CAKlD,KACekf,WAAW,CAAGA,EAO7B,KACeC,kBAAkB,CAAGA,GAAAA,kBAAkBA,CAmBrD,IAAI,CAACH,gBAAgB,CAAGA,EACxB,IAAI,CAACC,gBAAgB,CAAGA,EAIxB,IAAI,CAACG,OAAO,CAAGC,Af3NZ,SACL5M,CAA0B,EAI1B,IAAM2M,EAAkDtK,GAAa,MAAM,CACzE,CAACwK,EAAK52B,IAAY,EAChB,GAAG42B,CAAG,CAGN,CAAC52B,EAAO,CAAE+pB,CAAQ,CAAC/pB,EAAO,EAAIwyB,EAChC,GACA,CAAC,GAKGqE,EAAc,IAAI58B,IAAImyB,GAAa,MAAM,CAAC,AAACpsB,GAAW+pB,CAAQ,CAAC/pB,EAAO,GAM5E,IAAK,IAAMA,KALKuyB,GAAwBlQ,MAAM,CAC5C,AAACriB,GAAW,CAAC62B,EAAYnjC,GAAG,CAACsM,IAID,CAI5B,GAAIA,AAAW,SAAXA,EAAmB,CACjB+pB,EAAS+M,GAAG,GAEdJ,EAAQK,IAAI,CAAGhN,EAAS+M,GAAG,CAG3BD,EAAYlb,GAAG,CAAC,SAElB,QACF,CAGA,GAAI3b,AAAW,YAAXA,EAAsB,CAIxB,IAAMg3B,EAAuB,CAAC,aAAcH,EAAY,AAIpD,EAACA,EAAYnjC,GAAG,CAAC,SAAWmjC,EAAYnjC,GAAG,CAAC,QAC9CsjC,EAAM39B,IAAI,CAAC,QAKb,IAAMjG,EAAU,CAAE6jC,MAAOD,EAAME,IAAI,GAAGj+B,IAAI,CAAC,KAAM,CAIjDy9B,CAAAA,EAAQS,OAAO,CAAG,IAAM,IAAIxH,SAAS,KAAM,CAAE5hB,OAAQ,IAAK3a,QAAAA,CAAQ,GAGlEyjC,EAAYlb,GAAG,CAAC,WAEhB,QACF,CAEA,MAAM,qBAEL,CAFK,AAAInsB,MACR,CAAC,0EAA0E,EAAEwQ,EAAO,CAAC,EADjF,qB,MAAA,O,WAAA,G,aAAA,EAEN,EACF,CAEA,OAAO02B,CACT,EeoJwC7d,GACpC,IAAI,CAACuB,WAAW,CAAG,GAGnB,IAAI,CAACgd,mBAAmB,CAAGA,GAAoBve,GAG/C,IAAI,CAACwe,OAAO,CAAG,IAAI,CAACxe,QAAQ,CAACwe,OAAO,CAChC,AAA0B,WAA1B,IAAI,CAACd,gBAAgB,CACvB,GAAI,AAAiB,kBAAjB,IAAI,CAACc,OAAO,CACd,MAAM,qBAEL,CAFK,AAAI7nC,MACR,CAAC,gDAAgD,EAAEspB,EAAW1d,QAAQ,CAAC,wHAAwH,CAAC,EAD5L,qB,MAAA,O,WAAA,G,aAAA,EAEN,QACK,GAAI,CAACk8B,ACzOX,SACLhf,CAA8C,EAE9C,MACEA,AAAgB,iBAAhBA,EAAI+e,OAAO,EACX/e,AAAgB,UAAhBA,EAAI+e,OAAO,EACX/e,AAAmB,KAAnBA,EAAIvI,UAAU,EACbuI,AAAmB1jB,SAAnB0jB,EAAIvI,UAAU,EAAkBuI,EAAIvI,UAAU,CAAG,GAClD,AAAmC,YAAnC,OAAOuI,EAAIif,oBAAoB,AAEnC,ED+NqC,IAAI,CAAC1e,QAAQ,GAAK,IAAI,CAACA,QAAQ,CAAC,GAAM,CACnE,MAAM,qBAEL,CAFK,AAAIrpB,MACR,CAAC,uFAAuF,EAAEspB,EAAW1d,QAAQ,CAAC,yGAAyG,CAAC,EADpN,qB,MAAA,O,WAAA,G,aAAA,EAEN,QAEA,IAAI,CAACi8B,OAAO,CAAG,OAoCrB,CAQQtzB,QAAQ/D,CAAc,CAAqB,QAEjD,AzBzQKosB,GAAalrB,QAAQ,CyByQRlB,GAGX,IAAI,CAAC02B,OAAO,CAAC12B,EAAO,CAHO,IAAM,IAAI2vB,SAAS,KAAM,CAAE5hB,OAAQ,GAAI,EAI3E,CAEA,MAAcypB,GACZ9b,CAA0B,CAC1B+b,CAAwB,CACxBpgB,CAAoB,CAIpBkQ,CAA0B,CAC1BmQ,CAA0B,CAC1BhT,CAAoB,CACpB/V,CAAoC,CACpC,KAE2BA,EAuUUogB,EpBrhBvC4I,EAEOA,MoB4OD3jC,EAjCEq8B,EAAqBhZ,EAAUgZ,kBAAkB,CACjDuH,EAAmB,CAAC,EAAgC,MAA/BjpB,CAAAA,EAAAA,EAAQkpB,UAAU,CAACzc,YAAY,AAAD,EAAC,OAA/BzM,EAAiCmpB,SAAS,AAAD,GAGpEC,AlB0uBG,SAAoB9jC,CAAwB,EAEjD,GAhgCQkG,AAA8D,KAA9DA,UAAsC,CAAC41B,GAAkB,CAggC3C,OAItB,IAAMr3B,EAAWs/B,AoBzgCZ,SAA2BC,CAA2B,EAC3D,IAAMC,EAAkBlK,GAAAA,KAAW,CAEjC,AAACvzB,GAA8B,EAAE,EAGnC,OAAO,SACL09B,CAA2B,CAC3BlkC,CAAqB,MAajBwG,EACAiK,EAZJ,GAAIzQ,GAAWA,EAAQuS,MAAM,CAQ3B,OAAOyxB,EAAcE,EAAUlkC,GAKjC,GAAI,AAAoB,UAApB,OAAOkkC,GAA0BlkC,EAI9B,CAKL,IAAMywB,EACJ,AAAoB,UAApB,OAAOyT,GAAyBA,aAAoBt9B,IAChD,IAAIuO,QAAQ+uB,EAAUlkC,GACtBkkC,EACN,GACGzT,AAAmB,QAAnBA,EAAQ1kB,MAAM,EAAc0kB,AAAmB,SAAnBA,EAAQ1kB,MAAM,EAC3C0kB,EAAQ0T,SAAS,CAMjB,OAAOH,EAAcE,EAAUlkC,GAEjCyQ,EAhEGjW,KAAKskB,SAAS,CAAC,CACpB2R,AA+D8BA,EA/DtB1kB,MAAM,CACd1R,MAAMuH,IAAI,CAAC6uB,AA8DmBA,EA9DXtxB,OAAO,CAACsG,OAAO,IAClCgrB,AA6D8BA,EA7DtBrO,IAAI,CACZqO,AA4D8BA,EA5DtBpO,QAAQ,CAChBoO,AA2D8BA,EA3DtBnO,WAAW,CACnBmO,AA0D8BA,EA1DtBlO,QAAQ,CAChBkO,AAyD8BA,EAzDtBjO,cAAc,CACtBiO,AAwD8BA,EAxDtBhO,SAAS,CAClB,EAwDGjc,EAAMiqB,EAAQjqB,GAAG,AACnB,MAvBEiK,EApDiB,+CAqDjBjK,EAAM09B,EAwBR,IAAME,EAAeH,EAAgBz9B,GACrC,IAAK,IAAIpL,EAAI,EAAGwuB,EAAIwa,EAAap9B,MAAM,CAAE5L,EAAIwuB,EAAGxuB,GAAK,EAAG,CACtD,GAAM,CAACiH,EAAK2N,EAAQ,CAAGo0B,CAAY,CAAChpC,EAAE,CACtC,GAAIiH,IAAQoO,EACV,OAAOT,EAAQc,IAAI,CAAC,KAClB,IAAMqF,EAAWiuB,CAAY,CAAChpC,EAAE,CAAC,EAAE,CACnC,GAAI,CAAC+a,EAAU,MAAM,qBAAwC,CAAxC,IAAI+I,GAAe,sBAAnB,qB,MAAA,O,WAAA,G,aAAA,EAAuC,GAM5D,GAAM,CAACuc,EAASI,EAAQ,CAAGR,GAAcllB,GAEzC,OADAiuB,CAAY,CAAChpC,EAAE,CAAC,EAAE,CAAGygC,EACdJ,CACT,EAEJ,CAIA,IAAMzrB,EAAUg0B,EAAcE,EAAUlkC,GAClC4M,EAAoB,CAAC6D,EAAUT,EAAS,KAAK,CAGnD,OAFAo0B,EAAah/B,IAAI,CAACwH,GAEXoD,EAAQc,IAAI,CAAC,AAACqF,IAKnB,GAAM,CAACslB,EAASI,EAAQ,CAAGR,GAAcllB,GAEzC,OADAvJ,CAAK,CAAC,EAAE,CAAGivB,EACJJ,CACT,EACF,CACF,EpBo7BqCv1B,WAAWid,KAAK,CAGnDjd,CAAAA,WAAWid,KAAK,CAAGkhB,AAz5Bd,SACLC,CAAoB,CACpB,CAAEjhB,iBAAAA,CAAgB,CAAEN,qBAAAA,CAAoB,CAAmB,EAG3D,IAAMwhB,EAAU,eACdlxB,CAAwB,CACxB+N,CAA6B,MAYdA,EAIKA,MAdhB5a,EACJ,GAAI,CAEFA,AADAA,CAAAA,EAAM,IAAII,IAAIyM,aAAiB8B,QAAU9B,EAAM7M,GAAG,CAAG6M,EAAK,EACtD2B,QAAQ,CAAG,GACfxO,EAAIuO,QAAQ,CAAG,EACjB,CAAE,KAAM,CAENvO,EAAM7F,MACR,CACA,IAAMsd,EAAWzX,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAKY,IAAI,AAAD,GAAK,GACxB2E,EAASqV,CAAAA,MAAAA,GAAAA,AAAY,MAAZA,CAAAA,EAAAA,EAAMrV,MAAM,AAAD,EAAC,OAAZqV,EAAcojB,WAAW,KAAM,MAIxCC,EAAa,CAACrjB,MAAAA,GAAAA,AAAU,MAAVA,CAAAA,EAAAA,EAAM6c,IAAI,AAAD,EAAC,OAAV7c,EAAoBsjB,QAAQ,IAAK,GAC/CC,EAAW3oC,AAAyC,MAAzCA,QAAQoY,GAAG,CAACwwB,wBAAwB,CAK/CC,EAAiCJ,EACnC9jC,OACAkL,YAAYkV,UAAU,CAAGlV,YAAYsP,GAAG,GAEtCiI,EAAYC,EAAiB8S,QAAQ,GACrCrT,EAAgBC,EAAqBoT,QAAQ,GAG/C2O,EACFhiB,GAAiBA,AAAuB,cAAvBA,EAAcb,IAAI,CAC/Ba,EAAcgiB,WAAW,CACzB,IACFA,CAAAA,GACFA,EAAYxE,SAAS,GAGvB,IAAM5vB,EAAS+G,AAAAA,GAAAA,GAAAA,SAAAA,AAAAA,IAAYC,KAAK,CAC9B+sB,EAAanvB,GAAAA,aAAgC,CAAGC,GAAAA,KAAmB,CACnE,CACEovB,SAAAA,EACAhrB,KAAMorB,GAAAA,QAAAA,CAAAA,MAAe,CACrBptB,SAAU,CAAC,QAAS5L,EAAQkS,EAAS,CAACmQ,MAAM,CAACt0B,SAASkL,IAAI,CAAC,KAC3DggC,WAAY,CACV,WAAY/mB,EACZ,cAAelS,EACf,gBAAiBvF,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAKc,QAAQ,CAC9B,gBAAiBd,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAKkB,IAAI,AAAD,GAAK/G,MAChC,CACF,EACA,cAkKIgO,MA9EEs2B,EAiQAx0B,EA0OAy0B,EAjiBAC,EA5BJ,GAAIV,GAOA,CAACrhB,GAMDA,EAAU8N,WAAW,CAZvB,OAAOoT,EAAYjxB,EAAO+N,GAgB5B,IAAMgkB,EACJ/xB,GACA,AAAiB,UAAjB,OAAOA,GACP,AAAqC,UAArC,OAAQA,EAAkBtH,MAAM,CAE5B4C,EAAiB,AAAC02B,GAGfxkC,AADQugB,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,CAAc,CAACikB,EAAM,AAAD,GAClBD,CAAAA,EAAkB/xB,CAAa,CAACgyB,EAAM,CAAG,IAAG,EAIzDC,EAAe,AAACD,I,IACNjkB,EACVA,EAEE,EAHN,OAAO,AAA+B,UAAxBA,MAAAA,GAAAA,AAAU,MAAVA,CAAAA,EAAAA,EAAM6c,IAAI,AAAD,EAAC,OAAV7c,CAAY,CAACikB,EAAM,EAC7BjkB,MAAAA,GAAAA,AAAU,MAAVA,CAAAA,EAAAA,EAAM6c,IAAI,AAAD,EAAC,OAAV7c,CAAY,CAACikB,EAAM,CACnBD,EAAAA,AACqB,MAAnB,GAAC/xB,EAAc4qB,IAAI,AAAD,EAAC,OAAnB,CAAqB,CAACoH,EAAM,CAC5B1kC,MACR,EAGM4kC,EAA0BD,EAAa,cACzCE,EAAyBD,EACvB/nB,EAAiBioB,AAjLxB,SAAsBjoB,CAAW,CAAEwb,CAAmB,EAC3D,IAAM0M,EAAsB,EAAE,CACxBC,EAGD,EAAE,CAEP,IAAK,IAAIvqC,EAAI,EAAGA,EAAIoiB,EAAKxW,MAAM,CAAE5L,IAAK,CACpC,IAAMuH,EAAM6a,CAAI,CAACpiB,EAAE,CAanB,GAXI,AAAe,UAAf,OAAOuH,EACTgjC,EAAYvgC,IAAI,CAAC,CAAEzC,IAAAA,EAAKu4B,OAAQ,gCAAiC,GACxDv4B,EAAIqE,MAAM,CAAGhK,EAAAA,EAAyBA,CAC/C2oC,EAAYvgC,IAAI,CAAC,CACfzC,IAAAA,EACAu4B,OAAQ,CAAC,uBAAuB,EAAEl+B,EAAAA,EAAyBA,CAAC,CAAC,AAC/D,GAEA0oC,EAAUtgC,IAAI,CAACzC,GAGb+iC,EAAU1+B,MAAM,CAAGjK,EAAAA,EAAwBA,CAAE,CAC/Cd,QAAQ6nB,IAAI,CACV,CAAC,oCAAoC,EAAEkV,EAAY,eAAe,CAAC,CACnExb,EAAKza,KAAK,CAAC3H,GAAG4J,IAAI,CAAC,OAErB,KACF,CACF,CAEA,GAAI2gC,EAAY3+B,MAAM,CAAG,EAGvB,IAAK,GAAM,CAAErE,IAAAA,CAAG,CAAEu4B,OAAAA,CAAM,CAAE,GAF1Bj/B,QAAQ6nB,IAAI,CAAC,CAAC,gCAAgC,EAAEkV,EAAY,EAAE,CAAC,EAEjC2M,GAC5B1pC,QAAQkhB,GAAG,CAAC,CAAC,MAAM,EAAExa,EAAI,EAAE,EAAEu4B,EAAO,CAAC,EAGzC,OAAOwK,CACT,EA4IUJ,EAAa,SAAW,EAAE,CAC1B,CAAC,MAAM,EAAEjyB,EAAMtU,QAAQ,GAAG,CAAC,EAGvB6mC,EACJ9iB,GACCA,CAAAA,AAAuB,UAAvBA,EAAcb,IAAI,EACjBa,AAAuB,cAAvBA,EAAcb,IAAI,EAElBa,AAAuB,qBAAvBA,EAAcb,IAAI,EAClBa,AAAuB,kBAAvBA,EAAcb,IAAI,EAClBa,AAAuB,qBAAvBA,EAAcb,IAAI,AAAsB,EACtCa,EACAniB,OAEN,GAAIilC,GACEvrC,MAAMiG,OAAO,CAACkd,GAAO,CAEvB,IAAMqoB,EACJD,EAAgBpoB,IAAI,EAAKooB,CAAAA,EAAgBpoB,IAAI,CAAG,EAAC,EACnD,IAAK,IAAM7a,KAAO6a,EACZ,AAACqoB,EAAc54B,QAAQ,CAACtK,IAC1BkjC,EAAczgC,IAAI,CAACzC,EAGzB,CAGF,IAAM8gC,EAAe3gB,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAe2gB,YAAY,CAI1CqC,EACJhjB,GAAiBA,AAAuB,mBAAvBA,EAAcb,IAAI,CAC/B,iBACAmB,EAAUhF,UAAU,CAEpB2nB,EAAiB,CAAC,CAAC3iB,EAAU4iB,iBAAiB,CAEhDC,EAA0Bt3B,EAAe,SACzCu3B,EAAc,EAImB,WAAnC,OAAOD,GACP,AAAkC,SAA3BT,GAKJS,CAAAA,AAA4B,gBAA5BA,GACCT,AAA2B,IAA3BA,GAEDS,AAA4B,aAA5BA,GACET,CAAAA,EAAyB,GAAKA,AAA2B,KAA3BA,CAA+B,KAGhEP,EAAe,CAAC,kBAAkB,EAAEgB,EAAwB,mBAAmB,EAAET,EAAuB,gCAAgC,CAAC,CACzIS,EAA0BtlC,OAC1B6kC,EAAyB7kC,QAI7B,IAAMwlC,EAEJF,AAA4B,aAA5BA,GACAA,AAA4B,aAA5BA,GAGAH,AAAuB,mBAAvBA,GACAA,AAAuB,kBAAvBA,EAOIM,EACJ,CAACN,GACD,CAACG,GACD,CAACT,GACDpiB,EAAUiX,YAAY,AAKtB4L,AAA4B,iBAA5BA,GACA,AAAkC,SAA3BT,EAEPA,EAAyB,GAEzBW,CAAAA,GACAC,CAA2B,GAE3BZ,CAAAA,EAAyB,GAIzBS,CAAAA,AAA4B,aAA5BA,GACAA,AAA4B,aAA5BA,CAAqC,GAErCC,CAAAA,EAAc,CAAC,OAAO,EAAED,EAAwB,CAAC,AAAD,EAGlDd,EAAkBkB,AAxTnB,SACLC,CAAsB,CACtB39B,CAAa,EAEb,GAAI,CACF,IAAI49B,EAEJ,GAAID,AAAkB,KAAlBA,EACFC,EAAuBppC,EAAAA,EAAcA,MAChC,GACL,AAAyB,UAAzB,OAAOmpC,GACP,CAACvrC,MAAMurC,IACPA,EAAgB,GAEhBC,EAAuBD,OAClB,GAAI,AAAyB,SAAlBA,EAChB,MAAM,qBAEL,CAFK,AAAI/qC,MACR,CAAC,0BAA0B,EAAE+qC,EAAc,MAAM,EAAE39B,EAAM,yCAAyC,CAAC,EAD/F,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAEF,OAAO49B,CACT,CAAE,MAAO51B,EAAU,CAEjB,GAAIA,aAAepV,OAASoV,EAAIwO,OAAO,CAAClS,QAAQ,CAAC,sBAC/C,MAAM0D,EAER,MACF,CACF,EA6RU60B,EACApiB,EAAUza,KAAK,EAGjB,IAAM69B,EAAW73B,EAAe,WAC1B83B,EACJ,AAAyB,YAAzB,MAAOD,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUjnC,GAAG,AAAD,EACfinC,EACA,IAAIviC,QAAQuiC,GAAY,CAAC,GAEzBE,EACJD,EAAYlnC,GAAG,CAAC,kBAAoBknC,EAAYlnC,GAAG,CAAC,UAEhDonC,EAAsB,CAAC,CAAC,MAAO,OAAO,CAAC15B,QAAQ,CACnD0B,AAAAA,CAAe,MAAfA,CAAAA,EAAAA,EAAe,SAAQ,EAAR,OAAfA,EAA0BnK,WAAW,EAAC,GAAK,OAavCoiC,EAEJd,AAAsBnlC,QAAtBmlC,GAECG,CAAAA,AAA2BtlC,QAA3BslC,GAGCA,AAA4B,YAA5BA,CAAoC,GAEtCT,AAA0B7kC,QAA1B6kC,EAEEqB,EAAc/sC,EACf4sC,CAAAA,CAAAA,GAAwBC,CAAkB,GACzCf,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAiB9pB,UAAU,AAAD,IAAM,GAGhC8H,EAA2B,GAa/B,GAXI,CAACijB,GAAeD,IAIdxjB,EAAU0jB,uBAAuB,CACnCljB,EAA2B,GAE3BijB,EAAc,IAKhBD,GACA9jB,AAAkBniB,SAAlBmiB,GACCA,CAAAA,AAAuB,cAAvBA,EAAcb,IAAI,EAIjBa,AAAuB,qBAAvBA,EAAcb,IAAI,AAAsB,EAQ1C,OAJI6iB,IACFA,EAAYtE,OAAO,GACnBsE,EAAc,MAETvL,GACLzW,EAAcikB,YAAY,CAC1B,WAIJ,OAAQjB,GACN,IAAK,iBACHI,EAAc,8BACd,KAEF,KAAK,gBACH,GACED,AAA4B,gBAA5BA,GACC,AAA2B,SAApBd,GAAmCA,EAAkB,EAE7D,MAAM,qBAEL,CAFK,AAAI5pC,MACR,CAAC,uCAAuC,EAAE0iB,EAAS,gDAAgD,CAAC,EADhG,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAEFioB,EAAc,6BACd,KAEF,KAAK,aACH,GAAID,AAA4B,aAA5BA,EACF,MAAM,qBAEL,CAFK,AAAI1qC,MACR,CAAC,oCAAoC,EAAE0iB,EAAS,6CAA6C,CAAC,EAD1F,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAEF,KAEF,KAAK,cAED,CAAkC,SAA3BunB,GACPA,AAA2B,IAA3BA,CAA2B,IAE3BU,EAAc,2BACdf,EAAkBhoC,EAAAA,EAAcA,CAStC,CA0BA,GAxBI,AAA2B,SAApBgoC,EACLW,AAAuB,kBAAvBA,GAA2CC,EAGpCD,AAAuB,qBAAvBA,GACTX,EAAkB,EAClBe,EAAc,iCACLH,GACTZ,EAAkB,EAClBe,EAAc,gBACLW,GACT1B,EAAkB,EAClBe,EAAc,kBAGdA,EAAc,aACdf,EAAkBS,EACdA,EAAgB9pB,UAAU,CAC1B3e,EAAAA,EAAcA,GAhBlBgoC,EAAkBhoC,EAAAA,EAAcA,CAChC+oC,EAAc,8BAiBP,AAACA,GACVA,CAAAA,EAAc,CAAC,YAAY,EAAEf,EAAgB,CAAC,AAAD,EAM7C,CAAE/hB,CAAAA,EAAUkX,WAAW,EAAI6K,AAAoB,IAApBA,CAAoB,GAE/C,CAAC0B,GAIDjB,GACAT,EAAkBS,EAAgB9pB,UAAU,CAC5C,CAGA,GAAIqpB,AAAoB,IAApBA,EAAuB,CACzB,GAAIriB,EACF,OAAQA,EAAcb,IAAI,EACxB,IAAK,YACL,IAAK,mBAKH,OAJI6iB,IACFA,EAAYtE,OAAO,GACnBsE,EAAc,MAETvL,GACLzW,EAAcikB,YAAY,CAC1B,UAIN,CAGF3M,GACEhX,EACAN,EACA,CAAC,oBAAoB,EAAEzP,EAAM,CAAC,EAAE+P,EAAUza,KAAK,CAAC,CAAC,CAErD,CAKIi9B,GAAmBL,IAA4BJ,GACjDS,CAAAA,EAAgB9pB,UAAU,CAAGqpB,CAAc,CAE/C,CAEA,IAAM6B,EACJ,AAA2B,UAA3B,OAAO7B,GAAgCA,EAAkB,EAGrD,CAAEtqB,iBAAAA,CAAgB,CAAE,CAAGuI,EAEvB6jB,EACJnkB,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAeb,IAAI,AAAD,IAAM,WAAaa,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAeb,IAAI,AAAD,IAAM,QACzDa,EACAniB,OAEN,GACEka,GACCmsB,CAAAA,GACCC,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAwBC,wBAAwB,AAAD,CAAC,EAElD,GAAI,CACFz2B,EAAW,MAAMoK,EAAiBsG,gBAAgB,CAChDlD,EACAmnB,EAAkB/xB,EAAwB+N,EAE9C,CAAE,MAAOzQ,EAAK,CACZ1U,QAAQggB,KAAK,CAAC,mCAAoC5I,EACpD,CAGF,IAAM2K,EAAWoF,EAAUmZ,WAAW,EAAI,CAC1CnZ,CAAAA,EAAUmZ,WAAW,CAAGve,EAAW,EAEnC,IAAImpB,EAA2C,KAAO,EAEhDC,EAAkB,MACtBhtB,EACA8qB,KAEA,IAAMmC,EAAqB,CACzB,QACA,cACA,UACA,YACA,YACA,SACA,OACA,WACA,WACA,iBACA,SACA,YAGIjtB,EAAU,EAAE,CAAG,CAAC,SAAS,CAC9B,CAED,GAAIgrB,EAAgB,CAClB,IAAMkC,EAAoBj0B,EACpBk0B,EAA0B,CAC9BxpB,KAAOupB,EAAiBhmB,OAAO,EAAIgmB,EAASvpB,IAAI,AAClD,EAEA,IAAK,IAAMsnB,KAASgC,EAElBE,CAAU,CAAClC,EAAM,CAAGiC,CAAQ,CAACjC,EAAM,CAErChyB,EAAQ,IAAI8B,QAAQmyB,EAAS9gC,GAAG,CAAE+gC,EACpC,MAAO,GAAInmB,EAAM,CACf,GAAM,CAAEE,QAAAA,CAAO,CAAEvD,KAAAA,CAAI,CAAExL,OAAAA,CAAM,CAAE,GAAGi1B,EAAY,CAC5CpmB,EACFA,EAAO,CACL,GAAGomB,CAAU,CACbzpB,KAAMuD,GAAWvD,EACjBxL,OAAQ6H,EAAUzZ,OAAY4R,CAChC,CACF,CAGA,IAAMk1B,EAAa,CACjB,GAAGrmB,CAAI,CACP6c,KAAM,C,GAAK7c,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAM6c,IAAT,CAAeyJ,UAAW,SAAU1pB,SAAAA,CAAS,CACvD,EAEA,OAAOsmB,EAAYjxB,EAAOo0B,GACvB32B,IAAI,CAAC,MAAO/Q,IAeX,GAdI,CAACqa,GAAWyqB,GACd9I,GAAiB3Y,EAAW,CAC1BzR,MAAOkzB,EACPr+B,IAAKyX,EACLioB,YAAahB,GAAuBgB,EACpCyB,YACExC,AAAoB,IAApBA,GAAyBD,EACrB,OACA,OACND,aAAAA,EACAnrB,OAAQ/Z,EAAI+Z,MAAM,CAClB/N,OAAQ07B,EAAW17B,MAAM,EAAI,KAC/B,GAGAhM,AAAe,MAAfA,EAAI+Z,MAAM,EACVe,GACApK,GACCu2B,CAAAA,GACCC,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAwBC,wBAAwB,AAAD,CAAC,EAClD,CACA,IAAMX,EACJpB,GAAmBhoC,EAAAA,EAAcA,CAC7BD,EAAAA,EAAcA,CACdioC,EAEN,GACEriB,GACCA,CAAAA,AAAuB,cAAvBA,EAAcb,IAAI,EACjBa,AAAuB,qBAAvBA,EAAcb,IAAI,AAAsB,EAC1C,CAGA,IAAM2lB,EAAa,MAAM7nC,EAAI2hB,WAAW,GAElCmmB,EAAc,CAClB1oC,QAASvF,OAAOsoB,WAAW,CAACniB,EAAIZ,OAAO,CAACsG,OAAO,IAC/CsY,KAAMpc,OAAOC,IAAI,CAACgmC,GAAY7oC,QAAQ,CAAC,UACvC+a,OAAQ/Z,EAAI+Z,MAAM,CAClBtT,IAAKzG,EAAIyG,GAAG,AACd,EAuBA,OAlBA,MAAMqU,EAAiBjW,GAAG,CACxB6L,EACA,CACEkJ,KAAMzI,GAAAA,KAAqB,CAC3B7P,KAAMwmC,EACN/rB,WAAYyqB,CACd,EACA,CACEnoB,WAAY,GACZH,SAAAA,EACAD,SAAAA,EACAR,KAAAA,EACAoG,yBAAAA,CACF,GAEF,MAAMujB,IAGC,IAAIzL,SAASkM,EAAY,CAC9BzoC,QAASY,EAAIZ,OAAO,CACpB2a,OAAQ/Z,EAAI+Z,MAAM,CAClB6hB,WAAY57B,EAAI47B,UAAU,AAC5B,EACF,CAAO,CAML,GAAM,CAACF,EAASI,EAAQ,CAAGR,GAAct7B,GAKnC+nC,EAAkBrM,EACrB/Z,WAAW,GACX5Q,IAAI,CAAC,MAAO4Q,I,IAUXulB,EATA,IAAMW,EAAajmC,OAAOC,IAAI,CAAC8f,GAEzBmmB,EAAc,CAClB1oC,QAASvF,OAAOsoB,WAAW,CAACuZ,EAAQt8B,OAAO,CAACsG,OAAO,IACnDsY,KAAM6pB,EAAW7oC,QAAQ,CAAC,UAC1B+a,OAAQ2hB,EAAQ3hB,MAAM,CACtBtT,IAAKi1B,EAAQj1B,GAAG,AAClB,CAEAygC,AAAAA,OAAAA,GAAAA,AAAgD,MAAhDA,CAAAA,EAAAA,EAAwBC,wBAAwB,AAAD,GAA/CD,EAAkDriC,GAAG,CACnD6L,EACAo3B,GAGEb,GACF,MAAMnsB,EAAiBjW,GAAG,CACxB6L,EACA,CACEkJ,KAAMzI,GAAAA,KAAqB,CAC3B7P,KAAMwmC,EACN/rB,WAAYyqB,CACd,EACA,CACEnoB,WAAY,GACZH,SAAAA,EACAD,SAAAA,EACAR,KAAAA,EACAoG,yBAAAA,CACF,EAGN,GACCxK,KAAK,CAAC,AAAC6C,GACNhgB,QAAQ6nB,IAAI,CAAC,4BAA6BzQ,EAAO4I,IAElD8rB,OAAO,CAACZ,GAELa,EAAuB,CAAC,UAAU,EAAEv3B,EAAS,CAAC,CAoBpD,OAnBA2S,EAAUsS,kBAAkB,GAAK,CAAC,EAC9BsS,KAAwB5kB,EAAUsS,kBAAkB,EAGtD,MAAMtS,EAAUsS,kBAAkB,CAACsS,EAAqB,CAE1D5kB,EAAUsS,kBAAkB,CAACsS,EAAqB,CAChDF,EAAgBC,OAAO,CAAC,K,IAInB3kB,EAAD,CAA6B,MAA5BA,CAAAA,EAAAA,EAAUsS,kBAAkB,AAAD,EAAC,OAA5BtS,CAA8B,CAAC4kB,EAAqB,AAAD,GAKtD,OAAO5kB,EAAUsS,kBAAkB,CAACsS,EAAqB,AAC3D,GAEKnM,CACT,CACF,CAMA,OAFA,MAAMsL,IAECpnC,CACT,GACCqZ,KAAK,CAAC,AAAC6C,IAEN,MADAkrB,IACMlrB,CACR,EACJ,EAGIgsB,EAAyB,GACzBC,EAAoB,GAExB,GAAIz3B,GAAYoK,EAAkB,CAChC,IAAIstB,EAYJ,GATElB,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAwBmB,YAAY,AAAD,GACnCnB,EAAuBC,wBAAwB,GAE/CiB,EACElB,EAAuBC,wBAAwB,CAAC3nC,GAAG,CAACkR,GAEtDy3B,EAAoB,IAGlBlB,GAAyB,CAACmB,EAAiB,CAC7ChB,EAAe,MAAMtsB,EAAiBqG,IAAI,CAACzQ,GAC3C,IAAM7D,EAAQwW,EAAU/jB,oBAAoB,CACxC,KACA,MAAMwb,EAAiBtb,GAAG,CAACkR,EAAU,CACnCkJ,KAAMxI,GAAAA,KAA0B,CAChC2K,WAAYqpB,EACZlnB,SAAAA,EACAD,SAAAA,EACAR,KAAAA,EACAqB,SAAU4kB,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAcjmB,IAAI,AAC9B,GAsBJ,GApBIopB,GAKA9jB,GACCA,CAAAA,AAAuB,cAAvBA,EAAcb,IAAI,EACjBa,AAAuB,qBAAvBA,EAAcb,IAAI,AAAsB,GAE1C,MtDxvBL,IAAI3mB,QAAQ,AAACf,GAAM0W,aAAa1W,IsD4vB3BqS,EACF,MAAMu6B,IAGNjC,EAAsB,yCAGpBt4B,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAO/L,KAAK,AAAD,GAAK+L,EAAM/L,KAAK,CAAC8Y,IAAI,GAAKzI,GAAAA,KAAqB,CAG5D,GAAIkS,EAAUilB,YAAY,EAAIz7B,EAAMwN,OAAO,CACzC6tB,EAAyB,OACpB,CACL,GAAIr7B,EAAMwN,OAAO,GACfgJ,EAAUsS,kBAAkB,GAAK,CAAC,EAC9B,CAACtS,EAAUsS,kBAAkB,CAACjlB,EAAS,EAAE,CAC3C,IAAM63B,EAAoBlB,EAAgB,IACvCt2B,IAAI,CAAC,MAAOqF,GAAc,EACzB4H,KAAM,MAAM5H,EAASuL,WAAW,GAChCviB,QAASgX,EAAShX,OAAO,CACzB2a,OAAQ3D,EAAS2D,MAAM,CACvB6hB,WAAYxlB,EAASwlB,UAAU,AACjC,IACCoM,OAAO,CAAC,KACP3kB,EAAUsS,kBAAkB,GAAK,CAAC,EAClC,OAAOtS,EAAUsS,kBAAkB,CAACjlB,GAAY,GAAG,AACrD,GAIF63B,EAAkBlvB,KAAK,CAACnd,QAAQggB,KAAK,EAErCmH,EAAUsS,kBAAkB,CAACjlB,EAAS,CAAG63B,CAC3C,CAGFH,EAAkBv7B,EAAM/L,KAAK,CAACQ,IAAI,AACpC,CAEJ,CAEA,GAAI8mC,EAAiB,CACftD,GACF9I,GAAiB3Y,EAAW,CAC1BzR,MAAOkzB,EACPr+B,IAAKyX,EACLioB,YAAAA,EACAyB,YAAaO,EAAoB,MAAQ,MACzCjD,aAAAA,EACAnrB,OAAQquB,EAAgBruB,MAAM,EAAI,IAClC/N,OAAQqV,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMrV,MAAM,AAAD,GAAK,KAC1B,GAGF,IAAMoK,EAAW,IAAIulB,SACnB/5B,OAAOC,IAAI,CAACumC,EAAgBpqB,IAAI,CAAE,UAClC,CACE5e,QAASgpC,EAAgBhpC,OAAO,CAChC2a,OAAQquB,EAAgBruB,MAAM,AAChC,GAOF,OAJAlgB,OAAOgH,cAAc,CAACuV,EAAU,MAAO,CACrCtV,MAAOsnC,EAAgB3hC,GAAG,AAC5B,GAEO2P,CACT,CACF,CAEA,GAAIiN,EAAUgZ,kBAAkB,EAAIhb,GAAQ,AAAgB,UAAhB,OAAOA,EAAmB,CACpE,GAAM,CAAEzZ,MAAAA,CAAK,CAAE,CAAGyZ,EAKlB,GAAIzZ,AAAU,aAAVA,EAAsB,CAExB,GAAImb,EACF,OAAQA,EAAcb,IAAI,EACxB,IAAK,YACL,IAAK,mBAKH,OAJI6iB,IACFA,EAAYtE,OAAO,GACnBsE,EAAc,MAETvL,GACLzW,EAAcikB,YAAY,CAC1B,UAIN,CAEF3M,GACEhX,EACAN,EACA,CAAC,eAAe,EAAEzP,EAAM,CAAC,EAAE+P,EAAUza,KAAK,CAAC,CAAC,CAEhD,CAEA,IAAM4/B,EAAgB,SAAUnnB,EAC1B,CAAE6c,KAAAA,EAAO,CAAC,CAAC,CAAE,CAAG7c,EACtB,GACE,AAA2B,UAA3B,OAAO6c,EAAKniB,UAAU,EACtB8pB,GACA3H,EAAKniB,UAAU,CAAG8pB,EAAgB9pB,UAAU,CAC5C,CACA,GAAImiB,AAAoB,IAApBA,EAAKniB,UAAU,CAAQ,CAEzB,GAAIgH,EACF,OAAQA,EAAcb,IAAI,EACxB,IAAK,YACL,IAAK,mBACH,OAAOsX,GACLzW,EAAcikB,YAAY,CAC1B,UAIN,CAEF3M,GACEhX,EACAN,EACA,CAAC,oBAAoB,EAAEzP,EAAM,CAAC,EAAE+P,EAAUza,KAAK,CAAC,CAAC,CAErD,CAEI,AAACya,EAAUkX,WAAW,EAAI2D,AAAoB,IAApBA,EAAKniB,UAAU,EAC3C8pB,CAAAA,EAAgB9pB,UAAU,CAAGmiB,EAAKniB,UAAU,AAAD,CAE/C,CACIysB,GAAe,OAAOnnB,EAAK6c,IAAI,AACrC,CAKA,GAAIxtB,CAAAA,IAAYw3B,EA+Dd,OAAOb,EAAgB,GAAOlC,EA/DQ,EACtC,IAAM8C,EAAuBv3B,CAC7B2S,CAAAA,EAAUsS,kBAAkB,GAAK,CAAC,EAClC,IAAI4S,EACFllB,EAAUsS,kBAAkB,CAACsS,EAAqB,CAEpD,GAAIM,EAAmB,CACrB,IAAME,EAKF,MAAMF,EACV,OAAO,IAAI5M,SAAS8M,EAAkBzqB,IAAI,CAAE,CAC1C5e,QAASqpC,EAAkBrpC,OAAO,CAClC2a,OAAQ0uB,EAAkB1uB,MAAM,CAChC6hB,WAAY6M,EAAkB7M,UAAU,AAC1C,EACF,CAUA,IAAM8M,EAAkBrB,EAAgB,GAAMlC,GAK3Cp0B,IAAI,CAACuqB,IA4BR,MAJAiN,AAtBAA,CAAAA,EAAoBG,EACjB33B,IAAI,CAAC,MAAOwI,IACX,IAAMnD,EAAWmD,CAAS,CAAC,EAAE,CAC7B,MAAO,CACLyE,KAAM,MAAM5H,EAASuL,WAAW,GAChCviB,QAASgX,EAAShX,OAAO,CACzB2a,OAAQ3D,EAAS2D,MAAM,CACvB6hB,WAAYxlB,EAASwlB,UAAU,AACjC,CACF,GACCoM,OAAO,CAAC,K,IAGF3kB,EAAD,CAA6B,MAA5BA,CAAAA,EAAAA,EAAUsS,kBAAkB,AAAD,EAAC,OAA5BtS,CAA8B,CAAC4kB,EAAqB,AAAD,GAIxD,OAAO5kB,EAAUsS,kBAAkB,CAACsS,EAAqB,AAC3D,EAAC,EAIe5uB,KAAK,CAAC,KAAO,GAE/BgK,EAAUsS,kBAAkB,CAACsS,EAAqB,CAAGM,EAE9CG,EAAgB33B,IAAI,CAAC,AAACwI,GAAcA,CAAS,CAAC,EAAE,CACzD,CAGF,GAGF,GAAIwrB,EACF,GAAI,CACF,OAAO,MAAMp0B,CACf,QAAU,CACJo0B,GACFA,EAAYtE,OAAO,EAEvB,CAEF,OAAO9vB,CACT,EAeA,OATA6zB,EAAQmE,aAAa,CAAG,GACxBnE,EAAQoE,oBAAoB,CAAG,IAAMtlB,EACrCkhB,EAAQqE,kBAAkB,CAAGtE,EAC3Bp+B,UAAsC,CAAC41B,GAAkB,CAAG,GAI9DliC,OAAOgH,cAAc,CAAC2jC,EAAS,OAAQ,CAAE1jC,MAAO,QAASkY,SAAU,EAAM,GAElEwrB,CACT,EAY0C9/B,EAAUzE,EACpD,EkBpvBe,CACTqjB,iBAAkB,IAAI,CAACA,gBAAgB,CACvCN,qBAAsB,IAAI,CAACA,oBAAoB,AACjD,GAEA,IAAM8lB,EAA2C,CAC/Cr8B,OAAQkO,EAAQlO,MAAM,CAClBs8B,AFhPH,SACLjH,CAAwB,CACxBze,CAAoB,MAsGpBye,EApGA,IAAM/e,EAAgBC,GAAAA,oBAAAA,CAAAA,QAA6B,GACnD,GAAID,EACF,OAAQA,EAAcb,IAAI,EACxB,IAAK,YACL,IAAK,mBACL,IAAK,gBACL,IAAK,mBACH,OAAO8mB,AAuDf,SACElH,CAAwB,CACxBze,CAAoB,CACpB0X,CAA8B,EAE9B,IAAMkO,EAAiB5lB,EAAUiV,mBAAmB,CACpD,GAAI2Q,EAAgB,CAClB,IAAIC,EAAwB,GAC5B,IAAK,IAAM5mC,KAAOw/B,EAChB,GAAImH,EAAevpC,GAAG,CAAC4C,GAAM,CAC3B4mC,EAAwB,GACxB,KACF,CAGF,GAAIA,EAEF,OAAQnO,EAAe7Y,IAAI,EACzB,IAAK,YACL,IAAK,uBA0EX4f,EAxEiCA,EAyEjC/G,EAzEmDA,EA2EnD,IAAMgH,EAAeR,GAAa/hC,GAAG,CAACsiC,GACtC,GAAIC,EACF,OAAOA,EAGT,IAAM9xB,EAAU,IAAI9L,MAClBq1B,GAA2BuB,EAAeiM,YAAY,CAAE,YACxDxF,IAKF,OAFAD,GAAa18B,GAAG,CAACi9B,EAAkB7xB,GAE5BA,CAtFD,aA0FN6xB,EAxFUA,EAyFVmH,EAxFUA,EAyFV5lB,EAxFUA,EAyFV0X,EAxFUA,EA0FV,IAAMgH,EAAeR,GAAa/hC,GAAG,CAACsiC,GACtC,GAAIC,EACF,OAAOA,EAGT,IAAMoH,EAAsB,CAAE,GAAGrH,CAAgB,AAAC,EAK5C7xB,EAAU1U,QAAQwU,OAAO,CAACo5B,GA6EhC,OA5EA5H,GAAa18B,GAAG,CAACi9B,EAAkB7xB,GAEnCpW,OAAO8K,IAAI,CAACm9B,GAAkBv8B,OAAO,CAAC,AAAClB,IACjC28B,GAAAA,GAAuB,CAAC38B,KAItB4kC,EAAevpC,GAAG,CAAC2E,IACrBxK,OAAOgH,cAAc,CAACsoC,EAAqB9kC,EAAM,CAC/C7E,MACE,IAAM85B,EAAayH,GAA6B,SAAU18B,EAOtD02B,AAAwB,mBAAxBA,EAAe7Y,IAAI,CAErBuY,GACEpX,EAAUza,KAAK,CACf0wB,EACAyB,EAAeL,eAAe,EAIhCI,GACExB,EACAjW,EACA0X,EAGN,EACAh6B,WAAY,EACd,GACAlH,OAAOgH,cAAc,CAACoP,EAAS5L,EAAM,CACnC7E,MACE,IAAM85B,EAAayH,GAA6B,SAAU18B,EAOtD02B,AAAwB,mBAAxBA,EAAe7Y,IAAI,CAErBuY,GACEpX,EAAUza,KAAK,CACf0wB,EACAyB,EAAeL,eAAe,EAIhCI,GACExB,EACAjW,EACA0X,EAGN,EACAl2B,IAAIukC,CAAQ,EACVvvC,OAAOgH,cAAc,CAACoP,EAAS5L,EAAM,CACnCvD,MAAOsoC,EACPpwB,SAAU,GACVjY,WAAY,EACd,EACF,EACAA,WAAY,GACZ86B,aAAc,EAChB,IAEE5rB,CAAe,CAAC5L,EAAK,CAAGy9B,CAAgB,CAACz9B,EAAK,CAGtD,GAEO4L,CA/KH,CAEJ,CAGA,OAAO4xB,GAA0BC,EACnC,EA1FqCA,EAAkBze,EAAWN,EAG9D,CAEF,OAwFA+e,EAxF0BA,EAwGxB,AAAI7lC,QAAQoY,GAAG,CAAC+sB,iBAAiB,CACxBiI,AAgLb,SAA6BvH,CAAwB,EACnD,IAAMC,EAAeR,GAAa/hC,GAAG,CAACsiC,GACtC,GAAIC,EACF,OAAOA,EAGT,IAAM9xB,EAAU1U,QAAQwU,OAAO,CAAC+xB,GAGhC,OAFAP,GAAa18B,GAAG,CAACi9B,EAAkB7xB,GAE5BA,CACT,EA1LiC6xB,GAGtBD,GAA0BC,EA3GrC,EEgOYwH,AG3TL,SACLxiC,CAAqB,EAErB,IAAM2F,EAA4C,CAAC,EAEnD,IAAK,GAAM,CAACnK,EAAKxB,EAAM,GAAIjH,OAAO6L,OAAO,CAACoB,GACnB,SAAVhG,GACX2L,CAAAA,CAAM,CAACnK,EAAI,CAAGxB,CAAI,EAGpB,OAAO2L,CACT,EHgTmCkO,EAAQlO,MAAM,EACrC4W,GAEFziB,MACN,EAEM2oC,EAA8B,KAClC5uB,EAAQkpB,UAAU,CAAC2F,gBAAgB,CAAG5T,GACpCvS,GACA2kB,OAAO,CAAC,KACJ/rC,QAAQoY,GAAG,CAACwI,wBAAwB,EACtC3gB,QAAQkhB,GAAG,CACT,4CACAmW,EAAa9sB,GAAG,CAGtB,EACF,EAEIs0B,EAAwC,KAG5C,GAAI,CACF,GAAIsB,EAAoB,CACtB,IAAMoN,EAAqB,IAAI,CAAC5kB,QAAQ,CAAC9I,UAAU,CAC7C2tB,EAIJD,AAAuB,KAAvBA,GAAgCA,AAAuB7oC,SAAvB6oC,EAC5BrsC,EAAAA,EAAcA,CACdqsC,EAEN,GAAI7F,EAAkB,CAmBpB,IA+BI+F,EA/BEC,EAAwB,IAAIvzB,gBAC9BwzB,EAA6B,GAC3B9E,EAAc,IAAIjF,GACpBpF,EAAkBT,GAA2Br5B,QAE3CkpC,EACH/O,EAAiB,CAChB7Y,KAAM,YACNuR,MAAO,SAGPsW,WAAY,CAAC,EACbrG,aAAAA,EACAsD,aAAc4C,EAAsBp3B,MAAM,CAC1CX,WAAY+3B,EACZ7E,YAAAA,EAGArK,gBAAAA,EACAsP,sBAAuB,GACvBjuB,WAAY2tB,EACZztB,OAAQ7e,EAAAA,EAAcA,CACtB6sC,MAAO7sC,EAAAA,EAAcA,CACrBqgB,KAAM,IAAIimB,EAAajmB,IAAI,CAAC,CAE5BiG,yBAA0B,KAC1BwmB,sBAAuB,KACvBC,eAAgBvpC,OAChBwpC,kBAAmBxpC,MACrB,EAGF,GAAI,CACF+oC,EAAoB,IAAI,CAAC3mB,oBAAoB,CAACqT,GAAG,CAC/CyT,EACApiB,EACAgJ,EACAoY,EAEJ,CAAE,MAAOl4B,EAAK,CACRg5B,EAAsBp3B,MAAM,CAACK,OAAO,CAGtCg3B,EAA6B,GAE7B5tC,CAAAA,QAAQoY,GAAG,CAAC8nB,gBAAgB,EAC5BlgC,QAAQoY,GAAG,CAACg2B,sBAAsB,AAAD,GAEjCjL,GAA0CxuB,EAAKyS,EAAUza,KAAK,CAElE,CA4BA,GA1BE,AAA6B,UAA7B,OAAO+gC,GACPA,AAAsB,OAAtBA,GACA,AAA2C,YAA3C,OAAQA,EAA0B54B,IAAI,EAIpC44B,EAA8C54B,IAAI,CAClD,KAAO,EACP,AAACH,IACKg5B,EAAsBp3B,MAAM,CAACK,OAAO,CAGtCg3B,EAA6B,GACpB5tC,QAAQoY,GAAG,CAAC8nB,gBAAgB,EACrCiD,GACExuB,EACAyS,EAAUza,KAAK,CAGrB,GAIJ0hC,AAAAA,GAAAA,GAAAA,mBAAAA,AAAAA,EAAoBvF,GACpB,MAAMA,EAAYzE,UAAU,GAExBuJ,EAA4B,CAG9B,IAAMU,GpB9VhB5G,EoB8VsDjJ,EpB5V/C,AAAgC,MAAhCiJ,CAAAA,EAAAA,EAAcxJ,eAAe,CAAC,EAAE,AAAD,EAAC,OAAhCwJ,EAAkCrK,UAAU,EoB6VzC,GAAIiR,EACF,MAAM,qBAEL,CAFK,IAAIvR,GACR,CAAC,MAAM,EAAE3V,EAAUza,KAAK,CAAC,mDAAmD,EAAE2hC,EAAc,6EAA6E,CAAC,EADtK,qB,MAAA,O,WAAA,G,aAAA,EAEN,EAKA,OAHAruC,QAAQggB,KAAK,CACX,+HAEI,qBAEL,CAFK,IAAI8c,GACR,CAAC,MAAM,EAAE3V,EAAUza,KAAK,CAAC,yIAAyI,CAAC,EAD/J,qB,MAAA,O,WAAA,G,aAAA,EAEN,EAEJ,CAKA,IAAM4hC,EAAkB,IAAIn0B,gBAC5BqkB,EAAkBT,GAA2Br5B,QAE7C,IAAM6pC,EAA4C1P,EAAiB,CACjE7Y,KAAM,YACNuR,MAAO,SACPsW,WAAY,CAAC,EACbrG,aAAAA,EACAsD,aAAcwD,EAAgBh4B,MAAM,CACpCX,WAAY24B,EACZzF,YAAa,KACbrK,gBAAAA,EACAsP,sBAAuB,GACvBjuB,WAAY2tB,EACZztB,OAAQ7e,EAAAA,EAAcA,CACtB6sC,MAAO7sC,EAAAA,EAAcA,CACrBqgB,KAAM,IAAIimB,EAAajmB,IAAI,CAAC,CAE5BiG,yBAA0B,KAC1BwmB,sBAAuB,KACvBC,eAAgBvpC,OAChBwpC,kBAAmBxpC,MACrB,EAEI8pC,EAAkB,GAsDtB,GArDA1qC,EAAM,MAAM,IAAIzE,QAAQ,CAACwU,EAASC,KAChCiB,GAAkB,UAChB,GAAI,CACF,IAAMN,EAAS,MAAO,IAAI,CAACqS,oBAAoB,CAACqT,GAAG,CACjDoU,EACA/iB,EACAgJ,EACAoY,GAEF,GAAI4B,EAEF,OACK,GAAI,CAAE/5B,CAAAA,aAAkBgrB,QAAO,EAAI,YAExC5rB,EAAQY,GAIV+5B,EAAkB,GAElB,IAAIC,EAAc,GAClBh6B,EAAOgR,WAAW,GAAG5Q,IAAI,CAAC,AAACiN,IACpB2sB,IACHA,EAAc,GAEd56B,EACE,IAAI4rB,SAAS3d,EAAM,CACjB5e,QAASuR,EAAOvR,OAAO,CACvB2a,OAAQpJ,EAAOoJ,MAAM,CACrB6hB,WAAYjrB,EAAOirB,UAAU,AAC/B,IAGN,EAAG5rB,GACHiB,GAAkB,KACX05B,IACHA,EAAc,GACdH,EAAgBh0B,KAAK,GACrBxG,EAAO46B,GAAqBvnB,EAAUza,KAAK,GAE/C,EACF,CAAE,MAAOgI,EAAK,CACZZ,EAAOY,EACT,CACF,GACAK,GAAkB,KACXy5B,IACHA,EAAkB,GAClBF,EAAgBh0B,KAAK,GACrBxG,EAAO46B,GAAqBvnB,EAAUza,KAAK,GAE/C,EACF,GACI4hC,EAAgBh4B,MAAM,CAACK,OAAO,CAEhC,MAAM+3B,GAAqBvnB,EAAUza,KAAK,EAK1C4hC,EAAgBh0B,KAAK,EAEzB,MACEukB,EAAiB,CACf7Y,KAAM,mBACNuR,MAAO,SACPsW,WAAY,CAAC,EACbrG,aAAAA,EACA3nB,WAAY2tB,EACZztB,OAAQ7e,EAAAA,EAAcA,CACtB6sC,MAAO7sC,EAAAA,EAAcA,CACrBqgB,KAAM,IAAIimB,EAAajmB,IAAI,CAAC,AAC9B,EAEAzd,EAAM,MAAMgjB,GAAAA,oBAAAA,CAAAA,GAAwB,CAClC+X,EACArT,EACAgJ,EACAoY,EAGN,MACE9oC,EAAM,MAAMgjB,GAAAA,oBAAAA,CAAAA,GAAwB,CAClCuQ,EACA7L,EACAgJ,EACAoY,EAGN,CAAE,MAAOl4B,EAAK,CACZ,GAAIouB,GAAgBpuB,GAAM,CACxB,IAAMnK,EDjgBZ,AAAKu4B,GCigBqCpuB,GD7fnCsL,AC6fmCtL,ED7f7BgS,MAAM,CAACva,KAAK,CAAC,KAAKrF,KAAK,CAAC,EAAG,IAAIiC,IAAI,CAAC,KAJb,KCkgB9B,GAAI,CAACwB,EACH,MAAM,qBAAsD,CAAtD,AAAIjL,MAAM,6CAAV,qB,MAAA,O,WAAA,G,aAAA,EAAqD,GAK7D,IAAM4D,EAAU,IAAI8E,QAAQ,CAAE2mC,SAAUpkC,CAAI,GAa5C,MAPI8sB,AAAsB,YAAtBA,EAAarR,IAAI,EACnB+P,GAAqB7yB,EAASm0B,EAAarB,cAAc,EAG3DqX,IAGO,IAAI5N,SAAS,KAAM,CAIxB5hB,OAAQ0pB,EAAYqH,QAAQ,CACxB/L,GAAAA,QAA2B,CAC3BgM,AD5gBP,SAAwC7uB,CAAoB,EACjE,GAAI,CAAC8iB,GAAgB9iB,GACnB,MAAM,qBAAiC,CAAjC,AAAI1gB,MAAM,wBAAV,qB,MAAA,O,WAAA,G,aAAA,EAAgC,GAGxC,OAAOpB,OAAO8hB,EAAM0G,MAAM,CAACva,KAAK,CAAC,KAAK82B,EAAE,CAAC,IAC3C,ECsgB6CvuB,GACnCxR,QAAAA,CACF,EACF,CAAO,GAAIy/B,GAA0BjuB,GAEnC,OAAO,IAAI+qB,SAAS,KAAM,CAAE5hB,OdjkB3B3f,OADY8hB,AcikBkCtL,EdjkB5BgS,MAAM,CAACva,KAAK,CAAC,IAAI,CAAC,EAAE,CckkBQ,EAGjD,OAAMuI,CACR,CAGA,GAAI,CAAE5Q,CAAAA,aAAe27B,QAAO,EAC1B,MAAM,qBAEL,CAFK,AAAIngC,MACR,CAAC,4CAA4C,EAAE,IAAI,CAAC8mC,gBAAgB,CAAC,0FAA0F,CAAC,EAD5J,qB,MAAA,O,WAAA,G,aAAA,EAEN,EAGF3nB,CAAAA,EAAQkpB,UAAU,CAACvH,YAAY,CAAGjZ,EAAUiZ,YAAY,CAExDiN,IAEIxO,IACFpgB,EAAQkpB,UAAU,CAACiC,aAAa,CAAG,AAAmB,MAAnB/K,CAAAA,EAAAA,EAAetd,IAAI,AAAD,EAAC,OAAnBsd,EAAqB91B,IAAI,CAAC,KAC7D0V,EAAQkpB,UAAU,CAACmH,mBAAmB,CAAGjQ,EAAehf,UAAU,CAClEpB,EAAQkpB,UAAU,CAACoH,eAAe,CAAGlQ,EAAe9e,MAAM,CAC1DtB,EAAQkpB,UAAU,CAACqH,cAAc,CAAGnQ,EAAekP,KAAK,EAM1D,IAAM7qC,EAAU,IAAI8E,QAAQlE,EAAIZ,OAAO,QACvC,AACEm0B,AAAsB,YAAtBA,EAAarR,IAAI,EACjB+P,GAAqB7yB,EAASm0B,EAAarB,cAAc,EAElD,IAAIyJ,SAAS37B,EAAIge,IAAI,CAAE,CAC5BjE,OAAQ/Z,EAAI+Z,MAAM,CAClB6hB,WAAY57B,EAAI47B,UAAU,CAC1Bx8B,QAAAA,CACF,GAGKY,CACT,CAEA,MAAamrC,OACXjsC,CAAgB,CAChByb,CAAoC,CACjB,K/BlhBrBlU,E+BohBE,IAAMihB,EAAU,IAAI,CAAC3X,OAAO,CAAC7Q,EAAI8M,MAAM,EAGjCo/B,EAA4C,CAEhD9S,oBAAqB,KACrBvpB,KAAM,IAAI,CAAC+V,UAAU,CAAC/V,IAAI,CAC1B80B,WAAYlpB,EAAQkpB,UAAU,CAC9B3vB,QAASyG,EAAQ0wB,aAAa,CAACn3B,OAAO,CACtCo3B,0BAA2B,EAAE,AAC/B,CAGAF,CAAAA,EAAwBvH,UAAU,CAACxlB,UAAU,CAAG,IAAI,CAACwG,QAAQ,CAACxG,UAAU,CAExE,IAAMolB,EAA2B,CAC/B8H,WAAY,GACZT,SIxnBGU,AAhDF,SACLtsC,CAAoD,MAQhDusC,EACApzB,CAEAnZ,CAAAA,EAAIE,OAAO,YAAY8E,SACzBunC,EAAWvsC,EAAIE,OAAO,CAACI,GAAG,CAACmO,EAAc,WAAW,KAAO,KAC3D0K,EAAcnZ,EAAIE,OAAO,CAACI,GAAG,CAAC,kBAE9BisC,EAAYvsC,EAAIE,OAAO,CAACuO,EAAc,WAAW,GAAG,EAAe,KACnE0K,EAAcnZ,EAAIE,OAAO,CAAC,eAAe,EAAI,MAG/C,IAAMssC,EACJxsC,AAAe,SAAfA,EAAI8M,MAAM,EAAeqM,AAAgB,sCAAhBA,EAErBszB,EAAoB5xC,EACxBmF,CAAAA,AAAe,SAAfA,EAAI8M,MAAM,EAAeqM,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAa3P,UAAU,CAAC,sBAAqB,CAAC,EAEnEkjC,EACJH,AAAa7qC,SAAb6qC,GACE,AAAoB,UAApB,OAAOA,GACPvsC,AAAe,SAAfA,EAAI8M,MAAM,CAOd,MAAO,CACLy/B,SAAAA,EACAC,mBAAAA,EACAC,kBAAAA,EACAC,cAAAA,EACAC,uBAT6B9xC,EAC7B6xC,CAAAA,GAAiBF,GAAsBC,CAAgB,CASzD,CACF,EJ6nB0CzsC,GIxnBG2sC,sBAAsB,AJynB/D,EAEMnI,EAAe,MAAMrL,GACzB,IAAI,CAACvT,UAAU,CAAC/V,IAAI,CACpB7P,EAAI4sC,OAAO,CAEX,MAGIvY,G/B/iBR9sB,E+BijBIvH,EAAI4sC,OAAO,C/B5iBRC,AAgBT,SACEtY,CAA4B,CAC5Bv0B,CAA0B,CAC1Bc,CAA0B,CAC1ByG,CAA0B,CAC1BsjC,CAAkB,CAClBrG,CAA4C,CAC5C/Q,CAA8C,CAC9CuX,CAAwD,CACxD/qC,CAA+C,CAC/CkpC,CAA4C,CAC5ClB,CAAoE,EAEpE,SAAS6E,EAAuB9qC,CAAiB,EAC3ClB,GACFA,EAAIM,SAAS,CAAC,aAAcY,EAEhC,CAEA,IAAM0G,EAMF,CAAC,EAEL,MAAO,CACLsa,KAAM,UACNuR,MAAAA,EACAiQ,aAAAA,EAIAj9B,IAAK,CAAEW,SAAUX,EAAIW,QAAQ,CAAED,OAAQV,EAAIU,MAAM,EAAI,EAAG,EACxD4iC,WAAAA,EACA,IAAI3qC,SAAU,CAOZ,OANI,AAACwI,EAAMxI,OAAO,EAGhBwI,CAAAA,EAAMxI,OAAO,CAAG6sC,AA1KxB,SAAoB7sC,CAAsC,EACxD,IAAM8sC,EAAU7sC,GAAAA,CAAAA,CAAAA,IAAmB,CAACD,GACpC,IAAK,IAAM+sC,KAAUt+B,EACnBq+B,EAAQ5mC,MAAM,CAAC6mC,EAAO1nC,WAAW,IAGnC,OAAOpF,GAAAA,CAAAA,CAAAA,IAAmB,CAAC6sC,EAC7B,EAmKmChtC,EAAIE,OAAO,GAGjCwI,EAAMxI,OAAO,AACtB,EACA,IAAI8B,SAAU,CACZ,GAAI,CAAC0G,EAAM1G,OAAO,CAAE,CAGlB,IAAMkrC,EAAiB,IAAIhrC,GAAAA,EAAcA,CACvC/B,GAAAA,CAAAA,CAAAA,IAAmB,CAACH,EAAIE,OAAO,GAGjC80B,GAAuBh1B,EAAKktC,GAI5BxkC,EAAM1G,OAAO,CAAG6wB,GAAAA,IAA0B,CAACqa,EAC7C,CAEA,OAAOxkC,EAAM1G,OAAO,AACtB,EACA,IAAIA,QAAQJ,MAA+B,CACzC8G,EAAM1G,OAAO,CAAGJ,KAClB,EACA,IAAIoxB,gBAAiB,CACnB,GAAI,CAACtqB,EAAMsqB,cAAc,CAAE,CACzB,IAAMA,EAAiBma,AA5L/B,SACEjtC,CAAsC,CACtCuzB,CAA6C,EAE7C,IAAMzxB,EAAU,IAAIE,GAAAA,EAAcA,CAAC/B,GAAAA,CAAAA,CAAAA,IAAmB,CAACD,IACvD,OAAOqzB,GAA6B,IAAI,CAACvxB,EAASyxB,EACpD,EAuLUzzB,EAAIE,OAAO,CACXuzB,GAAoB3yB,CAAAA,EAAMgsC,EAAyBprC,MAAQ,GAG7DszB,GAAuBh1B,EAAKgzB,GAE5BtqB,EAAMsqB,cAAc,CAAGA,CACzB,CACA,OAAOtqB,EAAMsqB,cAAc,AAC7B,EACA,IAAIoa,yBAA0B,CAO5B,OANK1kC,EAAM0kC,uBAAuB,EAIhC1kC,CAAAA,EAAM0kC,uBAAuB,CAHGC,AFvDjC,SACL3Z,CAAgC,EAEhC,IAAMQ,EAAiB,IAAIjvB,MAAMyuB,EAAiB,CAChDpzB,IAAI4E,CAAM,CAAEC,CAAI,CAAEC,CAAQ,EACxB,OAAQD,GACN,IAAK,SACH,OAAO,SAAU,GAAGmZ,CAAiC,EAGnD,OAFA6V,GAA6B,oBAC7BjvB,EAAOkB,MAAM,IAAIkY,GACV4V,CACT,CACF,KAAK,MACH,OAAO,SAAU,GAAG5V,CAAmB,EAGrC,OAFA6V,GAA6B,iBAC7BjvB,EAAOS,GAAG,IAAI2Y,GACP4V,CACT,CAEF,SACE,OAAO7uB,GAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMC,EAC5C,CACF,CACF,GACA,OAAO8uB,CACT,EE+BU,IAAI,CAAClB,cAAc,CAEiC,EAEjDtqB,EAAM0kC,uBAAuB,AACtC,EACA,IAAIE,WAAY,CAUd,OATI,AAAC5kC,EAAM4kC,SAAS,EAClB5kC,CAAAA,EAAM4kC,SAAS,CAAG,IAAI9Y,GACpBv0B,EACAD,EACA,IAAI,CAACgC,OAAO,CACZ,IAAI,CAACgxB,cAAc,GAIhBtqB,EAAM4kC,SAAS,AACxB,EACAtC,sBAAuBA,GAAyB,KAChD7B,aAAAA,EACAlB,yBACEA,GACChhC,WAAmBsmC,0BAA0B,AAClD,CACF,EAvHI,S+ByiBEvtC,E/BviBF0B,OACA6F,EACA,CAAC,E+BuiBCi9B,EACA9iC,O/BriBFA,O+BsiBE+Z,EAAQ2F,iBAAiB,CAACG,OAAO,C/BpiBnC,GACA7f,S+BsiBMyiB,EAAYqpB,AK7mBf,SAAyB,CAC9B39B,KAAAA,CAAI,CACJupB,oBAAAA,CAAmB,CACnBuL,WAAAA,CAAU,CACV5H,kBAAAA,CAAiB,CACjB0Q,kBAAAA,CAAiB,CACjBz4B,QAAAA,CAAO,CACPo3B,0BAAAA,CAAyB,CACR,EAwBjB,IAAMtW,EAAmB,CACvBqH,mBANA,CAACwH,EAAW+I,oBAAoB,EAChC,CAAC/I,EAAWgJ,uBAAuB,EACnC,CAAChJ,EAAW1S,WAAW,EACvB,CAAC0S,EAAWgI,sBAAsB,CAIlC98B,KAAAA,EACAupB,oBAAAA,EACA1vB,MAAOD,EAAiBoG,GACxB+L,iBAGE+oB,EAAW/oB,gBAAgB,EAAK3U,WAAmB2mC,kBAAkB,CACvEC,kBAAmBlJ,EAAWkJ,iBAAiB,CAC/CzE,aAAczE,EAAWyE,YAAY,CACrCvB,wBAAyBlD,EAAWmJ,UAAU,CAC9CC,uBAAwBpJ,EAAWoJ,sBAAsB,CACzD5uB,WAAYwlB,EAAWxlB,UAAU,CACjC/e,qBAAsBukC,EAAWvkC,oBAAoB,CAErD6xB,YAAa0S,EAAW1S,WAAW,CAEnC8K,kBAAAA,EACA0Q,kBAAAA,EACAz4B,QAAAA,EACAwR,sBAAuBme,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAYne,qBAAqB,AAAD,GAAK,CAAC,EAC7DwnB,YAAarJ,AAAAA,CAAAA,AAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAYqJ,WAAW,AAAD,GAAK,GAExCC,aAAcC,AAclB,SAA4BvJ,CAAgC,EAC1D,GAAM,CAAEvrB,UAAAA,CAAS,CAAEqe,QAAAA,CAAO,CAAE0W,iBAAAA,CAAgB,CAAE,CAAGxJ,EACjD,OAAO,IAAInN,GAAa,CACtBpe,UAAAA,EACAqe,QAAAA,EACAC,YAAayW,CACf,EACF,EArBqCxJ,GACjCD,iBAAkBC,EAAWzc,YAAY,CAAC0c,SAAS,CACnDxkB,IAAKukB,EAAWvkB,GAAG,EAAI,GACvBgsB,0BAAAA,EACAgC,uBAAwBC,AAuB5B,WACE,IAAMD,EAAyB,IAAIrzC,IAC7BktB,EAAgB/C,KAEtB,GAAI+C,EACF,IAAK,GAAM,CAACvN,EAAM+G,EAAa,GAAIwG,EAC7B,gBAAiBxG,GACnB2sB,EAAuBzoC,GAAG,CACxB+U,EACAoe,GAAiB,SAAYrX,EAAa6sB,WAAW,KAM7D,OAAOF,CACT,IAtCIG,mBlCrFF,AAAIjX,GACKA,GAA6BkX,QAAQ,GAEvC,SAAUp9B,CAAO,CAAE,GAAGkN,CAAW,EACtC,OAAOlN,KAAMkN,EACf,CkCiFA,EAKA,OAFAqmB,EAAW7O,KAAK,CAAGA,EAEZA,CACT,ELyiBsCoW,GAK5Bh1B,EAAoB,MAAM,IAAI,CAACqsB,kBAAkB,CAACpM,GAAG,CACzDoN,EACA,IACE,IAAI,CAACzgB,oBAAoB,CAACqT,GAAG,CAAC9C,EAAc,IAC1C,IAAI,CAACjQ,gBAAgB,CAAC+S,GAAG,CAAChT,EAAW,UAGnC,GAAI,IAAI,CAAC+f,mBAAmB,EACtB/f,EAAUgZ,kBAAkB,CAAE,CAChC,IAAMzrB,EAAM,qBAEX,CAFW,IAAIooB,GACd,yEADU,qB,MAAA,O,WAAA,G,aAAA,EAEZ,EAGA,OAFA3V,EAAUsX,uBAAuB,CAAG/pB,EAAIwO,OAAO,CAC/CiE,EAAUuX,iBAAiB,CAAGhqB,EAAIiqB,KAAK,CACjCjqB,CACR,CAKF,IAAI8f,EAAUxxB,EAGd,OAAQ,IAAI,CAACmkC,OAAO,EAClB,IAAK,gBAGH,GADAhgB,EAAUiX,YAAY,CAAG,GACrBjX,EAAUgZ,kBAAkB,CAAE,CAChC,IAAMzrB,EAAM,qBAEX,CAFW,IAAIooB,GACd,kFADU,qB,MAAA,O,WAAA,G,aAAA,EAEZ,EAGA,OAFA3V,EAAUsX,uBAAuB,CAAG/pB,EAAIwO,OAAO,CAC/CiE,EAAUuX,iBAAiB,CAAGhqB,EAAIiqB,KAAK,CACjCjqB,CACR,CACA,KAEF,KAAK,eAGHyS,EAAUkX,WAAW,CAAG,GAGxB7J,EAAU,IAAIvsB,MAAMjF,EAAKyuC,IACzB,KACF,KAAK,QAGHtqB,EAAUmX,kBAAkB,CAAG,GAC3BnX,EAAUgZ,kBAAkB,EAC9B3L,CAAAA,EAAU,IAAIvsB,MAAMjF,EAAK0uC,GAA4B,EACvD,KACF,SAEEld,EAAUmd,AAuN1B,SAA0Bnd,CAAoB,CAAErN,CAAoB,EAClE,IAAMyqB,EAAkB,CACtBtuC,IACE4E,CAAiC,CACjCC,CAAqB,CACrBC,CAAa,EAEb,OAAQD,GACN,IAAK,SACL,IAAK,eACL,IAAK,MACL,IAAK,OACL,IAAK,SACL,IAAK,WACL,IAAK,SAGH,OADA0pC,GAAa1qB,EADSL,GAAAA,oBAAAA,CAAAA,QAA6B,GACZ,CAAC,QAAQ,EAAE3e,EAAK,CAAC,EACjDE,GAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMC,EAE1C,KAAK,QACH,OACEF,CAAM,CAAC4pC,GAAe,EACrB5pC,CAAAA,CAAM,CAAC4pC,GAAe,CAAG,IACxB,IAAI7pC,MAAMC,EAAO+Q,KAAK,GAAI24B,EAAe,CAE/C,SACE,OAAOvpC,GAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMC,EAC5C,CACF,CACF,EAEM2pC,EAAsB,CAC1BzuC,IACE4E,CAAyC,CACzCC,CAAqB,EAErB,OAAQA,GACN,IAAK,UACH,OACED,CAAM,CAAC8pC,GAAc,EACpB9pC,CAAAA,CAAM,CAAC8pC,GAAc,CAAG,IAAI/pC,MAAMC,EAAO0nC,OAAO,CAAEgC,EAAe,CAEtE,KAAK,UACL,IAAK,UACL,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,cACL,IAAK,WAMH,OAJAC,GAAa1qB,EADSL,GAAAA,oBAAAA,CAAAA,QAA6B,GACZ,CAAC,QAAQ,EAAE3e,EAAK,CAAC,EAIjDE,GAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMD,EAE1C,KAAK,QACH,OACEA,CAAM,CAAC+pC,GAAmB,EACzB/pC,CAAAA,CAAM,CAAC+pC,GAAmB,CAAG,IAC5B,IAAIhqC,MAQFC,EAAO+Q,KAAK,GACZ84B,EAAmB,CAG3B,SAIE,OAAO1pC,GAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMD,EAC5C,CACF,CAGF,EAEA,OAAO,IAAID,MAAMusB,EAASud,EAC5B,EA7S2C/uC,EAAKmkB,EACpC,CAGA,IAAMza,EAAQwlC,AMxvBnB,SAAqCC,CAAoB,EAE9D,IAAIC,EAAS,OACT,CAACD,EAAanhC,QAAQ,CAACohC,IACzBA,CAAAA,EAAS,SAAQ,EAEnB,GAAM,EAAG,GAAGC,EAAM,CAAGF,EAAahmC,KAAK,CAACimC,GAKxC,MADiBE,AAHIF,CAAAA,CAAM,CAAC,EAAE,CAAGC,EAAMtpC,IAAI,CAACqpC,EAAM,EAGpBjmC,KAAK,CAAC,KAAKrF,KAAK,CAAC,EAAG,IAAIiC,IAAI,CAAC,IAE7D,EN4uBsD,IAAI,CAACq9B,gBAAgB,EAEzDmM,EAAS/2B,AAAAA,GAAAA,GAAAA,SAAAA,AAAAA,IAKf,OAFA+2B,EAAOC,oBAAoB,CAAC,aAAc9lC,GAEnC6lC,EAAO92B,KAAK,CACjBlC,GAAAA,UAAoC,CACpC,CACEmC,SAAU,CAAC,0BAA0B,EAAEhP,EAAM,CAAC,CAC9Cq8B,WAAY,CACV,aAAcr8B,CAChB,CACF,EACA,SACE,IAAI,CAAC46B,EAAE,CACL9b,EACA+b,EACApgB,EACAkQ,EACAmQ,EACAhT,EACA/V,GAGR,KAMN,GAAI,CAAEvE,CAAAA,aAAoBulB,QAAO,EAE/B,OAAO,IAAIA,SAAS,KAAM,CAAE5hB,OAAQ,GAAI,GAG1C,GAAI3D,EAAShX,OAAO,CAACM,GAAG,CAAC,wBACvB,MAAM,qBAEL,CAFK,AAAIlE,MACR,sIADI,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAGF,GAAI4a,AAA8C,MAA9CA,EAAShX,OAAO,CAACI,GAAG,CAAC,qBAEvB,MAAM,qBAEL,CAFK,AAAIhE,MACR,gLADI,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAGF,OAAO4a,CACT,CACF,CAEA,OAAegsB,GASR,SAASgB,GAAoBrN,CAA0B,QAG1DA,EAAAA,EAAS4Y,IAAI,IACb5Y,EAAS6Y,GAAG,IACZ7Y,EAAS8Y,MAAM,IACf9Y,EAAS+Y,KAAK,IACd/Y,EAASoN,OAAO,AAKpB,CAIA,IAAM+K,GAAgB7zC,OAAO,WACvB8zC,GAAqB9zC,OAAO,SAC5B2zC,GAAiB3zC,OAAO,SACxB00C,GAAqB10C,OAAO,gBAC5B20C,GAAa30C,OAAO,QACpB40C,GAAiB50C,OAAO,YACxB60C,GAAgB70C,OAAO,WACvB80C,GAAgB90C,OAAO,WAqBvBszC,GAA6B,CACjCnuC,IACE4E,CAAyC,CACzCC,CAAqB,CACrBC,CAAa,EAEb,OAAQD,GACN,IAAK,UACH,OACED,CAAM,CAAC8qC,GAAc,EACpB9qC,CAAAA,CAAM,CAAC8qC,GAAc,CAAG7vC,GAAAA,CAAAA,CAAAA,IAAmB,CAAC,IAAI6E,QAAQ,CAAC,GAAE,CAEhE,KAAK,UACH,OACEE,CAAM,CAAC+qC,GAAc,EACpB/qC,CAAAA,CAAM,CAAC+qC,GAAc,CAAGpd,GAAAA,IAA0B,CACjD,IAAI3wB,GAAAA,cAAcA,CAAC,IAAI8C,QAAQ,CAAC,IAAG,CAGzC,KAAK,UACH,OACEE,CAAM,CAAC8pC,GAAc,EACpB9pC,CAAAA,CAAM,CAAC8pC,GAAc,CAAG,IAAI/pC,MAC3BC,EAAO0nC,OAAO,CACdsD,GAA0B,CAGhC,KAAK,MAIH,OAAO9qC,EAASwnC,OAAO,CAACzkC,IAAI,AAC9B,KAAK,MACL,IAAK,KACH,MACF,KAAK,QACH,OACEjD,CAAM,CAAC+pC,GAAmB,EACzB/pC,CAAAA,CAAM,CAAC+pC,GAAmB,CAAG,IAC5B,IAAIhqC,MAQFC,EAAO+Q,KAAK,GACZw4B,GAA0B,CAGlC,SACE,OAAOppC,GAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMC,EAC5C,CACF,CAGF,EAEM8qC,GAA6B,CACjC5vC,IACE4E,CAAiC,CACjCC,CAAqB,CACrBC,CAAa,EAEb,OAAQD,GAEN,IAAK,SACH,MAAO,EACT,KAAK,eACH,OACED,CAAM,CAAC2qC,GAAmB,EACzB3qC,CAAAA,CAAM,CAAC2qC,GAAmB,CAAG,IAAIzf,eAAgB,CAEtD,KAAK,OACH,OACElrB,CAAM,CAAC4qC,GAAW,EACjB5qC,CAAAA,CAAM,CAAC4qC,GAAW,CAAGK,AO/6BzB,SAAkB5oC,CAAiB,EACxC,IAAM6oC,EAAI,IAAIzoC,IAAIJ,GAIlB,OAHA6oC,EAAEhoC,IAAI,CAAG,iBACTgoC,EAAEnoC,MAAM,CAAG,GACXmoC,EAAE7nC,QAAQ,CAAG,OACN6nC,CACT,EPy6ByClrC,EAAOiD,IAAI,EAAEA,IAAG,CAEnD,KAAK,SACL,IAAK,WACH,OACEjD,CAAM,CAAC6qC,GAAe,EACrB7qC,CAAAA,CAAM,CAAC6qC,GAAe,CAAG,IAAM3qC,EAAS+C,IAAG,CAIhD,KAAK,MAIH,MACF,KAAK,QACH,OACEjD,CAAM,CAAC4pC,GAAe,EACrB5pC,CAAAA,CAAM,CAAC4pC,GAAe,CAAG,IACxB,IAAI7pC,MAAMC,EAAO+Q,KAAK,GAAIi6B,GAA0B,CAE1D,SACE,OAAO7qC,GAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMC,EAC5C,CACF,CACF,EA0FMspC,GAA+B,CACnCpuC,IACE4E,CAAyC,CACzCC,CAAqB,CACrBC,CAAa,EAEb,OAAQD,GACN,IAAK,UACH,OACED,CAAM,CAAC8pC,GAAc,EACpB9pC,CAAAA,CAAM,CAAC8pC,GAAc,CAAG,IAAI/pC,MAC3BC,EAAO0nC,OAAO,CACdyD,GAA4B,CAGlC,KAAK,UACL,IAAK,UACL,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,cACL,IAAK,WACH,MAAM,qBAEL,CAFK,IAAIpW,GACR,CAAC,MAAM,EAAE/0B,EAAO0nC,OAAO,CAAC1kC,QAAQ,CAAC,sFAAsF,EAAE/C,EAAK,GAAG,CAAC,EAD9H,qB,MAAA,O,WAAA,G,aAAA,EAEN,EACF,KAAK,QACH,OACED,CAAM,CAAC+pC,GAAmB,EACzB/pC,CAAAA,CAAM,CAAC+pC,GAAmB,CAAG,IAC5B,IAAIhqC,MAQFC,EAAO+Q,KAAK,GACZy4B,GAA4B,CAGpC,SACE,OAAOrpC,GAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMC,EAC5C,CACF,CAGF,EAEMirC,GAA+B,CACnC/vC,IACE4E,CAAiC,CACjCC,CAAqB,CACrBC,CAAa,EAEb,OAAQD,GACN,IAAK,SACL,IAAK,eACL,IAAK,MACL,IAAK,OACL,IAAK,SACL,IAAK,WACL,IAAK,SACH,MAAM,qBAEL,CAFK,IAAI80B,GACR,CAAC,MAAM,EAAE/0B,EAAOgD,QAAQ,CAAC,sFAAsF,EAAE/C,EAAK,GAAG,CAAC,EADtH,qB,MAAA,O,WAAA,G,aAAA,EAEN,EACF,KAAK,QACH,OACED,CAAM,CAAC4pC,GAAe,EACrB5pC,CAAAA,CAAM,CAAC4pC,GAAe,CAAG,IACxB,IAAI7pC,MAAMC,EAAO+Q,KAAK,GAAIo6B,GAA4B,CAE5D,SACE,OAAOhrC,GAAAA,CAAAA,CAAAA,GAAkB,CAACH,EAAQC,EAAMC,EAC5C,CACF,CACF,EAEA,SAASsmC,GAAqBhiC,CAAa,EACzC,OAAO,qBAEN,CAFM,IAAIowB,GACT,CAAC,MAAM,EAAEpwB,EAAM,wIAAwI,CAAC,EADnJ,qB,MAAA,O,WAAA,G,aAAA,EAEP,EACF,CAEA,SAASmlC,GACP/Y,CAAgB,CAChBjS,CAAwC,CACxCuW,CAAkB,EAElB,GAAIvW,EACF,IAAIA,AAAuB,UAAvBA,EAAcb,IAAI,CACpB,MAAM,qBAEL,CAFK,AAAI1mB,MACR,CAAC,MAAM,EAAEw5B,EAAMpsB,KAAK,CAAC,OAAO,EAAE0wB,EAAW,gJAAgJ,EAAEA,EAAW,qKAAqK,CAAC,EADxW,qB,MAAA,O,WAAA,G,aAAA,EAEN,QACK,GAAIvW,AAAuB,mBAAvBA,EAAcb,IAAI,CAC3B,MAAM,qBAEL,CAFK,AAAI1mB,MACR,CAAC,MAAM,EAAEw5B,EAAMpsB,KAAK,CAAC,OAAO,EAAE0wB,EAAW,iLAAiL,EAAEA,EAAW,6KAA6K,CAAC,EADjZ,qB,MAAA,O,WAAA,G,aAAA,EAEN,EACF,CAGF,GAAItE,EAAMwF,kBAAkB,CAC1B,MAAM,qBAEL,CAFK,IAAIrB,GACR,CAAC,MAAM,EAAEnE,EAAMpsB,KAAK,CAAC,8EAA8E,EAAE0wB,EAAW,4HAA4H,CAAC,EADzO,qB,MAAA,O,WAAA,G,aAAA,EAEN,GAGF,GAAIvW,EACF,IAAIA,AAAuB,cAAvBA,EAAcb,IAAI,CAAkB,CAEtC,IAAMhG,EAAQ,qBAEb,CAFa,AAAI1gB,MAChB,CAAC,MAAM,EAAEw5B,EAAMpsB,KAAK,CAAC,MAAM,EAAE0wB,EAAW,+HAA+H,CAAC,EAD5J,qB,MAAA,O,WAAA,G,aAAA,EAEd,IACAkW,ApBj2BC,SACL5mC,CAAa,CACb0wB,CAAkB,CAClBmW,CAAqB,CACrB1U,CAAoC,EAGpC,GAAI2U,AAA4B,KAA5BA,AADoB3U,EAAelpB,UAAU,CAACW,MAAM,CACpCK,OAAO,CAAY,CA7DvC,IAAMqJ,EAAQmf,GAFC,CAAC,MAAM,EAqEgBzyB,EArER,iEAAiE,EAqElD0wB,EArE+D,CAAC,CAAC,EAI9GyB,AAiEyDA,EAjE1ClpB,UAAU,CAAC2E,KAAK,CAAC0F,GAEhC,IAAMwe,EAAkBK,AA+DiCA,EA/DlBL,eAAe,AAClDA,CAAAA,GACFA,EAAgBP,eAAe,CAAC90B,IAAI,CAAC,CAGnCw1B,MAAOH,EAAgBR,sBAAsB,CACzC,AAAI1+B,QAAQq/B,KAAK,CACjBj6B,OACJ04B,WAuDyCA,CAtD3C,GA2DA,IAAMoB,EAAkBK,EAAeL,eAAe,AAClDA,CAAAA,GACEA,AAA8C,OAA9CA,EAAgBN,yBAAyB,EAC3CM,CAAAA,EAAgBN,yBAAyB,CAAGqV,CAAa,CAG/D,CACA,MAAMpU,GACJ,CAAC,MAAM,EAAEzyB,EAAM,iEAAiE,EAAE0wB,EAAW,CAAC,CAAC,CAEnG,EoBs0BQtE,EAAMpsB,KAAK,CACX0wB,EACApd,EACA6G,EAEJ,MAAO,GAAIA,AAAuB,kBAAvBA,EAAcb,IAAI,CAE3BuY,GACEzF,EAAMpsB,KAAK,CACX0wB,EACAvW,EAAc2X,eAAe,OAE1B,GAAI3X,AAAuB,qBAAvBA,EAAcb,IAAI,CAAyB,CAEpDa,EAAchH,UAAU,CAAG,EAE3B,IAAMnL,EAAM,qBAEX,CAFW,IAAIooB,GACd,CAAC,MAAM,EAAEhE,EAAMpsB,KAAK,CAAC,mDAAmD,EAAE0wB,EAAW,6EAA6E,CAAC,EADzJ,qB,MAAA,O,WAAA,G,aAAA,EAEZ,EAIA,OAHAtE,EAAM2F,uBAAuB,CAAGrB,EAChCtE,EAAM4F,iBAAiB,CAAGhqB,EAAIiqB,KAAK,CAE7BjqB,CACR,CAIG,CAIP,C","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135]}