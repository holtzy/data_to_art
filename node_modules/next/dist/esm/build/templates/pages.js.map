{"version":3,"sources":["../../../src/build/templates/pages.ts"],"sourcesContent":["import type { IncomingMessage, ServerResponse } from 'node:http'\nimport type { ParsedUrlQuery } from 'node:querystring'\nimport { PagesRouteModule } from '../../server/route-modules/pages/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { BaseServerSpan } from '../../server/lib/trace/constants'\nimport { getTracer, SpanKind, type Span } from '../../server/lib/trace/tracer'\nimport { formatUrl } from '../../shared/lib/router/utils/format-url'\nimport { addRequestMeta, getRequestMeta } from '../../server/request-meta'\nimport { interopDefault } from '../../server/app-render/interop-default'\nimport { getRevalidateReason } from '../../server/instrumentation/utils'\nimport { normalizeDataPath } from '../../shared/lib/page-path/normalize-data-path'\nimport {\n  CachedRouteKind,\n  type CachedPageValue,\n  type CachedRedirectValue,\n  type ResponseCacheEntry,\n  type ResponseGenerator,\n} from '../../server/response-cache'\n\nimport { hoist } from './helpers'\n\n// Import the app and document modules.\nimport * as document from 'VAR_MODULE_DOCUMENT'\nimport * as app from 'VAR_MODULE_APP'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\nimport {\n  getCacheControlHeader,\n  type CacheControl,\n} from '../../server/lib/cache-control'\nimport { normalizeRepeatedSlashes } from '../../shared/lib/utils'\nimport { getRedirectStatus } from '../../lib/redirect-status'\nimport { CACHE_ONE_YEAR } from '../../lib/constants'\nimport { sendRenderResult } from '../../server/send-payload'\nimport RenderResult from '../../server/render-result'\nimport { toResponseCacheEntry } from '../../server/response-cache/utils'\nimport { NoFallbackError } from '../../shared/lib/no-fallback-error.external'\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code'\nimport { isBot } from '../../shared/lib/router/utils/is-bot'\nimport { addPathPrefix } from '../../shared/lib/router/utils/add-path-prefix'\nimport { removeTrailingSlash } from '../../shared/lib/router/utils/remove-trailing-slash'\n\n// Re-export the component (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export methods.\nexport const getStaticProps = hoist(userland, 'getStaticProps')\nexport const getStaticPaths = hoist(userland, 'getStaticPaths')\nexport const getServerSideProps = hoist(userland, 'getServerSideProps')\nexport const config = hoist(userland, 'config')\nexport const reportWebVitals = hoist(userland, 'reportWebVitals')\n\n// Re-export legacy methods.\nexport const unstable_getStaticProps = hoist(\n  userland,\n  'unstable_getStaticProps'\n)\nexport const unstable_getStaticPaths = hoist(\n  userland,\n  'unstable_getStaticPaths'\n)\nexport const unstable_getStaticParams = hoist(\n  userland,\n  'unstable_getStaticParams'\n)\nexport const unstable_getServerProps = hoist(\n  userland,\n  'unstable_getServerProps'\n)\nexport const unstable_getServerSideProps = hoist(\n  userland,\n  'unstable_getServerSideProps'\n)\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesRouteModule({\n  definition: {\n    kind: RouteKind.PAGES,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n  projectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n  components: {\n    // default export might not exist when optimized for data only\n    App: app.default,\n    Document: document.default,\n  },\n  userland,\n})\n\nexport async function handler(\n  req: IncomingMessage,\n  res: ServerResponse,\n  ctx: {\n    waitUntil: (prom: Promise<void>) => void\n  }\n): Promise<void> {\n  let srcPage = 'VAR_DEFINITION_PAGE'\n\n  // turbopack doesn't normalize `/index` in the page name\n  // so we need to to process dynamic routes properly\n  // TODO: fix turbopack providing differing value from webpack\n  if (process.env.TURBOPACK) {\n    srcPage = srcPage.replace(/\\/index$/, '') || '/'\n  } else if (srcPage === '/index') {\n    // we always normalize /index specifically\n    srcPage = '/'\n  }\n  const multiZoneDraftMode = process.env\n    .__NEXT_MULTI_ZONE_DRAFT_MODE as any as boolean\n\n  const prepareResult = await routeModule.prepare(req, res, {\n    srcPage,\n    multiZoneDraftMode,\n  })\n\n  if (!prepareResult) {\n    res.statusCode = 400\n    res.end('Bad Request')\n    ctx.waitUntil?.(Promise.resolve())\n    return\n  }\n\n  const {\n    buildId,\n    query,\n    params,\n    parsedUrl,\n    originalQuery,\n    originalPathname,\n    buildManifest,\n    nextFontManifest,\n    serverFilesManifest,\n    reactLoadableManifest,\n    prerenderManifest,\n    isDraftMode,\n    isOnDemandRevalidate,\n    revalidateOnlyGenerated,\n    locale,\n    locales,\n    defaultLocale,\n    routerServerContext,\n    nextConfig,\n    resolvedPathname,\n  } = prepareResult\n\n  const isExperimentalCompile =\n    serverFilesManifest?.config?.experimental?.isExperimentalCompile\n\n  const hasServerProps = Boolean(getServerSideProps)\n  const hasStaticProps = Boolean(getStaticProps)\n  const hasStaticPaths = Boolean(getStaticPaths)\n  const hasGetInitialProps = Boolean(\n    (userland.default || userland).getInitialProps\n  )\n  const isAmp = query.amp && config.amp\n  let cacheKey: null | string = null\n  let isIsrFallback = false\n  let isNextDataRequest =\n    prepareResult.isNextDataRequest && (hasStaticProps || hasServerProps)\n\n  const is404Page = srcPage === '/404'\n  const is500Page = srcPage === '/500'\n  const isErrorPage = srcPage === '/_error'\n\n  if (!routeModule.isDev && !isDraftMode && hasStaticProps) {\n    cacheKey = `${locale ? `/${locale}` : ''}${\n      (srcPage === '/' || resolvedPathname === '/') && locale\n        ? ''\n        : resolvedPathname\n    }${isAmp ? '.amp' : ''}`\n\n    if (is404Page || is500Page || isErrorPage) {\n      cacheKey = `${locale ? `/${locale}` : ''}${srcPage}${isAmp ? '.amp' : ''}`\n    }\n\n    // ensure /index and / is normalized to one key\n    cacheKey = cacheKey === '/index' ? '/' : cacheKey\n  }\n\n  if (hasStaticPaths && !isDraftMode) {\n    const decodedPathname = removeTrailingSlash(\n      locale ? addPathPrefix(resolvedPathname, `/${locale}`) : resolvedPathname\n    )\n    const isPrerendered =\n      Boolean(prerenderManifest.routes[decodedPathname]) ||\n      prerenderManifest.notFoundRoutes.includes(decodedPathname)\n\n    const prerenderInfo = prerenderManifest.dynamicRoutes[srcPage]\n\n    if (prerenderInfo) {\n      if (prerenderInfo.fallback === false && !isPrerendered) {\n        throw new NoFallbackError()\n      }\n\n      if (\n        typeof prerenderInfo.fallback === 'string' &&\n        !isPrerendered &&\n        !isNextDataRequest\n      ) {\n        isIsrFallback = true\n      }\n    }\n  }\n\n  // When serving a bot request, we want to serve a blocking render and not\n  // the prerendered page. This ensures that the correct content is served\n  // to the bot in the head.\n  if (\n    (isIsrFallback && isBot(req.headers['user-agent'] || '')) ||\n    getRequestMeta(req, 'minimalMode')\n  ) {\n    isIsrFallback = false\n  }\n\n  const tracer = getTracer()\n  const activeSpan = tracer.getActiveScopeSpan()\n\n  try {\n    const method = req.method || 'GET'\n\n    const resolvedUrl = formatUrl({\n      pathname: nextConfig.trailingSlash\n        ? parsedUrl.pathname\n        : removeTrailingSlash(parsedUrl.pathname || '/'),\n      // make sure to only add query values from original URL\n      query: hasStaticProps ? {} : originalQuery,\n    })\n\n    const publicRuntimeConfig: Record<string, string> =\n      routerServerContext?.publicRuntimeConfig || nextConfig.publicRuntimeConfig\n\n    const handleResponse = async (span?: Span) => {\n      const responseGenerator: ResponseGenerator = async ({\n        previousCacheEntry,\n      }) => {\n        const doRender = async () => {\n          try {\n            return await routeModule\n              .render(req, res, {\n                query:\n                  hasStaticProps && !isExperimentalCompile\n                    ? ({\n                        ...params,\n                        ...(isAmp\n                          ? {\n                              amp: query.amp,\n                            }\n                          : {}),\n                      } as ParsedUrlQuery)\n                    : {\n                        ...query,\n                        ...params,\n                      },\n                params,\n                page: srcPage,\n                renderContext: {\n                  isDraftMode,\n                  isFallback: isIsrFallback,\n                  developmentNotFoundSourcePage: getRequestMeta(\n                    req,\n                    'developmentNotFoundSourcePage'\n                  ),\n                },\n                sharedContext: {\n                  buildId,\n                  customServer:\n                    Boolean(routerServerContext?.isCustomServer) || undefined,\n                  deploymentId: process.env.NEXT_DEPLOYMENT_ID,\n                },\n                renderOpts: {\n                  params,\n                  routeModule,\n                  page: srcPage,\n                  pageConfig: config || {},\n                  Component: interopDefault(userland),\n                  ComponentMod: userland,\n                  getStaticProps,\n                  getStaticPaths,\n                  getServerSideProps,\n                  supportsDynamicResponse: !hasStaticProps,\n                  buildManifest,\n                  nextFontManifest,\n                  reactLoadableManifest,\n\n                  assetPrefix: nextConfig.assetPrefix,\n                  strictNextHead:\n                    nextConfig.experimental.strictNextHead ?? true,\n                  previewProps: prerenderManifest.preview,\n                  images: nextConfig.images as any,\n                  nextConfigOutput: nextConfig.output,\n                  optimizeCss: Boolean(nextConfig.experimental.optimizeCss),\n                  nextScriptWorkers: Boolean(\n                    nextConfig.experimental.nextScriptWorkers\n                  ),\n                  domainLocales: nextConfig.i18n?.domains,\n                  crossOrigin: nextConfig.crossOrigin,\n\n                  multiZoneDraftMode,\n                  basePath: nextConfig.basePath,\n                  canonicalBase: nextConfig.amp.canonicalBase || '',\n                  ampOptimizerConfig: nextConfig.experimental.amp?.optimizer,\n                  disableOptimizedLoading:\n                    nextConfig.experimental.disableOptimizedLoading,\n                  largePageDataBytes:\n                    nextConfig.experimental.largePageDataBytes,\n                  // Only the `publicRuntimeConfig` key is exposed to the client side\n                  // It'll be rendered as part of __NEXT_DATA__ on the client side\n                  runtimeConfig:\n                    Object.keys(publicRuntimeConfig).length > 0\n                      ? publicRuntimeConfig\n                      : undefined,\n\n                  isExperimentalCompile,\n\n                  experimental: {\n                    clientTraceMetadata:\n                      nextConfig.experimental.clientTraceMetadata ||\n                      ([] as any),\n                  },\n\n                  locale,\n                  locales,\n                  defaultLocale,\n                  setIsrStatus: routerServerContext?.setIsrStatus,\n\n                  isNextDataRequest:\n                    isNextDataRequest && (hasServerProps || hasStaticProps),\n\n                  resolvedUrl,\n                  // For getServerSideProps and getInitialProps we need to ensure we use the original URL\n                  // and not the resolved URL to prevent a hydration mismatch on\n                  // asPath\n                  resolvedAsPath:\n                    hasServerProps || hasGetInitialProps\n                      ? formatUrl({\n                          // we use the original URL pathname less the _next/data prefix if\n                          // present\n                          pathname: isNextDataRequest\n                            ? normalizeDataPath(originalPathname)\n                            : originalPathname,\n                          query: originalQuery,\n                        })\n                      : resolvedUrl,\n\n                  isOnDemandRevalidate,\n\n                  ErrorDebug: getRequestMeta(req, 'PagesErrorDebug'),\n                  err: getRequestMeta(req, 'invokeError'),\n                  dev: routeModule.isDev,\n\n                  // needed for experimental.optimizeCss feature\n                  distDir: `${routeModule.projectDir}/${routeModule.distDir}`,\n\n                  ampSkipValidation:\n                    nextConfig.experimental.amp?.skipValidation,\n                  ampValidator: getRequestMeta(req, 'ampValidator'),\n                },\n              })\n              .then((renderResult): ResponseCacheEntry => {\n                const { metadata } = renderResult\n\n                let cacheControl: CacheControl | undefined =\n                  metadata.cacheControl\n\n                if ('isNotFound' in metadata && metadata.isNotFound) {\n                  return {\n                    value: null,\n                    cacheControl,\n                  } satisfies ResponseCacheEntry\n                }\n\n                // Handle `isRedirect`.\n                if (metadata.isRedirect) {\n                  return {\n                    value: {\n                      kind: CachedRouteKind.REDIRECT,\n                      props: metadata.pageData ?? metadata.flightData,\n                    } satisfies CachedRedirectValue,\n                    cacheControl,\n                  } satisfies ResponseCacheEntry\n                }\n\n                return {\n                  value: {\n                    kind: CachedRouteKind.PAGES,\n                    html: renderResult,\n                    pageData: renderResult.metadata.pageData,\n                    headers: renderResult.metadata.headers,\n                    status: renderResult.metadata.statusCode,\n                  },\n                  cacheControl,\n                }\n              })\n              .finally(() => {\n                if (!span) return\n\n                span.setAttributes({\n                  'http.status_code': res.statusCode,\n                  'next.rsc': false,\n                })\n\n                const rootSpanAttributes = tracer.getRootSpanAttributes()\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                  return\n                }\n\n                if (\n                  rootSpanAttributes.get('next.span_type') !==\n                  BaseServerSpan.handleRequest\n                ) {\n                  console.warn(\n                    `Unexpected root span type '${rootSpanAttributes.get(\n                      'next.span_type'\n                    )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n                  )\n                  return\n                }\n\n                const route = rootSpanAttributes.get('next.route')\n                if (route) {\n                  const name = `${method} ${route}`\n\n                  span.setAttributes({\n                    'next.route': route,\n                    'http.route': route,\n                    'next.span_name': name,\n                  })\n                  span.updateName(name)\n                } else {\n                  span.updateName(`${method} ${req.url}`)\n                }\n              })\n          } catch (err: unknown) {\n            // if this is a background revalidate we need to report\n            // the request error here as it won't be bubbled\n            if (previousCacheEntry?.isStale) {\n              await routeModule.onRequestError(\n                req,\n                err,\n                {\n                  routerKind: 'Pages Router',\n                  routePath: srcPage,\n                  routeType: 'render',\n                  revalidateReason: getRevalidateReason({\n                    isRevalidate: hasStaticProps,\n                    isOnDemandRevalidate,\n                  }),\n                },\n                routerServerContext\n              )\n            }\n            throw err\n          }\n        }\n\n        // if we've already generated this page we no longer\n        // serve the fallback\n        if (previousCacheEntry) {\n          isIsrFallback = false\n        }\n\n        if (isIsrFallback) {\n          const fallbackResponse = await routeModule.getResponseCache(req).get(\n            routeModule.isDev\n              ? null\n              : locale\n                ? `/${locale}${srcPage}`\n                : srcPage,\n            async ({\n              previousCacheEntry: previousFallbackCacheEntry = null,\n            }) => {\n              if (!routeModule.isDev) {\n                return toResponseCacheEntry(previousFallbackCacheEntry)\n              }\n              return doRender()\n            },\n            {\n              routeKind: RouteKind.PAGES,\n              isFallback: true,\n              isRoutePPREnabled: false,\n              isOnDemandRevalidate: false,\n              incrementalCache: await routeModule.getIncrementalCache(\n                req,\n                nextConfig,\n                prerenderManifest\n              ),\n              waitUntil: ctx.waitUntil,\n            }\n          )\n          if (fallbackResponse) {\n            // Remove the cache control from the response to prevent it from being\n            // used in the surrounding cache.\n            delete fallbackResponse.cacheControl\n            fallbackResponse.isMiss = true\n            return fallbackResponse\n          }\n        }\n\n        if (\n          !getRequestMeta(req, 'minimalMode') &&\n          isOnDemandRevalidate &&\n          revalidateOnlyGenerated &&\n          !previousCacheEntry\n        ) {\n          res.statusCode = 404\n          // on-demand revalidate always sets this header\n          res.setHeader('x-nextjs-cache', 'REVALIDATED')\n          res.end('This page could not be found')\n          return null\n        }\n\n        if (\n          isIsrFallback &&\n          previousCacheEntry?.value?.kind === CachedRouteKind.PAGES\n        ) {\n          return {\n            value: {\n              kind: CachedRouteKind.PAGES,\n              html: new RenderResult(\n                Buffer.from(previousCacheEntry.value.html),\n                {\n                  contentType: 'text/html;utf-8',\n                  metadata: {\n                    statusCode: previousCacheEntry.value.status,\n                    headers: previousCacheEntry.value.headers,\n                  },\n                }\n              ),\n              pageData: {},\n              status: previousCacheEntry.value.status,\n              headers: previousCacheEntry.value.headers,\n            } satisfies CachedPageValue,\n            cacheControl: { revalidate: 0, expire: undefined },\n          } satisfies ResponseCacheEntry\n        }\n        return doRender()\n      }\n\n      const result = await routeModule.handleResponse({\n        cacheKey,\n        req,\n        nextConfig,\n        routeKind: RouteKind.PAGES,\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated,\n        waitUntil: ctx.waitUntil,\n        responseGenerator: responseGenerator,\n        prerenderManifest,\n      })\n\n      // if we got a cache hit this wasn't an ISR fallback\n      // but it wasn't generated during build so isn't in the\n      // prerender-manifest\n      if (isIsrFallback && !result?.isMiss) {\n        isIsrFallback = false\n      }\n\n      // response is finished is no cache entry\n      if (!result) {\n        return\n      }\n\n      if (hasStaticProps && !getRequestMeta(req, 'minimalMode')) {\n        res.setHeader(\n          'x-nextjs-cache',\n          isOnDemandRevalidate\n            ? 'REVALIDATED'\n            : result.isMiss\n              ? 'MISS'\n              : result.isStale\n                ? 'STALE'\n                : 'HIT'\n        )\n      }\n\n      let cacheControl: CacheControl | undefined\n\n      if (!hasStaticProps || isIsrFallback) {\n        if (!res.getHeader('Cache-Control')) {\n          cacheControl = { revalidate: 0, expire: undefined }\n        }\n      } else if (is404Page) {\n        const notFoundRevalidate = getRequestMeta(req, 'notFoundRevalidate')\n\n        cacheControl = {\n          revalidate:\n            typeof notFoundRevalidate === 'undefined' ? 0 : notFoundRevalidate,\n          expire: undefined,\n        }\n      } else if (is500Page) {\n        cacheControl = { revalidate: 0, expire: undefined }\n      } else if (result.cacheControl) {\n        // If the cache entry has a cache control with a revalidate value that's\n        // a number, use it.\n        if (typeof result.cacheControl.revalidate === 'number') {\n          if (result.cacheControl.revalidate < 1) {\n            throw new Error(\n              `Invalid revalidate configuration provided: ${result.cacheControl.revalidate} < 1`\n            )\n          }\n          cacheControl = {\n            revalidate: result.cacheControl.revalidate,\n            expire: result.cacheControl?.expire ?? nextConfig.expireTime,\n          }\n        } else {\n          // revalidate: false\n          cacheControl = {\n            revalidate: CACHE_ONE_YEAR,\n            expire: undefined,\n          }\n        }\n      }\n\n      // If cache control is already set on the response we don't\n      // override it to allow users to customize it via next.config\n      if (cacheControl && !res.getHeader('Cache-Control')) {\n        res.setHeader('Cache-Control', getCacheControlHeader(cacheControl))\n      }\n\n      // notFound: true case\n      if (!result.value) {\n        // add revalidate metadata before rendering 404 page\n        // so that we can use this as source of truth for the\n        // cache-control header instead of what the 404 page returns\n        // for the revalidate value\n        addRequestMeta(\n          req,\n          'notFoundRevalidate',\n          result.cacheControl?.revalidate\n        )\n\n        res.statusCode = 404\n\n        if (isNextDataRequest) {\n          res.end('{\"notFound\":true}')\n          return\n        }\n        // TODO: should route-module itself handle rendering the 404\n        if (routerServerContext?.render404) {\n          await routerServerContext.render404(req, res, parsedUrl, false)\n        } else {\n          res.end('This page could not be found')\n        }\n        return\n      }\n\n      if (result.value.kind === CachedRouteKind.REDIRECT) {\n        if (isNextDataRequest) {\n          res.setHeader('content-type', 'application/json')\n          res.end(JSON.stringify(result.value.props))\n          return\n        } else {\n          const handleRedirect = (pageData: any) => {\n            const redirect = {\n              destination: pageData.pageProps.__N_REDIRECT,\n              statusCode: pageData.pageProps.__N_REDIRECT_STATUS,\n              basePath: pageData.pageProps.__N_REDIRECT_BASE_PATH,\n            }\n            const statusCode = getRedirectStatus(redirect)\n            const { basePath } = nextConfig\n\n            if (\n              basePath &&\n              redirect.basePath !== false &&\n              redirect.destination.startsWith('/')\n            ) {\n              redirect.destination = `${basePath}${redirect.destination}`\n            }\n\n            if (redirect.destination.startsWith('/')) {\n              redirect.destination = normalizeRepeatedSlashes(\n                redirect.destination\n              )\n            }\n\n            res.statusCode = statusCode\n            res.setHeader('Location', redirect.destination)\n            if (statusCode === RedirectStatusCode.PermanentRedirect) {\n              res.setHeader('Refresh', `0;url=${redirect.destination}`)\n            }\n            res.end(redirect.destination)\n          }\n          await handleRedirect(result.value.props)\n          return null\n        }\n      }\n\n      if (result.value.kind !== CachedRouteKind.PAGES) {\n        throw new Error(\n          `Invariant: received non-pages cache entry in pages handler`\n        )\n      }\n\n      // In dev, we should not cache pages for any reason.\n      if (routeModule.isDev) {\n        res.setHeader('Cache-Control', 'no-store, must-revalidate')\n      }\n\n      // Draft mode should never be cached\n      if (isDraftMode) {\n        res.setHeader(\n          'Cache-Control',\n          'private, no-cache, no-store, max-age=0, must-revalidate'\n        )\n      }\n\n      // when invoking _error before pages/500 we don't actually\n      // send the _error response\n      if (\n        getRequestMeta(req, 'customErrorRender') ||\n        (isErrorPage &&\n          getRequestMeta(req, 'minimalMode') &&\n          res.statusCode === 500)\n      ) {\n        return null\n      }\n\n      await sendRenderResult({\n        req,\n        res,\n        // If we are rendering the error page it's not a data request\n        // anymore\n        result:\n          isNextDataRequest && !isErrorPage && !is500Page\n            ? new RenderResult(\n                Buffer.from(JSON.stringify(result.value.pageData)),\n                {\n                  contentType: 'application/json',\n                  metadata: result.value.html.metadata,\n                }\n              )\n            : result.value.html,\n        generateEtags: nextConfig.generateEtags,\n        poweredByHeader: nextConfig.poweredByHeader,\n        cacheControl: routeModule.isDev ? undefined : cacheControl,\n        type: isNextDataRequest ? 'json' : 'html',\n      })\n    }\n\n    // TODO: activeSpan code path is for when wrapped by\n    // next-server can be removed when this is no longer used\n    if (activeSpan) {\n      await handleResponse()\n    } else {\n      await tracer.withPropagatedContext(req.headers, () =>\n        tracer.trace(\n          BaseServerSpan.handleRequest,\n          {\n            spanName: `${method} ${req.url}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n              'http.method': method,\n              'http.target': req.url,\n            },\n          },\n          handleResponse\n        )\n      )\n    }\n  } catch (err) {\n    if (!(err instanceof NoFallbackError)) {\n      await routeModule.onRequestError(\n        req,\n        err,\n        {\n          routerKind: 'Pages Router',\n          routePath: srcPage,\n          routeType: 'render',\n          revalidateReason: getRevalidateReason({\n            isRevalidate: hasStaticProps,\n            isOnDemandRevalidate,\n          }),\n        },\n        routerServerContext\n      )\n    }\n    // rethrow so that we can handle serving error page\n    throw err\n  }\n}\n"],"names":["PagesRouteModule","RouteKind","BaseServerSpan","getTracer","SpanKind","formatUrl","addRequestMeta","getRequestMeta","interopDefault","getRevalidateReason","normalizeDataPath","CachedRouteKind","hoist","document","app","userland","getCacheControlHeader","normalizeRepeatedSlashes","getRedirectStatus","CACHE_ONE_YEAR","sendRenderResult","RenderResult","toResponseCacheEntry","NoFallbackError","RedirectStatusCode","isBot","addPathPrefix","removeTrailingSlash","getStaticProps","getStaticPaths","getServerSideProps","config","reportWebVitals","unstable_getStaticProps","unstable_getStaticPaths","unstable_getStaticParams","unstable_getServerProps","unstable_getServerSideProps","routeModule","definition","kind","PAGES","page","pathname","bundlePath","filename","distDir","process","env","__NEXT_RELATIVE_DIST_DIR","projectDir","__NEXT_RELATIVE_PROJECT_DIR","components","App","default","Document","handler","req","res","ctx","serverFilesManifest","srcPage","TURBOPACK","replace","multiZoneDraftMode","__NEXT_MULTI_ZONE_DRAFT_MODE","prepareResult","prepare","statusCode","end","waitUntil","Promise","resolve","buildId","query","params","parsedUrl","originalQuery","originalPathname","buildManifest","nextFontManifest","reactLoadableManifest","prerenderManifest","isDraftMode","isOnDemandRevalidate","revalidateOnlyGenerated","locale","locales","defaultLocale","routerServerContext","nextConfig","resolvedPathname","isExperimentalCompile","experimental","hasServerProps","Boolean","hasStaticProps","hasStaticPaths","hasGetInitialProps","getInitialProps","isAmp","amp","cacheKey","isIsrFallback","isNextDataRequest","is404Page","is500Page","isErrorPage","isDev","decodedPathname","isPrerendered","routes","notFoundRoutes","includes","prerenderInfo","dynamicRoutes","fallback","headers","tracer","activeSpan","getActiveScopeSpan","method","resolvedUrl","trailingSlash","publicRuntimeConfig","handleResponse","span","responseGenerator","previousCacheEntry","doRender","render","renderContext","isFallback","developmentNotFoundSourcePage","sharedContext","customServer","isCustomServer","undefined","deploymentId","NEXT_DEPLOYMENT_ID","renderOpts","pageConfig","Component","ComponentMod","supportsDynamicResponse","assetPrefix","strictNextHead","previewProps","preview","images","nextConfigOutput","output","optimizeCss","nextScriptWorkers","domainLocales","i18n","domains","crossOrigin","basePath","canonicalBase","ampOptimizerConfig","optimizer","disableOptimizedLoading","largePageDataBytes","runtimeConfig","Object","keys","length","clientTraceMetadata","setIsrStatus","resolvedAsPath","ErrorDebug","err","dev","ampSkipValidation","skipValidation","ampValidator","then","renderResult","metadata","cacheControl","isNotFound","value","isRedirect","REDIRECT","props","pageData","flightData","html","status","finally","setAttributes","rootSpanAttributes","getRootSpanAttributes","get","handleRequest","console","warn","route","name","updateName","url","isStale","onRequestError","routerKind","routePath","routeType","revalidateReason","isRevalidate","fallbackResponse","getResponseCache","previousFallbackCacheEntry","routeKind","isRoutePPREnabled","incrementalCache","getIncrementalCache","isMiss","setHeader","Buffer","from","contentType","revalidate","expire","result","getHeader","notFoundRevalidate","Error","expireTime","render404","JSON","stringify","handleRedirect","redirect","destination","pageProps","__N_REDIRECT","__N_REDIRECT_STATUS","__N_REDIRECT_BASE_PATH","startsWith","PermanentRedirect","generateEtags","poweredByHeader","type","withPropagatedContext","trace","spanName","SERVER","attributes"],"mappings":"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","ignoreList":[0]}